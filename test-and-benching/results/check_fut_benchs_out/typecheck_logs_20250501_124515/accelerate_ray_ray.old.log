# TySolve.solve
## constraints
"[]a" ~ "[]a\8320"
"[]b" ~ "[]b\8321"
"[](a, b)" ~ "[](a\8320, b\8321)"
## typarams
["(\"a\",(0,Unlifted,NoLoc))","(\"b\",(0,Unlifted,NoLoc))"]
## tyvars
[("a\8320",(3,TyVarFree NoLoc Unlifted)),("b\8321",(3,TyVarFree NoLoc Unlifted))]
## solution
([],[("a\8320",Right "a"),("b\8321",Right "b")])

# TySolve.solve
## constraints
"[]a" ~ "[]a\8320"
"[]b" ~ "[]b\8321"
"[](a, b)" ~ "[](a\8320, b\8321)"
## typarams
["(\"a\",(0,Unlifted,NoLoc))","(\"b\",(0,Unlifted,NoLoc))"]
## tyvars
[("a\8320",(3,TyVarFree NoLoc Unlifted)),("b\8321",(3,TyVarFree NoLoc Unlifted))]
## solution
([],[("a\8320",Right "a"),("b\8321",Right "b")])

# TySolve.solve
## constraints
"[]b" ~ "[]a\8325"
"[]c" ~ "[]b\8326"
"[]a" ~ "[]a\8323"
"[](a\8325, b\8326)" ~ "[]b\8324"
"[](a\8323, b\8324)" ~ "[](t\8320, (t\8321, t\8322))"
"[](a, b, c)" ~ "[](t\8320, t\8321, t\8322)"
## typarams
["(\"a\",(0,Unlifted,NoLoc))","(\"b\",(0,Unlifted,NoLoc))","(\"c\",(0,Unlifted,NoLoc))"]
## tyvars
[("t\8320",(5,TyVarFree NoLoc Lifted)),("t\8321",(5,TyVarFree NoLoc Lifted)),("t\8322",(5,TyVarFree NoLoc Lifted)),("a\8323",(4,TyVarFree NoLoc Unlifted)),("b\8324",(4,TyVarFree NoLoc Unlifted)),("a\8325",(4,TyVarFree NoLoc Unlifted)),("b\8326",(4,TyVarFree NoLoc Unlifted))]
## solution
([],[("t\8320",Right "a"),("t\8321",Right "b"),("t\8322",Right "c"),("a\8323",Right "a"),("b\8324",Right "(b, c)"),("a\8325",Right "b"),("b\8326",Right "c")])

# TySolve.solve
## constraints
"[]b" ~ "[]a\8326"
"[]c" ~ "[]b\8327"
"[]d" ~ "[]c\8328"
"[]a" ~ "[]a\8324"
"[](a\8326, b\8327, c\8328)" ~ "[]b\8325"
"[](a\8324, b\8325)" ~ "[](t\8320, (t\8321, t\8322, t\8323))"
"[](a, b, c, d)" ~ "[](t\8320, t\8321, t\8322, t\8323)"
## typarams
["(\"a\",(0,Unlifted,NoLoc))","(\"b\",(0,Unlifted,NoLoc))","(\"c\",(0,Unlifted,NoLoc))","(\"d\",(0,Unlifted,NoLoc))"]
## tyvars
[("t\8320",(6,TyVarFree NoLoc Lifted)),("t\8321",(6,TyVarFree NoLoc Lifted)),("t\8322",(6,TyVarFree NoLoc Lifted)),("t\8323",(6,TyVarFree NoLoc Lifted)),("a\8324",(5,TyVarFree NoLoc Unlifted)),("b\8325",(5,TyVarFree NoLoc Unlifted)),("a\8326",(5,TyVarFree NoLoc Unlifted)),("b\8327",(5,TyVarFree NoLoc Unlifted)),("c\8328",(5,TyVarFree NoLoc Unlifted))]
## solution
([],[("t\8320",Right "a"),("t\8321",Right "b"),("t\8322",Right "c"),("t\8323",Right "d"),("a\8324",Right "a"),("b\8325",Right "(b, c, d)"),("a\8326",Right "b"),("b\8327",Right "c"),("c\8328",Right "d")])

# TySolve.solve
## constraints
"[]b" ~ "[]a\8327"
"[]c" ~ "[]b\8328"
"[]d" ~ "[]c\8329"
"[]e" ~ "[]d\8321\8320"
"[]a" ~ "[]a\8325"
"[](a\8327, b\8328, c\8329, d\8321\8320)" ~ "[]b\8326"
"[](a\8325, b\8326)" ~ "[](t\8320, (t\8321, t\8322, t\8323, t\8324))"
"[](a, b, c, d, e)" ~ "[](t\8320, t\8321, t\8322, t\8323, t\8324)"
## typarams
["(\"a\",(0,Unlifted,NoLoc))","(\"b\",(0,Unlifted,NoLoc))","(\"c\",(0,Unlifted,NoLoc))","(\"d\",(0,Unlifted,NoLoc))","(\"e\",(0,Unlifted,NoLoc))"]
## tyvars
[("t\8320",(7,TyVarFree NoLoc Lifted)),("t\8321",(7,TyVarFree NoLoc Lifted)),("t\8322",(7,TyVarFree NoLoc Lifted)),("t\8323",(7,TyVarFree NoLoc Lifted)),("t\8324",(7,TyVarFree NoLoc Lifted)),("a\8325",(6,TyVarFree NoLoc Unlifted)),("b\8326",(6,TyVarFree NoLoc Unlifted)),("a\8327",(6,TyVarFree NoLoc Unlifted)),("b\8328",(6,TyVarFree NoLoc Unlifted)),("c\8329",(6,TyVarFree NoLoc Unlifted)),("d\8321\8320",(6,TyVarFree NoLoc Unlifted))]
## solution
([],[("t\8320",Right "a"),("t\8321",Right "b"),("t\8322",Right "c"),("t\8323",Right "d"),("t\8324",Right "e"),("a\8325",Right "a"),("b\8326",Right "(b, c, d, e)"),("a\8327",Right "b"),("b\8328",Right "c"),("c\8329",Right "d"),("d\8321\8320",Right "e")])

# TySolve.solve
## constraints
"[](a, b)" ~ "[](a\8320, b\8321)"
"([]a, []b)" ~ "([]a\8320, []b\8321)"
## typarams
["(\"a\",(0,Unlifted,NoLoc))","(\"b\",(0,Unlifted,NoLoc))"]
## tyvars
[("a\8320",(2,TyVarFree NoLoc Unlifted)),("b\8321",(2,TyVarFree NoLoc Unlifted))]
## solution
([],[("a\8320",Right "a"),("b\8321",Right "b")])

# TySolve.solve
## constraints
"[](a, b)" ~ "[](a\8320, b\8321)"
"([]a, []b)" ~ "([]a\8320, []b\8321)"
## typarams
["(\"a\",(0,Unlifted,NoLoc))","(\"b\",(0,Unlifted,NoLoc))"]
## tyvars
[("a\8320",(2,TyVarFree NoLoc Unlifted)),("b\8321",(2,TyVarFree NoLoc Unlifted))]
## solution
([],[("a\8320",Right "a"),("b\8321",Right "b")])

# TySolve.solve
## constraints
"t\8329" ~ "[]t\8329\8321\8327"
"t\8321\8325" ~ "[]t\8321\8325\8321\8328"
"t\8321\8326" ~ "[]t\8321\8326\8321\8329"
"t\8321\8320" ~ "[]t\8321\8320\8322\8320"
"[](a, b, c)" ~ "[](t\8322, t\8323, t\8324)"
"[](t\8322, (t\8323, t\8324))" ~ "[](a\8320, b\8321)"
"(t\8329, t\8321\8320)" ~ "([]a\8320, []b\8321)"
"t\8321\8320" ~ "[](a\8321\8321, b\8321\8322)"
"(t\8321\8325, t\8321\8326)" ~ "([]a\8321\8321, []b\8321\8322)"
"([]a, []b, []c)" ~ "(t\8329, t\8321\8325, t\8321\8326)"
## typarams
["(\"a\",(0,Unlifted,NoLoc))","(\"b\",(0,Unlifted,NoLoc))","(\"c\",(0,Unlifted,NoLoc))"]
## tyvars
[("a\8320",(2,TyVarFree NoLoc Unlifted)),("b\8321",(2,TyVarFree NoLoc Unlifted)),("t\8322",(3,TyVarFree NoLoc Lifted)),("t\8323",(3,TyVarFree NoLoc Lifted)),("t\8324",(3,TyVarFree NoLoc Lifted)),("t\8329",(3,TyVarFree NoLoc Lifted)),("t\8321\8320",(3,TyVarFree NoLoc Lifted)),("a\8321\8321",(4,TyVarFree NoLoc Unlifted)),("b\8321\8322",(4,TyVarFree NoLoc Unlifted)),("t\8321\8325",(5,TyVarFree NoLoc Lifted)),("t\8321\8326",(5,TyVarFree NoLoc Lifted)),("t\8329\8321\8327",(3,TyVarFree NoLoc Lifted)),("t\8321\8325\8321\8328",(5,TyVarFree NoLoc Lifted)),("t\8321\8326\8321\8329",(5,TyVarFree NoLoc Lifted)),("t\8321\8320\8322\8320",(3,TyVarFree NoLoc Lifted))]
## solution
([],[("a\8320",Right "a"),("b\8321",Right "(b, c)"),("t\8322",Right "a"),("t\8323",Right "b"),("t\8324",Right "c"),("t\8329",Right "[]a"),("t\8321\8320",Right "[](b, c)"),("a\8321\8321",Right "b"),("b\8321\8322",Right "c"),("t\8321\8325",Right "[]b"),("t\8321\8326",Right "[]c"),("t\8329\8321\8327",Right "a"),("t\8321\8325\8321\8328",Right "b"),("t\8321\8326\8321\8329",Right "c"),("t\8321\8320\8322\8320",Right "(b, c)")])

# TySolve.solve
## constraints
"t\8321\8321" ~ "[]t\8321\8321\8322\8320"
"t\8321\8322" ~ "[]t\8321\8322\8322\8321"
"t\8321\8328" ~ "[]t\8321\8328\8322\8322"
"t\8321\8329" ~ "[]t\8321\8329\8322\8323"
"t\8321\8323" ~ "[]t\8321\8323\8322\8324"
"[](a, b, c, d)" ~ "[](t\8323, t\8324, t\8325, t\8326)"
"[](t\8323, t\8324, (t\8325, t\8326))" ~ "[](a\8320, b\8321, c\8322)"
"(t\8321\8321, t\8321\8322, t\8321\8323)" ~ "([]a\8320, []b\8321, []c\8322)"
"t\8321\8323" ~ "[](a\8321\8324, b\8321\8325)"
"(t\8321\8328, t\8321\8329)" ~ "([]a\8321\8324, []b\8321\8325)"
"([]a, []b, []c, []d)" ~ "(t\8321\8321, t\8321\8322, t\8321\8328, t\8321\8329)"
## typarams
["(\"a\",(0,Unlifted,NoLoc))","(\"b\",(0,Unlifted,NoLoc))","(\"c\",(0,Unlifted,NoLoc))","(\"d\",(0,Unlifted,NoLoc))"]
## tyvars
[("a\8320",(2,TyVarFree NoLoc Unlifted)),("b\8321",(2,TyVarFree NoLoc Unlifted)),("c\8322",(2,TyVarFree NoLoc Unlifted)),("t\8323",(3,TyVarFree NoLoc Lifted)),("t\8324",(3,TyVarFree NoLoc Lifted)),("t\8325",(3,TyVarFree NoLoc Lifted)),("t\8326",(3,TyVarFree NoLoc Lifted)),("t\8321\8321",(3,TyVarFree NoLoc Lifted)),("t\8321\8322",(3,TyVarFree NoLoc Lifted)),("t\8321\8323",(3,TyVarFree NoLoc Lifted)),("a\8321\8324",(4,TyVarFree NoLoc Unlifted)),("b\8321\8325",(4,TyVarFree NoLoc Unlifted)),("t\8321\8328",(5,TyVarFree NoLoc Lifted)),("t\8321\8329",(5,TyVarFree NoLoc Lifted)),("t\8321\8321\8322\8320",(3,TyVarFree NoLoc Lifted)),("t\8321\8322\8322\8321",(3,TyVarFree NoLoc Lifted)),("t\8321\8328\8322\8322",(5,TyVarFree NoLoc Lifted)),("t\8321\8329\8322\8323",(5,TyVarFree NoLoc Lifted)),("t\8321\8323\8322\8324",(3,TyVarFree NoLoc Lifted))]
## solution
([],[("a\8320",Right "a"),("b\8321",Right "b"),("c\8322",Right "(c, d)"),("t\8323",Right "a"),("t\8324",Right "b"),("t\8325",Right "c"),("t\8326",Right "d"),("t\8321\8321",Right "[]a"),("t\8321\8322",Right "[]b"),("t\8321\8323",Right "[](c, d)"),("a\8321\8324",Right "c"),("b\8321\8325",Right "d"),("t\8321\8328",Right "[]c"),("t\8321\8329",Right "[]d"),("t\8321\8321\8322\8320",Right "a"),("t\8321\8322\8322\8321",Right "b"),("t\8321\8328\8322\8322",Right "c"),("t\8321\8329\8322\8323",Right "d"),("t\8321\8323\8322\8324",Right "(c, d)")])

# TySolve.solve
## constraints
"t\8321\8323" ~ "[]t\8321\8323\8322\8323"
"t\8321\8324" ~ "[]t\8321\8324\8322\8324"
"t\8321\8325" ~ "[]t\8321\8325\8322\8325"
"t\8322\8321" ~ "[]t\8322\8321\8322\8326"
"t\8322\8322" ~ "[]t\8322\8322\8322\8327"
"t\8321\8326" ~ "[]t\8321\8326\8322\8328"
"[](a, b, c, d, e)" ~ "[](t\8324, t\8325, t\8326, t\8327, t\8328)"
"[](t\8324, t\8325, t\8326, (t\8327, t\8328))" ~ "[](a\8320, b\8321, c\8322, d\8323)"
"(t\8321\8323, t\8321\8324, t\8321\8325, t\8321\8326)" ~ "([]a\8320, []b\8321, []c\8322, []d\8323)"
"t\8321\8326" ~ "[](a\8321\8327, b\8321\8328)"
"(t\8322\8321, t\8322\8322)" ~ "([]a\8321\8327, []b\8321\8328)"
"([]a, []b, []c, []d, []e)" ~ "(t\8321\8323, t\8321\8324, t\8321\8325, t\8322\8321, t\8322\8322)"
## typarams
["(\"a\",(0,Unlifted,NoLoc))","(\"b\",(0,Unlifted,NoLoc))","(\"c\",(0,Unlifted,NoLoc))","(\"d\",(0,Unlifted,NoLoc))","(\"e\",(0,Unlifted,NoLoc))"]
## tyvars
[("a\8320",(2,TyVarFree NoLoc Unlifted)),("b\8321",(2,TyVarFree NoLoc Unlifted)),("c\8322",(2,TyVarFree NoLoc Unlifted)),("d\8323",(2,TyVarFree NoLoc Unlifted)),("t\8324",(3,TyVarFree NoLoc Lifted)),("t\8325",(3,TyVarFree NoLoc Lifted)),("t\8326",(3,TyVarFree NoLoc Lifted)),("t\8327",(3,TyVarFree NoLoc Lifted)),("t\8328",(3,TyVarFree NoLoc Lifted)),("t\8321\8323",(3,TyVarFree NoLoc Lifted)),("t\8321\8324",(3,TyVarFree NoLoc Lifted)),("t\8321\8325",(3,TyVarFree NoLoc Lifted)),("t\8321\8326",(3,TyVarFree NoLoc Lifted)),("a\8321\8327",(4,TyVarFree NoLoc Unlifted)),("b\8321\8328",(4,TyVarFree NoLoc Unlifted)),("t\8322\8321",(5,TyVarFree NoLoc Lifted)),("t\8322\8322",(5,TyVarFree NoLoc Lifted)),("t\8321\8323\8322\8323",(3,TyVarFree NoLoc Lifted)),("t\8321\8324\8322\8324",(3,TyVarFree NoLoc Lifted)),("t\8321\8325\8322\8325",(3,TyVarFree NoLoc Lifted)),("t\8322\8321\8322\8326",(5,TyVarFree NoLoc Lifted)),("t\8322\8322\8322\8327",(5,TyVarFree NoLoc Lifted)),("t\8321\8326\8322\8328",(3,TyVarFree NoLoc Lifted))]
## solution
([],[("a\8320",Right "a"),("b\8321",Right "b"),("c\8322",Right "c"),("d\8323",Right "(d, e)"),("t\8324",Right "a"),("t\8325",Right "b"),("t\8326",Right "c"),("t\8327",Right "d"),("t\8328",Right "e"),("t\8321\8323",Right "[]a"),("t\8321\8324",Right "[]b"),("t\8321\8325",Right "[]c"),("t\8321\8326",Right "[](d, e)"),("a\8321\8327",Right "d"),("b\8321\8328",Right "e"),("t\8322\8321",Right "[]d"),("t\8322\8322",Right "[]e"),("t\8321\8323\8322\8323",Right "a"),("t\8321\8324\8322\8324",Right "b"),("t\8321\8325\8322\8325",Right "c"),("t\8322\8321\8322\8326",Right "d"),("t\8322\8322\8322\8327",Right "e"),("t\8321\8326\8322\8328",Right "(d, e)")])

# TySolve.solve
## constraints
"[]a" ~ "[]a"
"[]x" ~ "[]x"
## typarams
["(\"a\",(0,Unlifted,NoLoc))","(\"x\",(0,Unlifted,NoLoc))"]
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"a -> x" ~ "a\8320 -> x\8321"
"[]a" ~ "[]a\8320"
"[]x" ~ "[]x\8321"
## typarams
["(\"a\",(0,Unlifted,NoLoc))","(\"x\",(0,Unlifted,NoLoc))"]
## tyvars
[("a\8320",(3,TyVarFree NoLoc Unlifted)),("x\8321",(3,TyVarFree NoLoc Unlifted))]
## solution
([],[("a\8320",Right "a"),("x\8321",Right "x")])

# TySolve.solve
## constraints
"t\8322" ~ "a"
"t\8323" ~ "b"
"[]a" ~ "[]a\8328"
"[]b" ~ "[]b\8329"
"(t\8322, t\8323) -> x" ~ "a\8320 -> x\8321"
"[](a\8328, b\8329)" ~ "[]a\8320"
"[]x" ~ "[]x\8321"
## typarams
["(\"a\",(0,Unlifted,NoLoc))","(\"b\",(0,Unlifted,NoLoc))","(\"x\",(0,Unlifted,NoLoc))"]
## tyvars
[("a\8320",(4,TyVarFree NoLoc Unlifted)),("x\8321",(4,TyVarFree NoLoc Unlifted)),("t\8322",(5,TyVarFree NoLoc Lifted)),("t\8323",(5,TyVarFree NoLoc Lifted)),("a\8328",(4,TyVarFree NoLoc Unlifted)),("b\8329",(4,TyVarFree NoLoc Unlifted))]
## solution
([],[("a\8320",Right "(a, b)"),("x\8321",Right "x"),("t\8322",Right "a"),("t\8323",Right "b"),("a\8328",Right "a"),("b\8329",Right "b")])

# TySolve.solve
## constraints
"t\8322" ~ "a"
"t\8323" ~ "b"
"t\8324" ~ "c"
"[]a" ~ "[]a\8321\8321"
"[]b" ~ "[]b\8321\8322"
"[]c" ~ "[]c\8321\8323"
"(t\8322, t\8323, t\8324) -> x" ~ "a\8320 -> x\8321"
"[](a\8321\8321, b\8321\8322, c\8321\8323)" ~ "[]a\8320"
"[]x" ~ "[]x\8321"
## typarams
["(\"a\",(0,Unlifted,NoLoc))","(\"b\",(0,Unlifted,NoLoc))","(\"c\",(0,Unlifted,NoLoc))","(\"x\",(0,Unlifted,NoLoc))"]
## tyvars
[("a\8320",(5,TyVarFree NoLoc Unlifted)),("x\8321",(5,TyVarFree NoLoc Unlifted)),("t\8322",(6,TyVarFree NoLoc Lifted)),("t\8323",(6,TyVarFree NoLoc Lifted)),("t\8324",(6,TyVarFree NoLoc Lifted)),("a\8321\8321",(5,TyVarFree NoLoc Unlifted)),("b\8321\8322",(5,TyVarFree NoLoc Unlifted)),("c\8321\8323",(5,TyVarFree NoLoc Unlifted))]
## solution
([],[("a\8320",Right "(a, b, c)"),("x\8321",Right "x"),("t\8322",Right "a"),("t\8323",Right "b"),("t\8324",Right "c"),("a\8321\8321",Right "a"),("b\8321\8322",Right "b"),("c\8321\8323",Right "c")])

# TySolve.solve
## constraints
"t\8322" ~ "a"
"t\8323" ~ "b"
"t\8324" ~ "c"
"t\8325" ~ "d"
"[]a" ~ "[]a\8321\8324"
"[]b" ~ "[]b\8321\8325"
"[]c" ~ "[]c\8321\8326"
"[]d" ~ "[]d\8321\8327"
"(t\8322, t\8323, t\8324, t\8325) -> x" ~ "a\8320 -> x\8321"
"[](a\8321\8324, b\8321\8325, c\8321\8326, d\8321\8327)" ~ "[]a\8320"
"[]x" ~ "[]x\8321"
## typarams
["(\"a\",(0,Unlifted,NoLoc))","(\"b\",(0,Unlifted,NoLoc))","(\"c\",(0,Unlifted,NoLoc))","(\"d\",(0,Unlifted,NoLoc))","(\"x\",(0,Unlifted,NoLoc))"]
## tyvars
[("a\8320",(6,TyVarFree NoLoc Unlifted)),("x\8321",(6,TyVarFree NoLoc Unlifted)),("t\8322",(7,TyVarFree NoLoc Lifted)),("t\8323",(7,TyVarFree NoLoc Lifted)),("t\8324",(7,TyVarFree NoLoc Lifted)),("t\8325",(7,TyVarFree NoLoc Lifted)),("a\8321\8324",(6,TyVarFree NoLoc Unlifted)),("b\8321\8325",(6,TyVarFree NoLoc Unlifted)),("c\8321\8326",(6,TyVarFree NoLoc Unlifted)),("d\8321\8327",(6,TyVarFree NoLoc Unlifted))]
## solution
([],[("a\8320",Right "(a, b, c, d)"),("x\8321",Right "x"),("t\8322",Right "a"),("t\8323",Right "b"),("t\8324",Right "c"),("t\8325",Right "d"),("a\8321\8324",Right "a"),("b\8321\8325",Right "b"),("c\8321\8326",Right "c"),("d\8321\8327",Right "d")])

# TySolve.solve
## constraints
"t\8322" ~ "a"
"t\8323" ~ "b"
"t\8324" ~ "c"
"t\8325" ~ "d"
"t\8326" ~ "e"
"[]a" ~ "[]a\8321\8327"
"[]b" ~ "[]b\8321\8328"
"[]c" ~ "[]c\8321\8329"
"[]d" ~ "[]d\8322\8320"
"[]e" ~ "[]e\8322\8321"
"(t\8322, t\8323, t\8324, t\8325, t\8326) -> x" ~ "a\8320 -> x\8321"
"[](a\8321\8327, b\8321\8328, c\8321\8329, d\8322\8320, e\8322\8321)" ~ "[]a\8320"
"[]x" ~ "[]x\8321"
## typarams
["(\"a\",(0,Unlifted,NoLoc))","(\"b\",(0,Unlifted,NoLoc))","(\"c\",(0,Unlifted,NoLoc))","(\"d\",(0,Unlifted,NoLoc))","(\"e\",(0,Unlifted,NoLoc))","(\"x\",(0,Unlifted,NoLoc))"]
## tyvars
[("a\8320",(7,TyVarFree NoLoc Unlifted)),("x\8321",(7,TyVarFree NoLoc Unlifted)),("t\8322",(8,TyVarFree NoLoc Lifted)),("t\8323",(8,TyVarFree NoLoc Lifted)),("t\8324",(8,TyVarFree NoLoc Lifted)),("t\8325",(8,TyVarFree NoLoc Lifted)),("t\8326",(8,TyVarFree NoLoc Lifted)),("a\8321\8327",(7,TyVarFree NoLoc Unlifted)),("b\8321\8328",(7,TyVarFree NoLoc Unlifted)),("c\8321\8329",(7,TyVarFree NoLoc Unlifted)),("d\8322\8320",(7,TyVarFree NoLoc Unlifted)),("e\8322\8321",(7,TyVarFree NoLoc Unlifted))]
## solution
([],[("a\8320",Right "(a, b, c, d, e)"),("x\8321",Right "x"),("t\8322",Right "a"),("t\8323",Right "b"),("t\8324",Right "c"),("t\8325",Right "d"),("t\8326",Right "e"),("a\8321\8327",Right "a"),("b\8321\8328",Right "b"),("c\8321\8329",Right "c"),("d\8322\8320",Right "d"),("e\8322\8321",Right "e")])

# TySolve.solve
## constraints
"a -> a -> a" ~ "a\8320 -> a\8320 -> a\8320"
"a" ~ "a\8320"
"[]a" ~ "[]a\8320"
"a" ~ "a\8320"
## typarams
["(\"a\",(0,Unlifted,NoLoc))"]
## tyvars
[("a\8320",(4,TyVarFree NoLoc Unlifted))]
## solution
([],[("a\8320",Right "a")])

# TySolve.solve
## constraints
"a -> a -> a" ~ "a\8320 -> a\8320 -> a\8320"
"a" ~ "a\8320"
"[]a" ~ "[]a\8320"
"a" ~ "a\8320"
## typarams
["(\"a\",(0,Unlifted,NoLoc))"]
## tyvars
[("a\8320",(4,TyVarFree NoLoc Unlifted))]
## solution
([],[("a\8320",Right "a")])

# TySolve.solve
## constraints
"range\8328" ~ "[]range\8328\8322\8325"
"t\8326" ~ "num\8325"
"num\8325" ~ "num\8327"
"num\8325" ~ "i64"
"range\8328" ~ "[]num\8325"
"t\8324 -> a" ~ "a\8322 -> x\8323"
"range\8328" ~ "[]a\8322"
"num\8321" ~ "i64"
"[]x\8323" ~ "[]a\8320"
"a -> a -> a" ~ "a\8320 -> a\8320 -> a\8320"
"a" ~ "a\8320"
"[]i64" ~ "[]i64"
"[]a" ~ "[]a\8320"
"[]a" ~ "[]a\8320"
## typarams
["(\"a\",(0,Unlifted,NoLoc))"]
## tyvars
[("a\8320",(6,TyVarFree NoLoc Unlifted)),("num\8321",(6,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("a\8322",(6,TyVarFree NoLoc Unlifted)),("x\8323",(6,TyVarFree NoLoc Unlifted)),("t\8324",(7,TyVarFree NoLoc Lifted)),("num\8325",(6,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8326",(6,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64])),("num\8327",(6,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("range\8328",(6,TyVarFree NoLoc Unlifted)),("range\8328\8322\8325",(6,TyVarFree NoLoc Unlifted))]
## solution
([],[("a\8320",Right "a"),("num\8321",Right "i64"),("a\8322",Right "i64"),("x\8323",Right "a"),("t\8324",Right "i64"),("num\8325",Right "i64"),("t\8326",Right "i64"),("num\8327",Right "i64"),("range\8328",Right "[]i64"),("range\8328\8322\8325",Right "i64")])

# TySolve.solve
## constraints
"num\8321" ~ "i64"
"[]a" ~ "[]a\8320"
"a -> a -> a" ~ "a\8320 -> a\8320 -> a\8320"
"a" ~ "a\8320"
"[]i64" ~ "[]i64"
"[]a" ~ "[]a\8320"
"[]a" ~ "[]a\8320"
## typarams
["(\"a\",(0,Unlifted,NoLoc))"]
## tyvars
[("a\8320",(6,TyVarFree NoLoc Unlifted)),("num\8321",(6,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("a\8320",Right "a"),("num\8321",Right "i64")])

# TySolve.solve
## constraints
"num\8321" ~ "i64"
"[][]a" ~ "[][]a\8320"
"a -> a -> a" ~ "a\8320 -> a\8320 -> a\8320"
"a" ~ "a\8320"
"[](i64, i64)" ~ "[](i64, i64)"
"[]a" ~ "[]a\8320"
"[][]a" ~ "[][]a\8320"
## typarams
["(\"a\",(0,Unlifted,NoLoc))"]
## tyvars
[("a\8320",(6,TyVarFree NoLoc Unlifted)),("num\8321",(6,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("a\8320",Right "a"),("num\8321",Right "i64")])

# TySolve.solve
## constraints
"num\8321" ~ "i64"
"[][][]a" ~ "[][][]a\8320"
"a -> a -> a" ~ "a\8320 -> a\8320 -> a\8320"
"a" ~ "a\8320"
"[](i64, i64, i64)" ~ "[](i64, i64, i64)"
"[]a" ~ "[]a\8320"
"[][][]a" ~ "[][][]a\8320"
## typarams
["(\"a\",(0,Unlifted,NoLoc))"]
## tyvars
[("a\8320",(6,TyVarFree NoLoc Unlifted)),("num\8321",(6,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("a\8320",Right "a"),("num\8321",Right "i64")])

# TySolve.solve
## constraints
"a -> a -> a" ~ "a\8320 -> a\8320 -> a\8320"
"a" ~ "a\8320"
"[]a" ~ "[]a\8320"
"[]a" ~ "[]a\8320"
## typarams
["(\"a\",(0,Unlifted,NoLoc))"]
## tyvars
[("a\8320",(4,TyVarFree NoLoc Unlifted))]
## solution
([],[("a\8320",Right "a")])

# TySolve.solve
## constraints
"index\8322\8321" ~ "[]index\8322\8321\8323\8324"
"index\8322\8327" ~ "[]index\8322\8327\8323\8325"
"t\8321\8324" ~ "[]t\8321\8324\8323\8326"
"t\8321\8325" ~ "[]t\8321\8325\8323\8327"
"t\8320" ~ "a"
"bool" ~ "bool"
"num\8323" ~ "if_t\8325"
"num\8324" ~ "if_t\8325"
"num\8327" ~ "i32"
"(x: t\8320) -> if_t\8325" ~ "a\8326 -> i64"
"[]a" ~ "[]a\8326"
"(t\8321\8324, t\8321\8325)" ~ "([]a\8326, []i64)"
"i64" ~ "num\8321\8326"
"t\8321\8328" ~ "num\8321\8327"
"index\8321\8329" ~ "index_elem\8322\8320"
"t\8321\8325" ~ "[]index_elem\8322\8320"
"i64" ~ "index\8321\8329"
"index\8322\8321" ~ "[]index_elem\8322\8322"
"t\8321\8324" ~ "[]index_elem\8322\8322"
"t\8322\8324" ~ "num\8322\8323"
"index\8322\8325" ~ "index_elem\8322\8326"
"t\8321\8325" ~ "[]index_elem\8322\8326"
"i64" ~ "index\8322\8325"
"index\8322\8327" ~ "[]index_elem\8322\8328"
"t\8321\8324" ~ "[]index_elem\8322\8328"
"i64" ~ "t\8322\8329"
"i64" ~ "t\8322\8329"
"t\8322\8329" ~ "i64"
"([]a, []a)" ~ "(index\8322\8321, index\8322\8327)"
## typarams
["(\"a\",(0,Unlifted,NoLoc))"]
## tyvars
[("t\8320",(4,TyVarFree NoLoc Lifted)),("num\8323",(5,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("num\8324",(5,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("if_t\8325",(5,TyVarFree NoLoc SizeLifted)),("a\8326",(3,TyVarFree NoLoc Unlifted)),("num\8327",(3,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8321\8324",(4,TyVarFree NoLoc Lifted)),("t\8321\8325",(4,TyVarFree NoLoc Lifted)),("num\8321\8326",(5,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("num\8321\8327",(5,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8321\8328",(5,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64])),("index\8321\8329",(5,TyVarFree NoLoc Unlifted)),("index_elem\8322\8320",(5,TyVarFree NoLoc Unlifted)),("index\8322\8321",(5,TyVarFree NoLoc Unlifted)),("index_elem\8322\8322",(5,TyVarFree NoLoc Unlifted)),("num\8322\8323",(5,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8322\8324",(5,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64])),("index\8322\8325",(5,TyVarFree NoLoc Unlifted)),("index_elem\8322\8326",(5,TyVarFree NoLoc Unlifted)),("index\8322\8327",(5,TyVarFree NoLoc Unlifted)),("index_elem\8322\8328",(5,TyVarFree NoLoc Unlifted)),("t\8322\8329",(3,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("index\8322\8321\8323\8324",(5,TyVarFree NoLoc Unlifted)),("index\8322\8327\8323\8325",(5,TyVarFree NoLoc Unlifted)),("t\8321\8324\8323\8326",(4,TyVarFree NoLoc Lifted)),("t\8321\8325\8323\8327",(4,TyVarFree NoLoc Lifted))]
## solution
([],[("t\8320",Right "a"),("num\8323",Right "i64"),("num\8324",Right "i64"),("if_t\8325",Right "i64"),("a\8326",Right "a"),("num\8327",Right "i32"),("t\8321\8324",Right "[]a"),("t\8321\8325",Right "[]i64"),("num\8321\8326",Right "i64"),("num\8321\8327",Left "[i8, i16, i32, i64]"),("t\8321\8328",Left "[i8, i16, i32, i64]"),("index\8321\8329",Right "i64"),("index_elem\8322\8320",Right "i64"),("index\8322\8321",Right "[]a"),("index_elem\8322\8322",Right "a"),("num\8322\8323",Left "[i8, i16, i32, i64]"),("t\8322\8324",Left "[i8, i16, i32, i64]"),("index\8322\8325",Right "i64"),("index_elem\8322\8326",Right "i64"),("index\8322\8327",Right "[]a"),("index_elem\8322\8328",Right "a"),("t\8322\8329",Right "i64"),("index\8322\8321\8323\8324",Right "a"),("index\8322\8327\8323\8325",Right "a"),("t\8321\8324\8323\8326",Right "a"),("t\8321\8325\8323\8327",Right "i64")])

# TySolve.solve
## constraints
"index\8322\8325" ~ "[]index\8322\8325\8329\8323"
"index\8326\8323" ~ "[]index\8326\8323\8329\8324"
"t\8321\8329" ~ "[]t\8321\8329\8329\8325"
"t\8321\8328" ~ "[]t\8321\8328\8329\8326"
"index\8324\8324" ~ "[]index\8324\8324\8329\8327"
"t\8320" ~ "a"
"t\8320" ~ "a"
"bool" ~ "bool"
"num\8326" ~ "if_t\8328"
"num\8327" ~ "if_t\8328"
"bool" ~ "bool"
"num\8323" ~ "if_t\8329"
"if_t\8328" ~ "if_t\8329"
"num\8321\8321" ~ "i32"
"(x: t\8320) -> if_t\8329" ~ "a\8321\8320 -> i64"
"[]a" ~ "[]a\8321\8320"
"(t\8321\8328, t\8321\8329)" ~ "([]a\8321\8320, []i64)"
"i64" ~ "num\8322\8320"
"t\8322\8322" ~ "num\8322\8321"
"index\8322\8323" ~ "index_elem\8322\8324"
"t\8321\8329" ~ "[]index_elem\8322\8324"
"i64" ~ "index\8322\8323"
"index\8322\8325" ~ "[]index_elem\8322\8326"
"t\8321\8328" ~ "[]index_elem\8322\8326"
"t\8322\8328" ~ "num\8322\8327"
"index\8322\8329" ~ "index_elem\8323\8320"
"t\8321\8329" ~ "[]index_elem\8323\8320"
"i64" ~ "index\8322\8329"
"t\8323\8323" ~ "num\8323\8322"
"index\8323\8324" ~ "index_elem\8323\8325"
"t\8321\8329" ~ "[]index_elem\8323\8325"
"t\8323\8327" ~ "num\8323\8326"
"index\8323\8328" ~ "index_elem\8323\8329"
"t\8321\8329" ~ "[]index_elem\8323\8329"
"index\8323\8324" ~ "t\8323\8321"
"index\8323\8328" ~ "t\8323\8321"
"i64" ~ "t\8323\8321"
"index\8324\8324" ~ "[]index_elem\8324\8325"
"t\8321\8328" ~ "[]index_elem\8324\8325"
"t\8324\8327" ~ "num\8324\8326"
"index\8324\8328" ~ "index_elem\8324\8329"
"t\8321\8329" ~ "[]index_elem\8324\8329"
"index\8324\8328" ~ "i64"
"index\8324\8324" ~ "[]a"
"t\8325\8322" ~ "num\8325\8321"
"index\8325\8323" ~ "index_elem\8325\8324"
"t\8321\8329" ~ "[]index_elem\8325\8324"
"t\8325\8326" ~ "num\8325\8325"
"index\8325\8327" ~ "index_elem\8325\8328"
"t\8321\8329" ~ "[]index_elem\8325\8328"
"index\8325\8323" ~ "t\8325\8320"
"index\8325\8327" ~ "t\8325\8320"
"i64" ~ "t\8325\8320"
"index\8326\8323" ~ "[]index_elem\8326\8324"
"t\8321\8328" ~ "[]index_elem\8326\8324"
"t\8326\8328" ~ "num\8326\8327"
"index\8326\8329" ~ "index_elem\8327\8320"
"t\8321\8329" ~ "[]index_elem\8327\8320"
"i64" ~ "t\8326\8326"
"index\8326\8329" ~ "t\8326\8326"
"t\8327\8326" ~ "num\8327\8325"
"index\8327\8327" ~ "index_elem\8327\8328"
"t\8321\8329" ~ "[]index_elem\8327\8328"
"t\8326\8326" ~ "t\8326\8325"
"index\8327\8327" ~ "t\8326\8325"
"t\8326\8325" ~ "i64"
"index\8326\8323" ~ "[]a"
"i64" ~ "t\8328\8324"
"i64" ~ "t\8328\8324"
"t\8328\8324" ~ "t\8328\8323"
"i64" ~ "t\8328\8323"
"t\8328\8323" ~ "i64"
"([]a, []a, []a)" ~ "(index\8322\8325, []a, []a)"
## typarams
["(\"a\",(0,Unlifted,NoLoc))"]
## tyvars
[("t\8320",(5,TyVarFree NoLoc Lifted)),("num\8323",(6,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("num\8326",(6,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("num\8327",(6,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("if_t\8328",(6,TyVarFree NoLoc SizeLifted)),("if_t\8329",(6,TyVarFree NoLoc SizeLifted)),("a\8321\8320",(4,TyVarFree NoLoc Unlifted)),("num\8321\8321",(4,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8321\8328",(5,TyVarFree NoLoc Lifted)),("t\8321\8329",(5,TyVarFree NoLoc Lifted)),("num\8322\8320",(6,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("num\8322\8321",(6,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8322\8322",(6,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64])),("index\8322\8323",(6,TyVarFree NoLoc Unlifted)),("index_elem\8322\8324",(6,TyVarFree NoLoc Unlifted)),("index\8322\8325",(6,TyVarFree NoLoc Unlifted)),("index_elem\8322\8326",(6,TyVarFree NoLoc Unlifted)),("num\8322\8327",(6,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8322\8328",(6,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64])),("index\8322\8329",(6,TyVarFree NoLoc Unlifted)),("index_elem\8323\8320",(6,TyVarFree NoLoc Unlifted)),("t\8323\8321",(6,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("num\8323\8322",(6,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8323\8323",(6,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64])),("index\8323\8324",(6,TyVarFree NoLoc Unlifted)),("index_elem\8323\8325",(6,TyVarFree NoLoc Unlifted)),("num\8323\8326",(6,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8323\8327",(6,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64])),("index\8323\8328",(6,TyVarFree NoLoc Unlifted)),("index_elem\8323\8329",(6,TyVarFree NoLoc Unlifted)),("index\8324\8324",(6,TyVarFree NoLoc Unlifted)),("index_elem\8324\8325",(6,TyVarFree NoLoc Unlifted)),("num\8324\8326",(6,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8324\8327",(6,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64])),("index\8324\8328",(6,TyVarFree NoLoc Unlifted)),("index_elem\8324\8329",(6,TyVarFree NoLoc Unlifted)),("t\8325\8320",(6,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("num\8325\8321",(6,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8325\8322",(6,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64])),("index\8325\8323",(6,TyVarFree NoLoc Unlifted)),("index_elem\8325\8324",(6,TyVarFree NoLoc Unlifted)),("num\8325\8325",(6,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8325\8326",(6,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64])),("index\8325\8327",(6,TyVarFree NoLoc Unlifted)),("index_elem\8325\8328",(6,TyVarFree NoLoc Unlifted)),("index\8326\8323",(6,TyVarFree NoLoc Unlifted)),("index_elem\8326\8324",(6,TyVarFree NoLoc Unlifted)),("t\8326\8325",(6,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8326\8326",(6,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("num\8326\8327",(6,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8326\8328",(6,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64])),("index\8326\8329",(6,TyVarFree NoLoc Unlifted)),("index_elem\8327\8320",(6,TyVarFree NoLoc Unlifted)),("num\8327\8325",(6,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8327\8326",(6,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64])),("index\8327\8327",(6,TyVarFree NoLoc Unlifted)),("index_elem\8327\8328",(6,TyVarFree NoLoc Unlifted)),("t\8328\8323",(4,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8328\8324",(4,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("index\8322\8325\8329\8323",(6,TyVarFree NoLoc Unlifted)),("index\8326\8323\8329\8324",(6,TyVarFree NoLoc Unlifted)),("t\8321\8329\8329\8325",(5,TyVarFree NoLoc Lifted)),("t\8321\8328\8329\8326",(5,TyVarFree NoLoc Lifted)),("index\8324\8324\8329\8327",(6,TyVarFree NoLoc Unlifted))]
## solution
([],[("t\8320",Right "a"),("num\8323",Right "i64"),("num\8326",Right "i64"),("num\8327",Right "i64"),("if_t\8328",Right "i64"),("if_t\8329",Right "i64"),("a\8321\8320",Right "a"),("num\8321\8321",Right "i32"),("t\8321\8328",Right "[]a"),("t\8321\8329",Right "[]i64"),("num\8322\8320",Right "i64"),("num\8322\8321",Left "[i8, i16, i32, i64]"),("t\8322\8322",Left "[i8, i16, i32, i64]"),("index\8322\8323",Right "i64"),("index_elem\8322\8324",Right "i64"),("index\8322\8325",Right "[]a"),("index_elem\8322\8326",Right "a"),("num\8322\8327",Left "[i8, i16, i32, i64]"),("t\8322\8328",Left "[i8, i16, i32, i64]"),("index\8322\8329",Right "i64"),("index_elem\8323\8320",Right "i64"),("t\8323\8321",Right "i64"),("num\8323\8322",Left "[i8, i16, i32, i64]"),("t\8323\8323",Left "[i8, i16, i32, i64]"),("index\8323\8324",Right "i64"),("index_elem\8323\8325",Right "i64"),("num\8323\8326",Left "[i8, i16, i32, i64]"),("t\8323\8327",Left "[i8, i16, i32, i64]"),("index\8323\8328",Right "i64"),("index_elem\8323\8329",Right "i64"),("index\8324\8324",Right "[]a"),("index_elem\8324\8325",Right "a"),("num\8324\8326",Left "[i8, i16, i32, i64]"),("t\8324\8327",Left "[i8, i16, i32, i64]"),("index\8324\8328",Right "i64"),("index_elem\8324\8329",Right "i64"),("t\8325\8320",Right "i64"),("num\8325\8321",Left "[i8, i16, i32, i64]"),("t\8325\8322",Left "[i8, i16, i32, i64]"),("index\8325\8323",Right "i64"),("index_elem\8325\8324",Right "i64"),("num\8325\8325",Left "[i8, i16, i32, i64]"),("t\8325\8326",Left "[i8, i16, i32, i64]"),("index\8325\8327",Right "i64"),("index_elem\8325\8328",Right "i64"),("index\8326\8323",Right "[]a"),("index_elem\8326\8324",Right "a"),("t\8326\8325",Right "i64"),("t\8326\8326",Right "i64"),("num\8326\8327",Left "[i8, i16, i32, i64]"),("t\8326\8328",Left "[i8, i16, i32, i64]"),("index\8326\8329",Right "i64"),("index_elem\8327\8320",Right "i64"),("num\8327\8325",Left "[i8, i16, i32, i64]"),("t\8327\8326",Left "[i8, i16, i32, i64]"),("index\8327\8327",Right "i64"),("index_elem\8327\8328",Right "i64"),("t\8328\8323",Right "i64"),("t\8328\8324",Right "i64"),("index\8322\8325\8329\8323",Right "a"),("index\8326\8323\8329\8324",Right "a"),("t\8321\8329\8329\8325",Right "i64"),("t\8321\8328\8329\8326",Right "a"),("index\8324\8324\8329\8327",Right "a")])

# TySolve.solve
## constraints
"a -> bool" ~ "a\8322 -> x\8323"
"[]a" ~ "[]a\8322"
"t\8321 -> t\8321 -> t\8321" ~ "a\8320 -> a\8320 -> a\8320"
"bool" ~ "a\8320"
"[]x\8323" ~ "[]a\8320"
"bool" ~ "a\8320"
## typarams
["(\"a\",(0,Unlifted,NoLoc))"]
## tyvars
[("a\8320",(3,TyVarFree NoLoc Unlifted)),("t\8321",(3,TyVarPrim NoLoc [Bool])),("a\8322",(3,TyVarFree NoLoc Unlifted)),("x\8323",(3,TyVarFree NoLoc Unlifted))]
## solution
([],[("a\8320",Right "bool"),("t\8321",Right "bool"),("a\8322",Right "a"),("x\8323",Right "bool")])

# TySolve.solve
## constraints
"a -> bool" ~ "a\8322 -> x\8323"
"[]a" ~ "[]a\8322"
"t\8321 -> t\8321 -> t\8321" ~ "a\8320 -> a\8320 -> a\8320"
"bool" ~ "a\8320"
"[]x\8323" ~ "[]a\8320"
"bool" ~ "a\8320"
## typarams
["(\"a\",(0,Unlifted,NoLoc))"]
## tyvars
[("a\8320",(3,TyVarFree NoLoc Unlifted)),("t\8321",(3,TyVarPrim NoLoc [Bool])),("a\8322",(3,TyVarFree NoLoc Unlifted)),("x\8323",(3,TyVarFree NoLoc Unlifted))]
## solution
([],[("a\8320",Right "bool"),("t\8321",Right "bool"),("a\8322",Right "a"),("x\8323",Right "bool")])

# TySolve.solve
## constraints
"range\8327" ~ "[]range\8327\8321\8328"
"t\8325" ~ "num\8324"
"num\8324" ~ "num\8326"
"num\8324" ~ "i64"
"range\8327" ~ "[]num\8324"
"t\8323 -> t" ~ "a\8321 -> x\8322"
"range\8327" ~ "[]a\8321"
"[]x\8322" ~ "[]a\8320"
"[]i64" ~ "[]i64"
"[]t" ~ "[]a\8320"
"[]t" ~ "[]a\8320"
## typarams
["(\"t\",(0,Unlifted,NoLoc))"]
## tyvars
[("a\8320",(5,TyVarFree NoLoc Unlifted)),("a\8321",(5,TyVarFree NoLoc Unlifted)),("x\8322",(5,TyVarFree NoLoc Unlifted)),("t\8323",(6,TyVarFree NoLoc Lifted)),("num\8324",(5,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8325",(5,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64])),("num\8326",(5,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("range\8327",(5,TyVarFree NoLoc Unlifted)),("range\8327\8321\8328",(5,TyVarFree NoLoc Unlifted))]
## solution
([],[("a\8320",Right "t"),("a\8321",Right "i64"),("x\8322",Right "t"),("t\8323",Right "i64"),("num\8324",Right "i64"),("t\8325",Right "i64"),("num\8326",Right "i64"),("range\8327",Right "[]i64"),("range\8327\8321\8328",Right "i64")])

# TySolve.solve
## constraints
"[]t" ~ "[]a\8320"
"[]i64" ~ "[]i64"
"[]t" ~ "[]a\8320"
"[]t" ~ "[]a\8320"
## typarams
["(\"t\",(0,Unlifted,NoLoc))"]
## tyvars
[("a\8320",(4,TyVarFree NoLoc Unlifted))]
## solution
([],[("a\8320",Right "t")])

# TySolve.solve
## constraints
"[][]t" ~ "[][]a\8320"
"[](i64, i64)" ~ "[](i64, i64)"
"[]t" ~ "[]a\8320"
"[][]t" ~ "[][]a\8320"
## typarams
["(\"t\",(0,Unlifted,NoLoc))"]
## tyvars
[("a\8320",(4,TyVarFree NoLoc Unlifted))]
## solution
([],[("a\8320",Right "t")])

# TySolve.solve
## constraints
"[][][]t" ~ "[][][]a\8320"
"[](i64, i64, i64)" ~ "[](i64, i64, i64)"
"[]t" ~ "[]a\8320"
"[][][]t" ~ "[][][]a\8320"
## typarams
["(\"t\",(0,Unlifted,NoLoc))"]
## tyvars
[("a\8320",(4,TyVarFree NoLoc Unlifted))]
## solution
([],[("a\8320",Right "t")])

# TySolve.solve
## constraints
"t\8322\8322" ~ "[]t\8322\8322\8328\8324"
"t\8321\8322" ~ "[]t\8321\8322\8328\8325"
"index\8324\8325" ~ "[]index\8324\8325\8328\8326"
"t\8322" ~ "a"
"bool" ~ "bool"
"num\8325" ~ "if_t\8327"
"num\8326" ~ "if_t\8327"
"(x: t\8322) -> if_t\8327" ~ "a\8320 -> x\8321"
"[]a" ~ "[]a\8320"
"t\8321\8322" ~ "[]x\8321"
"t\8321\8324 -> t\8321\8324 -> t\8321\8324" ~ "a\8321\8323 -> a\8321\8323 -> a\8321\8323"
"num\8321\8325" ~ "a\8321\8323"
"t\8321\8322" ~ "[]a\8321\8323"
"t\8322\8322" ~ "[]a\8321\8323"
"i64" ~ "t\8322\8323"
"num\8322\8324" ~ "t\8322\8323"
"i64" ~ "t\8323\8320"
"num\8323\8321" ~ "t\8323\8320"
"t\8323\8326" ~ "t\8323\8320"
"index\8323\8327" ~ "index_elem\8323\8328"
"t\8322\8322" ~ "[]index_elem\8323\8328"
"bool" ~ "bool"
"num\8322\8329" ~ "if_t\8323\8329"
"index\8323\8327" ~ "if_t\8323\8329"
"t\8324\8320" ~ "if_t\8323\8329"
"i64" ~ "t\8324\8320"
"index\8324\8325" ~ "[]index_elem\8324\8326"
"[]a" ~ "[]index_elem\8324\8326"
"(x: t\8324\8324) -> t\8324\8324" ~ "a\8324\8322 -> x\8324\8323"
"index\8324\8325" ~ "[]a\8324\8322"
"t\8325\8324" ~ "t\8325\8326"
"num\8325\8327" ~ "t\8325\8326"
"t\8325\8325" ~ "t\8326\8322"
"num\8326\8323" ~ "t\8326\8322"
"t\8326\8329" ~ "num\8326\8328"
"bool" ~ "bool"
"t\8326\8322" ~ "if_t\8327\8320"
"num\8326\8328" ~ "if_t\8327\8320"
"(f: t\8325\8324) -> (o: t\8325\8325) -> if_t\8327\8320" ~ "a\8325\8321 -> b\8325\8322 -> x\8325\8323"
"t\8321\8322" ~ "[]a\8325\8321"
"t\8322\8322" ~ "[]b\8325\8322"
"[]x\8324\8323" ~ "[]t\8324\8321"
"[]x\8325\8323" ~ "[]i64"
"[]a" ~ "[]t\8324\8321"
"[]a" ~ "[]t\8324\8321"
## typarams
["(\"a\",(0,Unlifted,NoLoc))"]
## tyvars
[("a\8320",(3,TyVarFree NoLoc Unlifted)),("x\8321",(3,TyVarFree NoLoc Unlifted)),("t\8322",(4,TyVarFree NoLoc Lifted)),("num\8325",(5,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("num\8326",(5,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("if_t\8327",(5,TyVarFree NoLoc SizeLifted)),("t\8321\8322",(4,TyVarFree NoLoc Lifted)),("a\8321\8323",(5,TyVarFree NoLoc Unlifted)),("t\8321\8324",(5,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("num\8321\8325",(5,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8322\8322",(6,TyVarFree NoLoc Lifted)),("t\8322\8323",(7,TyVarFree NoLoc Unlifted)),("num\8322\8324",(7,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("num\8322\8329",(7,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8323\8320",(7,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("num\8323\8321",(7,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8323\8326",(7,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64])),("index\8323\8327",(7,TyVarFree NoLoc Unlifted)),("index_elem\8323\8328",(7,TyVarFree NoLoc Unlifted)),("if_t\8323\8329",(7,TyVarFree NoLoc SizeLifted)),("t\8324\8320",(8,TyVarFree NoLoc Lifted)),("t\8324\8321",(9,TyVarFree NoLoc Unlifted)),("a\8324\8322",(9,TyVarFree NoLoc Unlifted)),("x\8324\8323",(9,TyVarFree NoLoc Unlifted)),("t\8324\8324",(10,TyVarFree NoLoc Lifted)),("index\8324\8325",(9,TyVarFree NoLoc Unlifted)),("index_elem\8324\8326",(9,TyVarFree NoLoc Unlifted)),("a\8325\8321",(9,TyVarFree NoLoc Unlifted)),("b\8325\8322",(9,TyVarFree NoLoc Unlifted)),("x\8325\8323",(9,TyVarFree NoLoc Unlifted)),("t\8325\8324",(10,TyVarFree NoLoc Lifted)),("t\8325\8325",(11,TyVarFree NoLoc Lifted)),("t\8325\8326",(12,TyVarFree NoLoc Unlifted)),("num\8325\8327",(12,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8326\8322",(12,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("num\8326\8323",(12,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("num\8326\8328",(12,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8326\8329",(12,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("if_t\8327\8320",(12,TyVarFree NoLoc SizeLifted)),("t\8322\8322\8328\8324",(6,TyVarFree NoLoc Lifted)),("t\8321\8322\8328\8325",(4,TyVarFree NoLoc Lifted)),("index\8324\8325\8328\8326",(9,TyVarFree NoLoc Unlifted))]
## solution
([],[("a\8320",Right "a"),("x\8321",Right "i64"),("t\8322",Right "a"),("num\8325",Right "i64"),("num\8326",Right "i64"),("if_t\8327",Right "i64"),("t\8321\8322",Right "[]i64"),("a\8321\8323",Right "i64"),("t\8321\8324",Right "i64"),("num\8321\8325",Right "i64"),("t\8322\8322",Right "[]i64"),("t\8322\8323",Right "i64"),("num\8322\8324",Right "i64"),("num\8322\8329",Right "i64"),("t\8323\8320",Right "i64"),("num\8323\8321",Right "i64"),("t\8323\8326",Right "i64"),("index\8323\8327",Right "i64"),("index_elem\8323\8328",Right "i64"),("if_t\8323\8329",Right "i64"),("t\8324\8320",Right "i64"),("t\8324\8321",Right "a"),("a\8324\8322",Right "a"),("x\8324\8323",Right "a"),("t\8324\8324",Right "a"),("index\8324\8325",Right "[]a"),("index_elem\8324\8326",Right "a"),("a\8325\8321",Right "i64"),("b\8325\8322",Right "i64"),("x\8325\8323",Right "i64"),("t\8325\8324",Right "i64"),("t\8325\8325",Right "i64"),("t\8325\8326",Right "i64"),("num\8325\8327",Right "i64"),("t\8326\8322",Right "i64"),("num\8326\8323",Right "i64"),("num\8326\8328",Right "i64"),("t\8326\8329",Right "i64"),("if_t\8327\8320",Right "i64"),("t\8322\8322\8328\8324",Right "i64"),("t\8321\8322\8328\8325",Right "i64"),("index\8324\8325\8328\8326",Right "a")])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u8" ~ "u8"
"i8" ~ "i8"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u16" ~ "u16"
"i16" ~ "i16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u32" ~ "u32"
"i32" ~ "i32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u64" ~ "u64"
"i64" ~ "i64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f16" ~ "f16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f32" ~ "f32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f64" ~ "f64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(i8, i8)" ~ "(i8, i8)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(i8, i8)" ~ "(i8, i8)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(i8, i8)" ~ "(i8, i8)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(i8, i8)" ~ "(i8, i8)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(i8, i8)" ~ "(i8, i8)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(i8, i8)" ~ "(i8, i8)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(i8, i8)" ~ "(i8, i8)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(i8, i8)" ~ "(i8, i8)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(i8, i8)" ~ "(i8, i8)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(i8, i8)" ~ "(i8, i8)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(i8, i8)" ~ "(i8, i8)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i8" ~ "i8"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(i8, i8)" ~ "(i8, i8)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(i8, i8)" ~ "(i8, i8)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(i8, i8)" ~ "(i8, i8)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i8" ~ "i8"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i16" ~ "i16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i32" ~ "i32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i64" ~ "i64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u8" ~ "u8"
"i8" ~ "i8"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u16" ~ "u16"
"i16" ~ "i16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u32" ~ "u32"
"i32" ~ "i32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u64" ~ "u64"
"i64" ~ "i64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f16" ~ "f16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f32" ~ "f32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f64" ~ "f64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i8" ~ "i8"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i8" ~ "i8"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(i8, i8)" ~ "(i8, i8)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(i8, i8)" ~ "(i8, i8)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(i8, i8)" ~ "(i8, i8)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(i8, i8)" ~ "(i8, i8)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(i8, i8)" ~ "(i8, i8)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i8" ~ "i8"
"i8" ~ "i8"
"t\8324" ~ "bool"
## typarams
mempty
## tyvars
[("t\8324",(3,TyVarPrim NoLoc [Bool,Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64]))]
## solution
([],[("t\8324",Right "bool")])

# TySolve.solve
## constraints
"i8" ~ "i8"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i8" ~ "i8"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"t\8320" ~ "i8"
## typarams
mempty
## tyvars
[("t\8320",(2,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("t\8320",Right "i8")])

# TySolve.solve
## constraints
"(i8, i8)" ~ "(i8, i8)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(i8, i8)" ~ "(i8, i8)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i8" ~ "i8"
"i8" ~ "i8"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i32" ~ "i32"
"i8" ~ "i8"
"i8" ~ "i8"
"num\8326" ~ "i32"
"i8" ~ "i8"
"i8" ~ "i8"
"i8" ~ "i8"
## typarams
mempty
## tyvars
[("num\8326",(3,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8326",Right "i32")])

# TySolve.solve
## constraints
"num\8321" ~ "t\8320"
"i32" ~ "t\8320"
"t\8326" ~ "t\8320"
"t\8320" ~ "i32"
"i8" ~ "i8"
"i8" ~ "i8"
"i32" ~ "t\8321\8323"
"i32" ~ "t\8321\8323"
"t\8321\8323" ~ "i32"
"i8" ~ "i8"
"i8" ~ "i8"
## typarams
mempty
## tyvars
[("t\8320",(4,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64])),("num\8321",(4,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8326",(4,TyVarPrim NoLoc [Bool,Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64])),("t\8321\8323",(4,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64]))]
## solution
([],[("t\8320",Right "i32"),("num\8321",Right "i32"),("t\8326",Right "i32"),("t\8321\8323",Right "i32")])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"t\8320" ~ "i8"
"t\8321" ~ "i8"
"(i8, i8)" ~ "(i8, i8)"
## typarams
mempty
## tyvars
[("t\8320",(1,TyVarFree NoLoc Lifted)),("t\8321",(2,TyVarFree NoLoc Lifted))]
## solution
([],[("t\8320",Right "i8"),("t\8321",Right "i8")])

# TySolve.solve
## constraints
"t\8320" ~ "i8"
"t\8321" ~ "i8"
"t\8322" ~ "i8"
"(i8, i8, i8)" ~ "(i8, i8, i8)"
## typarams
mempty
## tyvars
[("t\8320",(1,TyVarFree NoLoc Lifted)),("t\8321",(2,TyVarFree NoLoc Lifted)),("t\8322",(3,TyVarFree NoLoc Lifted))]
## solution
([],[("t\8320",Right "i8"),("t\8321",Right "i8"),("t\8322",Right "i8")])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"num\8321" ~ "i32"
"(x: i8) -> (y: i8) -> i8" ~ "a\8320 -> a\8320 -> a\8320"
"i8" ~ "a\8320"
## typarams
mempty
## tyvars
[("a\8320",(1,TyVarFree NoLoc Unlifted)),("num\8321",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("a\8320",Right "i8"),("num\8321",Right "i32")])

# TySolve.solve
## constraints
"num\8321" ~ "i32"
"(x: i8) -> (y: i8) -> i8" ~ "a\8320 -> a\8320 -> a\8320"
"i8" ~ "a\8320"
## typarams
mempty
## tyvars
[("a\8320",(1,TyVarFree NoLoc Unlifted)),("num\8321",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("a\8320",Right "i8"),("num\8321",Right "i32")])

# TySolve.solve
## constraints
"(x: i8) -> (y: i8) -> i8" ~ "a\8320 -> a\8320 -> a\8320"
"i8" ~ "a\8320"
## typarams
mempty
## tyvars
[("a\8320",(1,TyVarFree NoLoc Unlifted))]
## solution
([],[("a\8320",Right "i8")])

# TySolve.solve
## constraints
"(x: i8) -> (y: i8) -> i8" ~ "a\8320 -> a\8320 -> a\8320"
"i8" ~ "a\8320"
## typarams
mempty
## tyvars
[("a\8320",(1,TyVarFree NoLoc Unlifted))]
## solution
([],[("a\8320",Right "i8")])

# TySolve.solve
## constraints
"(i16, i16)" ~ "(i16, i16)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(i16, i16)" ~ "(i16, i16)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(i16, i16)" ~ "(i16, i16)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(i16, i16)" ~ "(i16, i16)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(i16, i16)" ~ "(i16, i16)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(i16, i16)" ~ "(i16, i16)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(i16, i16)" ~ "(i16, i16)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(i16, i16)" ~ "(i16, i16)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(i16, i16)" ~ "(i16, i16)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(i16, i16)" ~ "(i16, i16)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(i16, i16)" ~ "(i16, i16)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i16" ~ "i16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(i16, i16)" ~ "(i16, i16)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(i16, i16)" ~ "(i16, i16)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(i16, i16)" ~ "(i16, i16)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i8" ~ "i8"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i16" ~ "i16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i32" ~ "i32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i64" ~ "i64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u8" ~ "u8"
"i8" ~ "i8"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u16" ~ "u16"
"i16" ~ "i16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u32" ~ "u32"
"i32" ~ "i32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u64" ~ "u64"
"i64" ~ "i64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f16" ~ "f16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f32" ~ "f32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f64" ~ "f64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i16" ~ "i16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i16" ~ "i16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(i16, i16)" ~ "(i16, i16)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(i16, i16)" ~ "(i16, i16)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(i16, i16)" ~ "(i16, i16)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(i16, i16)" ~ "(i16, i16)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(i16, i16)" ~ "(i16, i16)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i16" ~ "i16"
"i16" ~ "i16"
"t\8324" ~ "bool"
## typarams
mempty
## tyvars
[("t\8324",(3,TyVarPrim NoLoc [Bool,Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64]))]
## solution
([],[("t\8324",Right "bool")])

# TySolve.solve
## constraints
"i16" ~ "i16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i16" ~ "i16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"t\8320" ~ "i16"
## typarams
mempty
## tyvars
[("t\8320",(2,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("t\8320",Right "i16")])

# TySolve.solve
## constraints
"(i16, i16)" ~ "(i16, i16)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(i16, i16)" ~ "(i16, i16)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i16" ~ "i16"
"i16" ~ "i16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i32" ~ "i32"
"i16" ~ "i16"
"i16" ~ "i16"
"num\8326" ~ "i32"
"i16" ~ "i16"
"i16" ~ "i16"
"i16" ~ "i16"
## typarams
mempty
## tyvars
[("num\8326",(3,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8326",Right "i32")])

# TySolve.solve
## constraints
"num\8321" ~ "t\8320"
"i32" ~ "t\8320"
"t\8326" ~ "t\8320"
"t\8320" ~ "i32"
"i16" ~ "i16"
"i16" ~ "i16"
"i32" ~ "t\8321\8323"
"i32" ~ "t\8321\8323"
"t\8321\8323" ~ "i32"
"i16" ~ "i16"
"i16" ~ "i16"
## typarams
mempty
## tyvars
[("t\8320",(4,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64])),("num\8321",(4,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8326",(4,TyVarPrim NoLoc [Bool,Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64])),("t\8321\8323",(4,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64]))]
## solution
([],[("t\8320",Right "i32"),("num\8321",Right "i32"),("t\8326",Right "i32"),("t\8321\8323",Right "i32")])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"t\8320" ~ "i16"
"t\8321" ~ "i16"
"(i16, i16)" ~ "(i16, i16)"
## typarams
mempty
## tyvars
[("t\8320",(1,TyVarFree NoLoc Lifted)),("t\8321",(2,TyVarFree NoLoc Lifted))]
## solution
([],[("t\8320",Right "i16"),("t\8321",Right "i16")])

# TySolve.solve
## constraints
"t\8320" ~ "i16"
"t\8321" ~ "i16"
"t\8322" ~ "i16"
"(i16, i16, i16)" ~ "(i16, i16, i16)"
## typarams
mempty
## tyvars
[("t\8320",(1,TyVarFree NoLoc Lifted)),("t\8321",(2,TyVarFree NoLoc Lifted)),("t\8322",(3,TyVarFree NoLoc Lifted))]
## solution
([],[("t\8320",Right "i16"),("t\8321",Right "i16"),("t\8322",Right "i16")])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"num\8321" ~ "i32"
"(x: i16) -> (y: i16) -> i16" ~ "a\8320 -> a\8320 -> a\8320"
"i16" ~ "a\8320"
## typarams
mempty
## tyvars
[("a\8320",(1,TyVarFree NoLoc Unlifted)),("num\8321",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("a\8320",Right "i16"),("num\8321",Right "i32")])

# TySolve.solve
## constraints
"num\8321" ~ "i32"
"(x: i16) -> (y: i16) -> i16" ~ "a\8320 -> a\8320 -> a\8320"
"i16" ~ "a\8320"
## typarams
mempty
## tyvars
[("a\8320",(1,TyVarFree NoLoc Unlifted)),("num\8321",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("a\8320",Right "i16"),("num\8321",Right "i32")])

# TySolve.solve
## constraints
"(x: i16) -> (y: i16) -> i16" ~ "a\8320 -> a\8320 -> a\8320"
"i16" ~ "a\8320"
## typarams
mempty
## tyvars
[("a\8320",(1,TyVarFree NoLoc Unlifted))]
## solution
([],[("a\8320",Right "i16")])

# TySolve.solve
## constraints
"(x: i16) -> (y: i16) -> i16" ~ "a\8320 -> a\8320 -> a\8320"
"i16" ~ "a\8320"
## typarams
mempty
## tyvars
[("a\8320",(1,TyVarFree NoLoc Unlifted))]
## solution
([],[("a\8320",Right "i16")])

# TySolve.solve
## constraints
"u32" ~ "u32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i32" ~ "i32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(i32, i32)" ~ "(i32, i32)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(i32, i32)" ~ "(i32, i32)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(i32, i32)" ~ "(i32, i32)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(i32, i32)" ~ "(i32, i32)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(i32, i32)" ~ "(i32, i32)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(i32, i32)" ~ "(i32, i32)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(i32, i32)" ~ "(i32, i32)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(i32, i32)" ~ "(i32, i32)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(i32, i32)" ~ "(i32, i32)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(i32, i32)" ~ "(i32, i32)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(i32, i32)" ~ "(i32, i32)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i32" ~ "i32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(i32, i32)" ~ "(i32, i32)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(i32, i32)" ~ "(i32, i32)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(i32, i32)" ~ "(i32, i32)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i8" ~ "i8"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i16" ~ "i16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i32" ~ "i32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i64" ~ "i64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u8" ~ "u8"
"i8" ~ "i8"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u16" ~ "u16"
"i16" ~ "i16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u32" ~ "u32"
"i32" ~ "i32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u64" ~ "u64"
"i64" ~ "i64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f16" ~ "f16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f32" ~ "f32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f64" ~ "f64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i32" ~ "i32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i32" ~ "i32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(i32, i32)" ~ "(i32, i32)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(i32, i32)" ~ "(i32, i32)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(i32, i32)" ~ "(i32, i32)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(i32, i32)" ~ "(i32, i32)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(i32, i32)" ~ "(i32, i32)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i32" ~ "i32"
"i32" ~ "i32"
"t\8324" ~ "bool"
## typarams
mempty
## tyvars
[("t\8324",(3,TyVarPrim NoLoc [Bool,Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64]))]
## solution
([],[("t\8324",Right "bool")])

# TySolve.solve
## constraints
"i32" ~ "i32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i32" ~ "i32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"t\8320" ~ "i32"
## typarams
mempty
## tyvars
[("t\8320",(2,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("t\8320",Right "i32")])

# TySolve.solve
## constraints
"(i32, i32)" ~ "(i32, i32)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(i32, i32)" ~ "(i32, i32)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i32" ~ "i32"
"num\8320" ~ "i32"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i32" ~ "i32"
"i32" ~ "i32"
"i32" ~ "i32"
"num\8326" ~ "i32"
"i32" ~ "i32"
"i32" ~ "i32"
"i32" ~ "i32"
## typarams
mempty
## tyvars
[("num\8326",(3,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8326",Right "i32")])

# TySolve.solve
## constraints
"num\8321" ~ "t\8320"
"i32" ~ "t\8320"
"t\8326" ~ "t\8320"
"t\8320" ~ "i32"
"i32" ~ "i32"
"i32" ~ "i32"
"i32" ~ "t\8321\8323"
"i32" ~ "t\8321\8323"
"t\8321\8323" ~ "i32"
"i32" ~ "i32"
"i32" ~ "i32"
## typarams
mempty
## tyvars
[("t\8320",(4,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64])),("num\8321",(4,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8326",(4,TyVarPrim NoLoc [Bool,Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64])),("t\8321\8323",(4,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64]))]
## solution
([],[("t\8320",Right "i32"),("num\8321",Right "i32"),("t\8326",Right "i32"),("t\8321\8323",Right "i32")])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"t\8320" ~ "i32"
"t\8321" ~ "i32"
"(i32, i32)" ~ "(i32, i32)"
## typarams
mempty
## tyvars
[("t\8320",(1,TyVarFree NoLoc Lifted)),("t\8321",(2,TyVarFree NoLoc Lifted))]
## solution
([],[("t\8320",Right "i32"),("t\8321",Right "i32")])

# TySolve.solve
## constraints
"t\8320" ~ "i32"
"t\8321" ~ "i32"
"t\8322" ~ "i32"
"(i32, i32, i32)" ~ "(i32, i32, i32)"
## typarams
mempty
## tyvars
[("t\8320",(1,TyVarFree NoLoc Lifted)),("t\8321",(2,TyVarFree NoLoc Lifted)),("t\8322",(3,TyVarFree NoLoc Lifted))]
## solution
([],[("t\8320",Right "i32"),("t\8321",Right "i32"),("t\8322",Right "i32")])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"num\8321" ~ "i32"
"(x: i32) -> (y: i32) -> i32" ~ "a\8320 -> a\8320 -> a\8320"
"i32" ~ "a\8320"
## typarams
mempty
## tyvars
[("a\8320",(1,TyVarFree NoLoc Unlifted)),("num\8321",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("a\8320",Right "i32"),("num\8321",Right "i32")])

# TySolve.solve
## constraints
"num\8321" ~ "i32"
"(x: i32) -> (y: i32) -> i32" ~ "a\8320 -> a\8320 -> a\8320"
"i32" ~ "a\8320"
## typarams
mempty
## tyvars
[("a\8320",(1,TyVarFree NoLoc Unlifted)),("num\8321",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("a\8320",Right "i32"),("num\8321",Right "i32")])

# TySolve.solve
## constraints
"(x: i32) -> (y: i32) -> i32" ~ "a\8320 -> a\8320 -> a\8320"
"i32" ~ "a\8320"
## typarams
mempty
## tyvars
[("a\8320",(1,TyVarFree NoLoc Unlifted))]
## solution
([],[("a\8320",Right "i32")])

# TySolve.solve
## constraints
"(x: i32) -> (y: i32) -> i32" ~ "a\8320 -> a\8320 -> a\8320"
"i32" ~ "a\8320"
## typarams
mempty
## tyvars
[("a\8320",(1,TyVarFree NoLoc Unlifted))]
## solution
([],[("a\8320",Right "i32")])

# TySolve.solve
## constraints
"u64" ~ "u64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i64" ~ "i64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(i64, i64)" ~ "(i64, i64)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(i64, i64)" ~ "(i64, i64)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(i64, i64)" ~ "(i64, i64)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(i64, i64)" ~ "(i64, i64)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(i64, i64)" ~ "(i64, i64)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(i64, i64)" ~ "(i64, i64)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(i64, i64)" ~ "(i64, i64)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(i64, i64)" ~ "(i64, i64)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(i64, i64)" ~ "(i64, i64)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(i64, i64)" ~ "(i64, i64)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(i64, i64)" ~ "(i64, i64)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i64" ~ "i64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(i64, i64)" ~ "(i64, i64)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(i64, i64)" ~ "(i64, i64)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(i64, i64)" ~ "(i64, i64)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i8" ~ "i8"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i16" ~ "i16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i32" ~ "i32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i64" ~ "i64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u8" ~ "u8"
"i8" ~ "i8"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u16" ~ "u16"
"i16" ~ "i16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u32" ~ "u32"
"i32" ~ "i32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u64" ~ "u64"
"i64" ~ "i64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f16" ~ "f16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f32" ~ "f32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f64" ~ "f64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i64" ~ "i64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i64" ~ "i64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(i64, i64)" ~ "(i64, i64)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(i64, i64)" ~ "(i64, i64)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(i64, i64)" ~ "(i64, i64)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(i64, i64)" ~ "(i64, i64)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(i64, i64)" ~ "(i64, i64)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i64" ~ "i64"
"i64" ~ "i64"
"t\8324" ~ "bool"
## typarams
mempty
## tyvars
[("t\8324",(3,TyVarPrim NoLoc [Bool,Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64]))]
## solution
([],[("t\8324",Right "bool")])

# TySolve.solve
## constraints
"i64" ~ "i64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i64" ~ "i64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"t\8320" ~ "i64"
## typarams
mempty
## tyvars
[("t\8320",(2,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("t\8320",Right "i64")])

# TySolve.solve
## constraints
"(i64, i64)" ~ "(i64, i64)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(i64, i64)" ~ "(i64, i64)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i64" ~ "i64"
"i64" ~ "i64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i32" ~ "i32"
"i64" ~ "i64"
"i64" ~ "i64"
"num\8326" ~ "i32"
"i64" ~ "i64"
"i64" ~ "i64"
"i64" ~ "i64"
## typarams
mempty
## tyvars
[("num\8326",(3,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8326",Right "i32")])

# TySolve.solve
## constraints
"num\8321" ~ "t\8320"
"i32" ~ "t\8320"
"t\8326" ~ "t\8320"
"t\8320" ~ "i32"
"i64" ~ "i64"
"i64" ~ "i64"
"i32" ~ "t\8321\8323"
"i32" ~ "t\8321\8323"
"t\8321\8323" ~ "i32"
"i64" ~ "i64"
"i64" ~ "i64"
## typarams
mempty
## tyvars
[("t\8320",(4,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64])),("num\8321",(4,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8326",(4,TyVarPrim NoLoc [Bool,Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64])),("t\8321\8323",(4,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64]))]
## solution
([],[("t\8320",Right "i32"),("num\8321",Right "i32"),("t\8326",Right "i32"),("t\8321\8323",Right "i32")])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"t\8320" ~ "i64"
"t\8321" ~ "i64"
"(i64, i64)" ~ "(i64, i64)"
## typarams
mempty
## tyvars
[("t\8320",(1,TyVarFree NoLoc Lifted)),("t\8321",(2,TyVarFree NoLoc Lifted))]
## solution
([],[("t\8320",Right "i64"),("t\8321",Right "i64")])

# TySolve.solve
## constraints
"t\8320" ~ "i64"
"t\8321" ~ "i64"
"t\8322" ~ "i64"
"(i64, i64, i64)" ~ "(i64, i64, i64)"
## typarams
mempty
## tyvars
[("t\8320",(1,TyVarFree NoLoc Lifted)),("t\8321",(2,TyVarFree NoLoc Lifted)),("t\8322",(3,TyVarFree NoLoc Lifted))]
## solution
([],[("t\8320",Right "i64"),("t\8321",Right "i64"),("t\8322",Right "i64")])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"num\8321" ~ "i32"
"(x: i64) -> (y: i64) -> i64" ~ "a\8320 -> a\8320 -> a\8320"
"i64" ~ "a\8320"
## typarams
mempty
## tyvars
[("a\8320",(1,TyVarFree NoLoc Unlifted)),("num\8321",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("a\8320",Right "i64"),("num\8321",Right "i32")])

# TySolve.solve
## constraints
"num\8321" ~ "i32"
"(x: i64) -> (y: i64) -> i64" ~ "a\8320 -> a\8320 -> a\8320"
"i64" ~ "a\8320"
## typarams
mempty
## tyvars
[("a\8320",(1,TyVarFree NoLoc Unlifted)),("num\8321",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("a\8320",Right "i64"),("num\8321",Right "i32")])

# TySolve.solve
## constraints
"(x: i64) -> (y: i64) -> i64" ~ "a\8320 -> a\8320 -> a\8320"
"i64" ~ "a\8320"
## typarams
mempty
## tyvars
[("a\8320",(1,TyVarFree NoLoc Unlifted))]
## solution
([],[("a\8320",Right "i64")])

# TySolve.solve
## constraints
"(x: i64) -> (y: i64) -> i64" ~ "a\8320 -> a\8320 -> a\8320"
"i64" ~ "a\8320"
## typarams
mempty
## tyvars
[("a\8320",(1,TyVarFree NoLoc Unlifted))]
## solution
([],[("a\8320",Right "i64")])

# TySolve.solve
## constraints
"u8" ~ "u8"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i8" ~ "i8"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u8" ~ "u8"
"u8" ~ "u8"
"(i8, i8)" ~ "(i8, i8)"
"i8" ~ "i8"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u8" ~ "u8"
"u8" ~ "u8"
"(i8, i8)" ~ "(i8, i8)"
"i8" ~ "i8"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u8" ~ "u8"
"u8" ~ "u8"
"(i8, i8)" ~ "(i8, i8)"
"i8" ~ "i8"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u8" ~ "u8"
"u8" ~ "u8"
"(i8, i8)" ~ "(i8, i8)"
"i8" ~ "i8"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u8" ~ "u8"
"u8" ~ "u8"
"(i8, i8)" ~ "(i8, i8)"
"i8" ~ "i8"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u8" ~ "u8"
"u8" ~ "u8"
"(i8, i8)" ~ "(i8, i8)"
"i8" ~ "i8"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u8" ~ "u8"
"u8" ~ "u8"
"(i8, i8)" ~ "(i8, i8)"
"i8" ~ "i8"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u8" ~ "u8"
"u8" ~ "u8"
"(i8, i8)" ~ "(i8, i8)"
"i8" ~ "i8"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u8" ~ "u8"
"u8" ~ "u8"
"(i8, i8)" ~ "(i8, i8)"
"i8" ~ "i8"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u8" ~ "u8"
"u8" ~ "u8"
"(i8, i8)" ~ "(i8, i8)"
"i8" ~ "i8"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u8" ~ "u8"
"u8" ~ "u8"
"(i8, i8)" ~ "(i8, i8)"
"i8" ~ "i8"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u8" ~ "u8"
"i8" ~ "i8"
"i8" ~ "i8"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u8" ~ "u8"
"u8" ~ "u8"
"(i8, i8)" ~ "(i8, i8)"
"i8" ~ "i8"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u8" ~ "u8"
"u8" ~ "u8"
"(i8, i8)" ~ "(i8, i8)"
"i8" ~ "i8"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u8" ~ "u8"
"u8" ~ "u8"
"(i8, i8)" ~ "(i8, i8)"
"i8" ~ "i8"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u8" ~ "u8"
"i8" ~ "i8"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u16" ~ "u16"
"i8" ~ "i8"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u32" ~ "u32"
"i8" ~ "i8"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u64" ~ "u64"
"i8" ~ "i8"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i8" ~ "i8"
"i8" ~ "i8"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i16" ~ "i16"
"i8" ~ "i8"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i32" ~ "i32"
"i8" ~ "i8"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i64" ~ "i64"
"i8" ~ "i8"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f16" ~ "f16"
"i8" ~ "i8"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f32" ~ "f32"
"i8" ~ "i8"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f64" ~ "f64"
"i8" ~ "i8"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"t\8320" ~ "bool"
"i8" ~ "i8"
## typarams
mempty
## tyvars
[("t\8320",(1,TyVarFree NoLoc Lifted))]
## solution
([],[("t\8320",Right "bool")])

# TySolve.solve
## constraints
"u8" ~ "u8"
"i8" ~ "i8"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u8" ~ "u8"
"i8" ~ "i8"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u8" ~ "u8"
"u8" ~ "u8"
"(i8, i8)" ~ "(i8, i8)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u8" ~ "u8"
"u8" ~ "u8"
"(i8, i8)" ~ "(i8, i8)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u8" ~ "u8"
"u8" ~ "u8"
"(i8, i8)" ~ "(i8, i8)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u8" ~ "u8"
"u8" ~ "u8"
"(i8, i8)" ~ "(i8, i8)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u8" ~ "u8"
"u8" ~ "u8"
"(i8, i8)" ~ "(i8, i8)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u8" ~ "u8"
"u8" ~ "u8"
"t\8324" ~ "bool"
## typarams
mempty
## tyvars
[("t\8324",(3,TyVarPrim NoLoc [Bool,Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64]))]
## solution
([],[("t\8324",Right "bool")])

# TySolve.solve
## constraints
"u8" ~ "u8"
"i8" ~ "i8"
"i8" ~ "i8"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"t\8320" ~ "u8"
## typarams
mempty
## tyvars
[("t\8320",(2,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("t\8320",Right "u8")])

# TySolve.solve
## constraints
"u8" ~ "u8"
"u8" ~ "u8"
"(i8, i8)" ~ "(i8, i8)"
"i8" ~ "i8"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u8" ~ "u8"
"u8" ~ "u8"
"(i8, i8)" ~ "(i8, i8)"
"i8" ~ "i8"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i32" ~ "i32"
"u8" ~ "u8"
"u8" ~ "u8"
"num\8326" ~ "i32"
"u8" ~ "u8"
"u8" ~ "u8"
"u8" ~ "u8"
## typarams
mempty
## tyvars
[("num\8326",(3,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8326",Right "i32")])

# TySolve.solve
## constraints
"num\8321" ~ "t\8320"
"i32" ~ "t\8320"
"t\8326" ~ "t\8320"
"t\8320" ~ "i32"
"u8" ~ "u8"
"u8" ~ "u8"
"i32" ~ "t\8321\8323"
"i32" ~ "t\8321\8323"
"t\8321\8323" ~ "i32"
"u8" ~ "u8"
"u8" ~ "u8"
## typarams
mempty
## tyvars
[("t\8320",(4,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64])),("num\8321",(4,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8326",(4,TyVarPrim NoLoc [Bool,Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64])),("t\8321\8323",(4,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64]))]
## solution
([],[("t\8320",Right "i32"),("num\8321",Right "i32"),("t\8326",Right "i32"),("t\8321\8323",Right "i32")])

# TySolve.solve
## constraints
"t\8320" ~ "u8"
"i8" ~ "i8"
## typarams
mempty
## tyvars
[("t\8320",(1,TyVarFree NoLoc Lifted))]
## solution
([],[("t\8320",Right "u8")])

# TySolve.solve
## constraints
"t\8320" ~ "u8"
"t\8321" ~ "u8"
"(i8, i8)" ~ "(i8, i8)"
"i8" ~ "i8"
## typarams
mempty
## tyvars
[("t\8320",(1,TyVarFree NoLoc Lifted)),("t\8321",(2,TyVarFree NoLoc Lifted))]
## solution
([],[("t\8320",Right "u8"),("t\8321",Right "u8")])

# TySolve.solve
## constraints
"t\8320" ~ "u8"
"t\8321" ~ "u8"
"t\8322" ~ "u8"
"(i8, i8, i8)" ~ "(i8, i8, i8)"
"i8" ~ "i8"
## typarams
mempty
## tyvars
[("t\8320",(1,TyVarFree NoLoc Lifted)),("t\8321",(2,TyVarFree NoLoc Lifted)),("t\8322",(3,TyVarFree NoLoc Lifted))]
## solution
([],[("t\8320",Right "u8"),("t\8321",Right "u8"),("t\8322",Right "u8")])

# TySolve.solve
## constraints
"t\8320" ~ "u8"
"i8" ~ "i8"
## typarams
mempty
## tyvars
[("t\8320",(1,TyVarFree NoLoc Lifted))]
## solution
([],[("t\8320",Right "u8")])

# TySolve.solve
## constraints
"t\8320" ~ "u8"
"i8" ~ "i8"
## typarams
mempty
## tyvars
[("t\8320",(1,TyVarFree NoLoc Lifted))]
## solution
([],[("t\8320",Right "u8")])

# TySolve.solve
## constraints
"num\8321" ~ "i32"
"(x: u8) -> (y: u8) -> u8" ~ "a\8320 -> a\8320 -> a\8320"
"u8" ~ "a\8320"
## typarams
mempty
## tyvars
[("a\8320",(1,TyVarFree NoLoc Unlifted)),("num\8321",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("a\8320",Right "u8"),("num\8321",Right "i32")])

# TySolve.solve
## constraints
"num\8321" ~ "i32"
"(x: u8) -> (y: u8) -> u8" ~ "a\8320 -> a\8320 -> a\8320"
"u8" ~ "a\8320"
## typarams
mempty
## tyvars
[("a\8320",(1,TyVarFree NoLoc Unlifted)),("num\8321",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("a\8320",Right "u8"),("num\8321",Right "i32")])

# TySolve.solve
## constraints
"(x: u8) -> (y: u8) -> u8" ~ "a\8320 -> a\8320 -> a\8320"
"u8" ~ "a\8320"
## typarams
mempty
## tyvars
[("a\8320",(1,TyVarFree NoLoc Unlifted))]
## solution
([],[("a\8320",Right "u8")])

# TySolve.solve
## constraints
"(x: u8) -> (y: u8) -> u8" ~ "a\8320 -> a\8320 -> a\8320"
"u8" ~ "a\8320"
## typarams
mempty
## tyvars
[("a\8320",(1,TyVarFree NoLoc Unlifted))]
## solution
([],[("a\8320",Right "u8")])

# TySolve.solve
## constraints
"u16" ~ "u16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i16" ~ "i16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u16" ~ "u16"
"u16" ~ "u16"
"(i16, i16)" ~ "(i16, i16)"
"i16" ~ "i16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u16" ~ "u16"
"u16" ~ "u16"
"(i16, i16)" ~ "(i16, i16)"
"i16" ~ "i16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u16" ~ "u16"
"u16" ~ "u16"
"(i16, i16)" ~ "(i16, i16)"
"i16" ~ "i16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u16" ~ "u16"
"u16" ~ "u16"
"(i16, i16)" ~ "(i16, i16)"
"i16" ~ "i16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u16" ~ "u16"
"u16" ~ "u16"
"(i16, i16)" ~ "(i16, i16)"
"i16" ~ "i16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u16" ~ "u16"
"u16" ~ "u16"
"(i16, i16)" ~ "(i16, i16)"
"i16" ~ "i16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u16" ~ "u16"
"u16" ~ "u16"
"(i16, i16)" ~ "(i16, i16)"
"i16" ~ "i16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u16" ~ "u16"
"u16" ~ "u16"
"(i16, i16)" ~ "(i16, i16)"
"i16" ~ "i16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u16" ~ "u16"
"u16" ~ "u16"
"(i16, i16)" ~ "(i16, i16)"
"i16" ~ "i16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u16" ~ "u16"
"u16" ~ "u16"
"(i16, i16)" ~ "(i16, i16)"
"i16" ~ "i16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u16" ~ "u16"
"u16" ~ "u16"
"(i16, i16)" ~ "(i16, i16)"
"i16" ~ "i16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u16" ~ "u16"
"i16" ~ "i16"
"i16" ~ "i16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u16" ~ "u16"
"u16" ~ "u16"
"(i16, i16)" ~ "(i16, i16)"
"i16" ~ "i16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u16" ~ "u16"
"u16" ~ "u16"
"(i16, i16)" ~ "(i16, i16)"
"i16" ~ "i16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u16" ~ "u16"
"u16" ~ "u16"
"(i16, i16)" ~ "(i16, i16)"
"i16" ~ "i16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u8" ~ "u8"
"i16" ~ "i16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u16" ~ "u16"
"i16" ~ "i16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u32" ~ "u32"
"i16" ~ "i16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u64" ~ "u64"
"i16" ~ "i16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i8" ~ "i8"
"i16" ~ "i16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i16" ~ "i16"
"i16" ~ "i16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i32" ~ "i32"
"i16" ~ "i16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i64" ~ "i64"
"i16" ~ "i16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f16" ~ "f16"
"i16" ~ "i16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f32" ~ "f32"
"i16" ~ "i16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f64" ~ "f64"
"i16" ~ "i16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"t\8320" ~ "bool"
"i16" ~ "i16"
## typarams
mempty
## tyvars
[("t\8320",(1,TyVarFree NoLoc Lifted))]
## solution
([],[("t\8320",Right "bool")])

# TySolve.solve
## constraints
"u16" ~ "u16"
"i16" ~ "i16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u16" ~ "u16"
"i16" ~ "i16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u16" ~ "u16"
"u16" ~ "u16"
"(i16, i16)" ~ "(i16, i16)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u16" ~ "u16"
"u16" ~ "u16"
"(i16, i16)" ~ "(i16, i16)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u16" ~ "u16"
"u16" ~ "u16"
"(i16, i16)" ~ "(i16, i16)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u16" ~ "u16"
"u16" ~ "u16"
"(i16, i16)" ~ "(i16, i16)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u16" ~ "u16"
"u16" ~ "u16"
"(i16, i16)" ~ "(i16, i16)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u16" ~ "u16"
"u16" ~ "u16"
"t\8324" ~ "bool"
## typarams
mempty
## tyvars
[("t\8324",(3,TyVarPrim NoLoc [Bool,Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64]))]
## solution
([],[("t\8324",Right "bool")])

# TySolve.solve
## constraints
"u16" ~ "u16"
"i16" ~ "i16"
"i16" ~ "i16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"t\8320" ~ "u16"
## typarams
mempty
## tyvars
[("t\8320",(2,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("t\8320",Right "u16")])

# TySolve.solve
## constraints
"u16" ~ "u16"
"u16" ~ "u16"
"(i16, i16)" ~ "(i16, i16)"
"i16" ~ "i16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u16" ~ "u16"
"u16" ~ "u16"
"(i16, i16)" ~ "(i16, i16)"
"i16" ~ "i16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i32" ~ "i32"
"u16" ~ "u16"
"u16" ~ "u16"
"num\8326" ~ "i32"
"u16" ~ "u16"
"u16" ~ "u16"
"u16" ~ "u16"
## typarams
mempty
## tyvars
[("num\8326",(3,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8326",Right "i32")])

# TySolve.solve
## constraints
"num\8321" ~ "t\8320"
"i32" ~ "t\8320"
"t\8326" ~ "t\8320"
"t\8320" ~ "i32"
"u16" ~ "u16"
"u16" ~ "u16"
"i32" ~ "t\8321\8323"
"i32" ~ "t\8321\8323"
"t\8321\8323" ~ "i32"
"u16" ~ "u16"
"u16" ~ "u16"
## typarams
mempty
## tyvars
[("t\8320",(4,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64])),("num\8321",(4,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8326",(4,TyVarPrim NoLoc [Bool,Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64])),("t\8321\8323",(4,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64]))]
## solution
([],[("t\8320",Right "i32"),("num\8321",Right "i32"),("t\8326",Right "i32"),("t\8321\8323",Right "i32")])

# TySolve.solve
## constraints
"t\8320" ~ "u16"
"i16" ~ "i16"
## typarams
mempty
## tyvars
[("t\8320",(1,TyVarFree NoLoc Lifted))]
## solution
([],[("t\8320",Right "u16")])

# TySolve.solve
## constraints
"t\8320" ~ "u16"
"t\8321" ~ "u16"
"(i16, i16)" ~ "(i16, i16)"
"i16" ~ "i16"
## typarams
mempty
## tyvars
[("t\8320",(1,TyVarFree NoLoc Lifted)),("t\8321",(2,TyVarFree NoLoc Lifted))]
## solution
([],[("t\8320",Right "u16"),("t\8321",Right "u16")])

# TySolve.solve
## constraints
"t\8320" ~ "u16"
"t\8321" ~ "u16"
"t\8322" ~ "u16"
"(i16, i16, i16)" ~ "(i16, i16, i16)"
"i16" ~ "i16"
## typarams
mempty
## tyvars
[("t\8320",(1,TyVarFree NoLoc Lifted)),("t\8321",(2,TyVarFree NoLoc Lifted)),("t\8322",(3,TyVarFree NoLoc Lifted))]
## solution
([],[("t\8320",Right "u16"),("t\8321",Right "u16"),("t\8322",Right "u16")])

# TySolve.solve
## constraints
"t\8320" ~ "u16"
"i16" ~ "i16"
## typarams
mempty
## tyvars
[("t\8320",(1,TyVarFree NoLoc Lifted))]
## solution
([],[("t\8320",Right "u16")])

# TySolve.solve
## constraints
"t\8320" ~ "u16"
"i16" ~ "i16"
## typarams
mempty
## tyvars
[("t\8320",(1,TyVarFree NoLoc Lifted))]
## solution
([],[("t\8320",Right "u16")])

# TySolve.solve
## constraints
"num\8321" ~ "i32"
"(x: u16) -> (y: u16) -> u16" ~ "a\8320 -> a\8320 -> a\8320"
"u16" ~ "a\8320"
## typarams
mempty
## tyvars
[("a\8320",(1,TyVarFree NoLoc Unlifted)),("num\8321",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("a\8320",Right "u16"),("num\8321",Right "i32")])

# TySolve.solve
## constraints
"num\8321" ~ "i32"
"(x: u16) -> (y: u16) -> u16" ~ "a\8320 -> a\8320 -> a\8320"
"u16" ~ "a\8320"
## typarams
mempty
## tyvars
[("a\8320",(1,TyVarFree NoLoc Unlifted)),("num\8321",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("a\8320",Right "u16"),("num\8321",Right "i32")])

# TySolve.solve
## constraints
"(x: u16) -> (y: u16) -> u16" ~ "a\8320 -> a\8320 -> a\8320"
"u16" ~ "a\8320"
## typarams
mempty
## tyvars
[("a\8320",(1,TyVarFree NoLoc Unlifted))]
## solution
([],[("a\8320",Right "u16")])

# TySolve.solve
## constraints
"(x: u16) -> (y: u16) -> u16" ~ "a\8320 -> a\8320 -> a\8320"
"u16" ~ "a\8320"
## typarams
mempty
## tyvars
[("a\8320",(1,TyVarFree NoLoc Unlifted))]
## solution
([],[("a\8320",Right "u16")])

# TySolve.solve
## constraints
"u32" ~ "u32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i32" ~ "i32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u32" ~ "u32"
"u32" ~ "u32"
"(i32, i32)" ~ "(i32, i32)"
"i32" ~ "i32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u32" ~ "u32"
"u32" ~ "u32"
"(i32, i32)" ~ "(i32, i32)"
"i32" ~ "i32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u32" ~ "u32"
"u32" ~ "u32"
"(i32, i32)" ~ "(i32, i32)"
"i32" ~ "i32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u32" ~ "u32"
"u32" ~ "u32"
"(i32, i32)" ~ "(i32, i32)"
"i32" ~ "i32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u32" ~ "u32"
"u32" ~ "u32"
"(i32, i32)" ~ "(i32, i32)"
"i32" ~ "i32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u32" ~ "u32"
"u32" ~ "u32"
"(i32, i32)" ~ "(i32, i32)"
"i32" ~ "i32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u32" ~ "u32"
"u32" ~ "u32"
"(i32, i32)" ~ "(i32, i32)"
"i32" ~ "i32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u32" ~ "u32"
"u32" ~ "u32"
"(i32, i32)" ~ "(i32, i32)"
"i32" ~ "i32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u32" ~ "u32"
"u32" ~ "u32"
"(i32, i32)" ~ "(i32, i32)"
"i32" ~ "i32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u32" ~ "u32"
"u32" ~ "u32"
"(i32, i32)" ~ "(i32, i32)"
"i32" ~ "i32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u32" ~ "u32"
"u32" ~ "u32"
"(i32, i32)" ~ "(i32, i32)"
"i32" ~ "i32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u32" ~ "u32"
"i32" ~ "i32"
"i32" ~ "i32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u32" ~ "u32"
"u32" ~ "u32"
"(i32, i32)" ~ "(i32, i32)"
"i32" ~ "i32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u32" ~ "u32"
"u32" ~ "u32"
"(i32, i32)" ~ "(i32, i32)"
"i32" ~ "i32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u32" ~ "u32"
"u32" ~ "u32"
"(i32, i32)" ~ "(i32, i32)"
"i32" ~ "i32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u8" ~ "u8"
"i32" ~ "i32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u16" ~ "u16"
"i32" ~ "i32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u32" ~ "u32"
"i32" ~ "i32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u64" ~ "u64"
"i32" ~ "i32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i8" ~ "i8"
"i32" ~ "i32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i16" ~ "i16"
"i32" ~ "i32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i32" ~ "i32"
"i32" ~ "i32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i64" ~ "i64"
"i32" ~ "i32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f16" ~ "f16"
"i32" ~ "i32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f32" ~ "f32"
"i32" ~ "i32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f64" ~ "f64"
"i32" ~ "i32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"t\8320" ~ "bool"
"i32" ~ "i32"
## typarams
mempty
## tyvars
[("t\8320",(1,TyVarFree NoLoc Lifted))]
## solution
([],[("t\8320",Right "bool")])

# TySolve.solve
## constraints
"u32" ~ "u32"
"i32" ~ "i32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u32" ~ "u32"
"i32" ~ "i32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u32" ~ "u32"
"u32" ~ "u32"
"(i32, i32)" ~ "(i32, i32)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u32" ~ "u32"
"u32" ~ "u32"
"(i32, i32)" ~ "(i32, i32)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u32" ~ "u32"
"u32" ~ "u32"
"(i32, i32)" ~ "(i32, i32)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u32" ~ "u32"
"u32" ~ "u32"
"(i32, i32)" ~ "(i32, i32)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u32" ~ "u32"
"u32" ~ "u32"
"(i32, i32)" ~ "(i32, i32)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u32" ~ "u32"
"u32" ~ "u32"
"t\8324" ~ "bool"
## typarams
mempty
## tyvars
[("t\8324",(3,TyVarPrim NoLoc [Bool,Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64]))]
## solution
([],[("t\8324",Right "bool")])

# TySolve.solve
## constraints
"u32" ~ "u32"
"i32" ~ "i32"
"i32" ~ "i32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u32" ~ "u32"
"u32" ~ "u32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"t\8320" ~ "u32"
## typarams
mempty
## tyvars
[("t\8320",(2,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("t\8320",Right "u32")])

# TySolve.solve
## constraints
"u32" ~ "u32"
"u32" ~ "u32"
"(i32, i32)" ~ "(i32, i32)"
"i32" ~ "i32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u32" ~ "u32"
"u32" ~ "u32"
"(i32, i32)" ~ "(i32, i32)"
"i32" ~ "i32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i32" ~ "i32"
"u32" ~ "u32"
"u32" ~ "u32"
"num\8326" ~ "i32"
"u32" ~ "u32"
"u32" ~ "u32"
"u32" ~ "u32"
## typarams
mempty
## tyvars
[("num\8326",(3,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8326",Right "i32")])

# TySolve.solve
## constraints
"num\8321" ~ "t\8320"
"i32" ~ "t\8320"
"t\8326" ~ "t\8320"
"t\8320" ~ "i32"
"u32" ~ "u32"
"u32" ~ "u32"
"i32" ~ "t\8321\8323"
"i32" ~ "t\8321\8323"
"t\8321\8323" ~ "i32"
"u32" ~ "u32"
"u32" ~ "u32"
## typarams
mempty
## tyvars
[("t\8320",(4,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64])),("num\8321",(4,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8326",(4,TyVarPrim NoLoc [Bool,Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64])),("t\8321\8323",(4,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64]))]
## solution
([],[("t\8320",Right "i32"),("num\8321",Right "i32"),("t\8326",Right "i32"),("t\8321\8323",Right "i32")])

# TySolve.solve
## constraints
"t\8320" ~ "u32"
"i32" ~ "i32"
## typarams
mempty
## tyvars
[("t\8320",(1,TyVarFree NoLoc Lifted))]
## solution
([],[("t\8320",Right "u32")])

# TySolve.solve
## constraints
"t\8320" ~ "u32"
"t\8321" ~ "u32"
"(i32, i32)" ~ "(i32, i32)"
"i32" ~ "i32"
## typarams
mempty
## tyvars
[("t\8320",(1,TyVarFree NoLoc Lifted)),("t\8321",(2,TyVarFree NoLoc Lifted))]
## solution
([],[("t\8320",Right "u32"),("t\8321",Right "u32")])

# TySolve.solve
## constraints
"t\8320" ~ "u32"
"t\8321" ~ "u32"
"t\8322" ~ "u32"
"(i32, i32, i32)" ~ "(i32, i32, i32)"
"i32" ~ "i32"
## typarams
mempty
## tyvars
[("t\8320",(1,TyVarFree NoLoc Lifted)),("t\8321",(2,TyVarFree NoLoc Lifted)),("t\8322",(3,TyVarFree NoLoc Lifted))]
## solution
([],[("t\8320",Right "u32"),("t\8321",Right "u32"),("t\8322",Right "u32")])

# TySolve.solve
## constraints
"t\8320" ~ "u32"
"i32" ~ "i32"
## typarams
mempty
## tyvars
[("t\8320",(1,TyVarFree NoLoc Lifted))]
## solution
([],[("t\8320",Right "u32")])

# TySolve.solve
## constraints
"t\8320" ~ "u32"
"i32" ~ "i32"
## typarams
mempty
## tyvars
[("t\8320",(1,TyVarFree NoLoc Lifted))]
## solution
([],[("t\8320",Right "u32")])

# TySolve.solve
## constraints
"num\8321" ~ "i32"
"(x: u32) -> (y: u32) -> u32" ~ "a\8320 -> a\8320 -> a\8320"
"u32" ~ "a\8320"
## typarams
mempty
## tyvars
[("a\8320",(1,TyVarFree NoLoc Unlifted)),("num\8321",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("a\8320",Right "u32"),("num\8321",Right "i32")])

# TySolve.solve
## constraints
"num\8321" ~ "i32"
"(x: u32) -> (y: u32) -> u32" ~ "a\8320 -> a\8320 -> a\8320"
"u32" ~ "a\8320"
## typarams
mempty
## tyvars
[("a\8320",(1,TyVarFree NoLoc Unlifted)),("num\8321",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("a\8320",Right "u32"),("num\8321",Right "i32")])

# TySolve.solve
## constraints
"(x: u32) -> (y: u32) -> u32" ~ "a\8320 -> a\8320 -> a\8320"
"u32" ~ "a\8320"
## typarams
mempty
## tyvars
[("a\8320",(1,TyVarFree NoLoc Unlifted))]
## solution
([],[("a\8320",Right "u32")])

# TySolve.solve
## constraints
"(x: u32) -> (y: u32) -> u32" ~ "a\8320 -> a\8320 -> a\8320"
"u32" ~ "a\8320"
## typarams
mempty
## tyvars
[("a\8320",(1,TyVarFree NoLoc Unlifted))]
## solution
([],[("a\8320",Right "u32")])

# TySolve.solve
## constraints
"u64" ~ "u64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i64" ~ "i64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u64" ~ "u64"
"u64" ~ "u64"
"(i64, i64)" ~ "(i64, i64)"
"i64" ~ "i64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u64" ~ "u64"
"u64" ~ "u64"
"(i64, i64)" ~ "(i64, i64)"
"i64" ~ "i64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u64" ~ "u64"
"u64" ~ "u64"
"(i64, i64)" ~ "(i64, i64)"
"i64" ~ "i64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u64" ~ "u64"
"u64" ~ "u64"
"(i64, i64)" ~ "(i64, i64)"
"i64" ~ "i64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u64" ~ "u64"
"u64" ~ "u64"
"(i64, i64)" ~ "(i64, i64)"
"i64" ~ "i64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u64" ~ "u64"
"u64" ~ "u64"
"(i64, i64)" ~ "(i64, i64)"
"i64" ~ "i64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u64" ~ "u64"
"u64" ~ "u64"
"(i64, i64)" ~ "(i64, i64)"
"i64" ~ "i64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u64" ~ "u64"
"u64" ~ "u64"
"(i64, i64)" ~ "(i64, i64)"
"i64" ~ "i64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u64" ~ "u64"
"u64" ~ "u64"
"(i64, i64)" ~ "(i64, i64)"
"i64" ~ "i64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u64" ~ "u64"
"u64" ~ "u64"
"(i64, i64)" ~ "(i64, i64)"
"i64" ~ "i64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u64" ~ "u64"
"u64" ~ "u64"
"(i64, i64)" ~ "(i64, i64)"
"i64" ~ "i64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u64" ~ "u64"
"i64" ~ "i64"
"i64" ~ "i64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u64" ~ "u64"
"u64" ~ "u64"
"(i64, i64)" ~ "(i64, i64)"
"i64" ~ "i64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u64" ~ "u64"
"u64" ~ "u64"
"(i64, i64)" ~ "(i64, i64)"
"i64" ~ "i64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u64" ~ "u64"
"u64" ~ "u64"
"(i64, i64)" ~ "(i64, i64)"
"i64" ~ "i64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u8" ~ "u8"
"i64" ~ "i64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u16" ~ "u16"
"i64" ~ "i64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u32" ~ "u32"
"i64" ~ "i64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u64" ~ "u64"
"i64" ~ "i64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i8" ~ "i8"
"i64" ~ "i64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i16" ~ "i16"
"i64" ~ "i64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i32" ~ "i32"
"i64" ~ "i64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i64" ~ "i64"
"i64" ~ "i64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f16" ~ "f16"
"i64" ~ "i64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f32" ~ "f32"
"i64" ~ "i64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f64" ~ "f64"
"i64" ~ "i64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"t\8320" ~ "bool"
"i64" ~ "i64"
## typarams
mempty
## tyvars
[("t\8320",(1,TyVarFree NoLoc Lifted))]
## solution
([],[("t\8320",Right "bool")])

# TySolve.solve
## constraints
"u64" ~ "u64"
"i64" ~ "i64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u64" ~ "u64"
"i64" ~ "i64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u64" ~ "u64"
"u64" ~ "u64"
"(i64, i64)" ~ "(i64, i64)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u64" ~ "u64"
"u64" ~ "u64"
"(i64, i64)" ~ "(i64, i64)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u64" ~ "u64"
"u64" ~ "u64"
"(i64, i64)" ~ "(i64, i64)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u64" ~ "u64"
"u64" ~ "u64"
"(i64, i64)" ~ "(i64, i64)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u64" ~ "u64"
"u64" ~ "u64"
"(i64, i64)" ~ "(i64, i64)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u64" ~ "u64"
"u64" ~ "u64"
"t\8324" ~ "bool"
## typarams
mempty
## tyvars
[("t\8324",(3,TyVarPrim NoLoc [Bool,Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64]))]
## solution
([],[("t\8324",Right "bool")])

# TySolve.solve
## constraints
"u64" ~ "u64"
"i64" ~ "i64"
"i64" ~ "i64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"t\8320" ~ "u64"
## typarams
mempty
## tyvars
[("t\8320",(2,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("t\8320",Right "u64")])

# TySolve.solve
## constraints
"u64" ~ "u64"
"u64" ~ "u64"
"(i64, i64)" ~ "(i64, i64)"
"i64" ~ "i64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u64" ~ "u64"
"u64" ~ "u64"
"(i64, i64)" ~ "(i64, i64)"
"i64" ~ "i64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u64" ~ "u64"
"u64" ~ "u64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i32" ~ "i32"
"u64" ~ "u64"
"u64" ~ "u64"
"num\8326" ~ "i32"
"u64" ~ "u64"
"u64" ~ "u64"
"u64" ~ "u64"
## typarams
mempty
## tyvars
[("num\8326",(3,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8326",Right "i32")])

# TySolve.solve
## constraints
"num\8321" ~ "t\8320"
"i32" ~ "t\8320"
"t\8326" ~ "t\8320"
"t\8320" ~ "i32"
"u64" ~ "u64"
"u64" ~ "u64"
"i32" ~ "t\8321\8323"
"i32" ~ "t\8321\8323"
"t\8321\8323" ~ "i32"
"u64" ~ "u64"
"u64" ~ "u64"
## typarams
mempty
## tyvars
[("t\8320",(4,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64])),("num\8321",(4,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8326",(4,TyVarPrim NoLoc [Bool,Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64])),("t\8321\8323",(4,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64]))]
## solution
([],[("t\8320",Right "i32"),("num\8321",Right "i32"),("t\8326",Right "i32"),("t\8321\8323",Right "i32")])

# TySolve.solve
## constraints
"t\8320" ~ "u64"
"i64" ~ "i64"
## typarams
mempty
## tyvars
[("t\8320",(1,TyVarFree NoLoc Lifted))]
## solution
([],[("t\8320",Right "u64")])

# TySolve.solve
## constraints
"t\8320" ~ "u64"
"t\8321" ~ "u64"
"(i64, i64)" ~ "(i64, i64)"
"i64" ~ "i64"
## typarams
mempty
## tyvars
[("t\8320",(1,TyVarFree NoLoc Lifted)),("t\8321",(2,TyVarFree NoLoc Lifted))]
## solution
([],[("t\8320",Right "u64"),("t\8321",Right "u64")])

# TySolve.solve
## constraints
"t\8320" ~ "u64"
"t\8321" ~ "u64"
"t\8322" ~ "u64"
"(i64, i64, i64)" ~ "(i64, i64, i64)"
"i64" ~ "i64"
## typarams
mempty
## tyvars
[("t\8320",(1,TyVarFree NoLoc Lifted)),("t\8321",(2,TyVarFree NoLoc Lifted)),("t\8322",(3,TyVarFree NoLoc Lifted))]
## solution
([],[("t\8320",Right "u64"),("t\8321",Right "u64"),("t\8322",Right "u64")])

# TySolve.solve
## constraints
"t\8320" ~ "u64"
"i64" ~ "i64"
## typarams
mempty
## tyvars
[("t\8320",(1,TyVarFree NoLoc Lifted))]
## solution
([],[("t\8320",Right "u64")])

# TySolve.solve
## constraints
"t\8320" ~ "u64"
"i64" ~ "i64"
## typarams
mempty
## tyvars
[("t\8320",(1,TyVarFree NoLoc Lifted))]
## solution
([],[("t\8320",Right "u64")])

# TySolve.solve
## constraints
"num\8321" ~ "i32"
"(x: u64) -> (y: u64) -> u64" ~ "a\8320 -> a\8320 -> a\8320"
"u64" ~ "a\8320"
## typarams
mempty
## tyvars
[("a\8320",(1,TyVarFree NoLoc Unlifted)),("num\8321",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("a\8320",Right "u64"),("num\8321",Right "i32")])

# TySolve.solve
## constraints
"num\8321" ~ "i32"
"(x: u64) -> (y: u64) -> u64" ~ "a\8320 -> a\8320 -> a\8320"
"u64" ~ "a\8320"
## typarams
mempty
## tyvars
[("a\8320",(1,TyVarFree NoLoc Unlifted)),("num\8321",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("a\8320",Right "u64"),("num\8321",Right "i32")])

# TySolve.solve
## constraints
"(x: u64) -> (y: u64) -> u64" ~ "a\8320 -> a\8320 -> a\8320"
"u64" ~ "a\8320"
## typarams
mempty
## tyvars
[("a\8320",(1,TyVarFree NoLoc Unlifted))]
## solution
([],[("a\8320",Right "u64")])

# TySolve.solve
## constraints
"(x: u64) -> (y: u64) -> u64" ~ "a\8320 -> a\8320 -> a\8320"
"u64" ~ "a\8320"
## typarams
mempty
## tyvars
[("a\8320",(1,TyVarFree NoLoc Unlifted))]
## solution
([],[("a\8320",Right "u64")])

# TySolve.solve
## constraints
"(f64, f64)" ~ "(f64, f64)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(f64, f64)" ~ "(f64, f64)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(f64, f64)" ~ "(f64, f64)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(f64, f64)" ~ "(f64, f64)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(f64, f64)" ~ "(f64, f64)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(f64, f64)" ~ "(f64, f64)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u8" ~ "u8"
"i8" ~ "i8"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u16" ~ "u16"
"i16" ~ "i16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u32" ~ "u32"
"i32" ~ "i32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u64" ~ "u64"
"i64" ~ "i64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i8" ~ "i8"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i16" ~ "i16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i32" ~ "i32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i64" ~ "i64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f16" ~ "f16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f32" ~ "f32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f64" ~ "f64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"bool" ~ "bool"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i64" ~ "i64"
"i64" ~ "i64"
"f64" ~ "f64"
"f64" ~ "f64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f64" ~ "f64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(f64, f64)" ~ "(f64, f64)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(f64, f64)" ~ "(f64, f64)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(f64, f64)" ~ "(f64, f64)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(f64, f64)" ~ "(f64, f64)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(f64, f64)" ~ "(f64, f64)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f64" ~ "f64"
"f64" ~ "f64"
"t\8324" ~ "bool"
## typarams
mempty
## tyvars
[("t\8324",(3,TyVarPrim NoLoc [Bool,Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64]))]
## solution
([],[("t\8324",Right "bool")])

# TySolve.solve
## constraints
"t\8320" ~ "f64"
## typarams
mempty
## tyvars
[("t\8320",(2,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("t\8320",Right "f64")])

# TySolve.solve
## constraints
"num\8320" ~ "f64"
"f64" ~ "f64"
## typarams
mempty
## tyvars
[("num\8320",(2,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "f64")])

# TySolve.solve
## constraints
"(f64, f64)" ~ "(f64, f64)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(f64, f64)" ~ "(f64, f64)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f64" ~ "f64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f64" ~ "f64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f64" ~ "f64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f64" ~ "f64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f64" ~ "f64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f64" ~ "f64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f64" ~ "f64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f64" ~ "f64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f64" ~ "f64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f64" ~ "f64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f64" ~ "f64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f64" ~ "f64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f64" ~ "f64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f64" ~ "f64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f64" ~ "f64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f64" ~ "f64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f64" ~ "f64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f64" ~ "f64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f64" ~ "f64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f64" ~ "f64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f64" ~ "f64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f64" ~ "f64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f64" ~ "f64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f64" ~ "f64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f64" ~ "f64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f64" ~ "f64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f64" ~ "f64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f64" ~ "f64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(f64, f64)" ~ "(f64, f64)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(f64, f64)" ~ "(f64, f64)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(f64, f64)" ~ "(f64, f64)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(t\8320, t\8321, t\8322)" ~ "(f64, f64, f64)"
## typarams
mempty
## tyvars
[("t\8320",(1,TyVarFree NoLoc Lifted)),("t\8321",(2,TyVarFree NoLoc Lifted)),("t\8322",(3,TyVarFree NoLoc Lifted))]
## solution
([],[("t\8320",Right "f64"),("t\8321",Right "f64"),("t\8322",Right "f64")])

# TySolve.solve
## constraints
"(t\8320, t\8321, t\8322)" ~ "(f64, f64, f64)"
## typarams
mempty
## tyvars
[("t\8320",(1,TyVarFree NoLoc Lifted)),("t\8321",(2,TyVarFree NoLoc Lifted)),("t\8322",(3,TyVarFree NoLoc Lifted))]
## solution
([],[("t\8320",Right "f64"),("t\8321",Right "f64"),("t\8322",Right "f64")])

# TySolve.solve
## constraints
"(t\8320, t\8321, t\8322)" ~ "(f64, f64, f64)"
## typarams
mempty
## tyvars
[("t\8320",(1,TyVarFree NoLoc Lifted)),("t\8321",(2,TyVarFree NoLoc Lifted)),("t\8322",(3,TyVarFree NoLoc Lifted))]
## solution
([],[("t\8320",Right "f64"),("t\8321",Right "f64"),("t\8322",Right "f64")])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f64" ~ "f64"
"i64" ~ "i64"
"f64" ~ "f64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(t\8320, t\8321)" ~ "(f64, f64)"
## typarams
mempty
## tyvars
[("t\8320",(1,TyVarFree NoLoc Lifted)),("t\8321",(2,TyVarFree NoLoc Lifted))]
## solution
([],[("t\8320",Right "f64"),("t\8321",Right "f64")])

# TySolve.solve
## constraints
"(t\8320, t\8321)" ~ "(f64, i32)"
## typarams
mempty
## tyvars
[("t\8320",(1,TyVarFree NoLoc Lifted)),("t\8321",(2,TyVarFree NoLoc Lifted))]
## solution
([],[("t\8320",Right "f64"),("t\8321",Right "i32")])

# TySolve.solve
## constraints
"(t\8320, t\8321)" ~ "(f64, f64)"
## typarams
mempty
## tyvars
[("t\8320",(1,TyVarFree NoLoc Lifted)),("t\8321",(2,TyVarFree NoLoc Lifted))]
## solution
([],[("t\8320",Right "f64"),("t\8321",Right "f64")])

# TySolve.solve
## constraints
"f64" ~ "f64"
"i64" ~ "i64"
"u64" ~ "u64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u64" ~ "u64"
"i64" ~ "i64"
"f64" ~ "f64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f64" ~ "f64"
"i32" ~ "i32"
"u64" ~ "u64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f64" ~ "f64"
"i32" ~ "i32"
"u64" ~ "u64"
"i32" ~ "i32"
"u64" ~ "u64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f64" ~ "f64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f64" ~ "f64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f64" ~ "f64"
"f64" ~ "f64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f64" ~ "f64"
"f64" ~ "f64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"t\8320" ~ "f64"
## typarams
mempty
## tyvars
[("t\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("t\8320",Right "f64")])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"num\8321" ~ "i32"
"(x: f64) -> (y: f64) -> f64" ~ "a\8320 -> a\8320 -> a\8320"
"f64" ~ "a\8320"
## typarams
mempty
## tyvars
[("a\8320",(1,TyVarFree NoLoc Unlifted)),("num\8321",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("a\8320",Right "f64"),("num\8321",Right "i32")])

# TySolve.solve
## constraints
"num\8321" ~ "i32"
"(x: f64) -> (y: f64) -> f64" ~ "a\8320 -> a\8320 -> a\8320"
"f64" ~ "a\8320"
## typarams
mempty
## tyvars
[("a\8320",(1,TyVarFree NoLoc Unlifted)),("num\8321",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("a\8320",Right "f64"),("num\8321",Right "i32")])

# TySolve.solve
## constraints
"(x: f64) -> (y: f64) -> f64" ~ "a\8320 -> a\8320 -> a\8320"
"f64" ~ "a\8320"
## typarams
mempty
## tyvars
[("a\8320",(1,TyVarFree NoLoc Unlifted))]
## solution
([],[("a\8320",Right "f64")])

# TySolve.solve
## constraints
"(x: f64) -> (y: f64) -> f64" ~ "a\8320 -> a\8320 -> a\8320"
"f64" ~ "a\8320"
## typarams
mempty
## tyvars
[("a\8320",(1,TyVarFree NoLoc Unlifted))]
## solution
([],[("a\8320",Right "f64")])

# TySolve.solve
## constraints
"(f32, f32)" ~ "(f32, f32)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(f32, f32)" ~ "(f32, f32)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(f32, f32)" ~ "(f32, f32)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(f32, f32)" ~ "(f32, f32)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(f32, f32)" ~ "(f32, f32)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(f32, f32)" ~ "(f32, f32)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u8" ~ "u8"
"i8" ~ "i8"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u16" ~ "u16"
"i16" ~ "i16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u32" ~ "u32"
"i32" ~ "i32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u64" ~ "u64"
"i64" ~ "i64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i8" ~ "i8"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i16" ~ "i16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i32" ~ "i32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i64" ~ "i64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f16" ~ "f16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f32" ~ "f32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f64" ~ "f64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"bool" ~ "bool"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i64" ~ "i64"
"i64" ~ "i64"
"f32" ~ "f32"
"f32" ~ "f32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f32" ~ "f32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f32" ~ "f32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(f32, f32)" ~ "(f32, f32)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(f32, f32)" ~ "(f32, f32)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(f32, f32)" ~ "(f32, f32)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(f32, f32)" ~ "(f32, f32)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(f32, f32)" ~ "(f32, f32)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f32" ~ "f32"
"f32" ~ "f32"
"t\8324" ~ "bool"
## typarams
mempty
## tyvars
[("t\8324",(3,TyVarPrim NoLoc [Bool,Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64]))]
## solution
([],[("t\8324",Right "bool")])

# TySolve.solve
## constraints
"t\8320" ~ "f32"
## typarams
mempty
## tyvars
[("t\8320",(2,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("t\8320",Right "f32")])

# TySolve.solve
## constraints
"num\8320" ~ "f32"
"f32" ~ "f32"
## typarams
mempty
## tyvars
[("num\8320",(2,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "f32")])

# TySolve.solve
## constraints
"(f32, f32)" ~ "(f32, f32)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(f32, f32)" ~ "(f32, f32)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f32" ~ "f32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f32" ~ "f32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f32" ~ "f32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f32" ~ "f32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f32" ~ "f32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f32" ~ "f32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f32" ~ "f32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f32" ~ "f32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f32" ~ "f32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f32" ~ "f32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f32" ~ "f32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f32" ~ "f32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f32" ~ "f32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f32" ~ "f32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f32" ~ "f32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f32" ~ "f32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f32" ~ "f32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f32" ~ "f32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f32" ~ "f32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f32" ~ "f32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f32" ~ "f32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f32" ~ "f32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f32" ~ "f32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f32" ~ "f32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f32" ~ "f32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f32" ~ "f32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f32" ~ "f32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f32" ~ "f32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(f32, f32)" ~ "(f32, f32)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(f32, f32)" ~ "(f32, f32)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(f32, f32)" ~ "(f32, f32)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(t\8320, t\8321, t\8322)" ~ "(f32, f32, f32)"
## typarams
mempty
## tyvars
[("t\8320",(1,TyVarFree NoLoc Lifted)),("t\8321",(2,TyVarFree NoLoc Lifted)),("t\8322",(3,TyVarFree NoLoc Lifted))]
## solution
([],[("t\8320",Right "f32"),("t\8321",Right "f32"),("t\8322",Right "f32")])

# TySolve.solve
## constraints
"(t\8320, t\8321, t\8322)" ~ "(f32, f32, f32)"
## typarams
mempty
## tyvars
[("t\8320",(1,TyVarFree NoLoc Lifted)),("t\8321",(2,TyVarFree NoLoc Lifted)),("t\8322",(3,TyVarFree NoLoc Lifted))]
## solution
([],[("t\8320",Right "f32"),("t\8321",Right "f32"),("t\8322",Right "f32")])

# TySolve.solve
## constraints
"(t\8320, t\8321, t\8322)" ~ "(f32, f32, f32)"
## typarams
mempty
## tyvars
[("t\8320",(1,TyVarFree NoLoc Lifted)),("t\8321",(2,TyVarFree NoLoc Lifted)),("t\8322",(3,TyVarFree NoLoc Lifted))]
## solution
([],[("t\8320",Right "f32"),("t\8321",Right "f32"),("t\8322",Right "f32")])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f32" ~ "f32"
"i32" ~ "i32"
"f32" ~ "f32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(t\8320, t\8321)" ~ "(f32, f32)"
## typarams
mempty
## tyvars
[("t\8320",(1,TyVarFree NoLoc Lifted)),("t\8321",(2,TyVarFree NoLoc Lifted))]
## solution
([],[("t\8320",Right "f32"),("t\8321",Right "f32")])

# TySolve.solve
## constraints
"(t\8320, t\8321)" ~ "(f32, i32)"
## typarams
mempty
## tyvars
[("t\8320",(1,TyVarFree NoLoc Lifted)),("t\8321",(2,TyVarFree NoLoc Lifted))]
## solution
([],[("t\8320",Right "f32"),("t\8321",Right "i32")])

# TySolve.solve
## constraints
"(t\8320, t\8321)" ~ "(f32, f32)"
## typarams
mempty
## tyvars
[("t\8320",(1,TyVarFree NoLoc Lifted)),("t\8321",(2,TyVarFree NoLoc Lifted))]
## solution
([],[("t\8320",Right "f32"),("t\8321",Right "f32")])

# TySolve.solve
## constraints
"f32" ~ "f32"
"i32" ~ "i32"
"u32" ~ "u32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u32" ~ "u32"
"i32" ~ "i32"
"f32" ~ "f32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f32" ~ "f32"
"i32" ~ "i32"
"u32" ~ "u32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f32" ~ "f32"
"i32" ~ "i32"
"u32" ~ "u32"
"i32" ~ "i32"
"u32" ~ "u32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f32" ~ "f32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f32" ~ "f32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f32" ~ "f32"
"f32" ~ "f32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f32" ~ "f32"
"f32" ~ "f32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"t\8320" ~ "f32"
## typarams
mempty
## tyvars
[("t\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("t\8320",Right "f32")])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f64" ~ "f64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f64" ~ "f64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"num\8321" ~ "i32"
"(x: f32) -> (y: f32) -> f32" ~ "a\8320 -> a\8320 -> a\8320"
"f32" ~ "a\8320"
## typarams
mempty
## tyvars
[("a\8320",(1,TyVarFree NoLoc Unlifted)),("num\8321",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("a\8320",Right "f32"),("num\8321",Right "i32")])

# TySolve.solve
## constraints
"num\8321" ~ "i32"
"(x: f32) -> (y: f32) -> f32" ~ "a\8320 -> a\8320 -> a\8320"
"f32" ~ "a\8320"
## typarams
mempty
## tyvars
[("a\8320",(1,TyVarFree NoLoc Unlifted)),("num\8321",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("a\8320",Right "f32"),("num\8321",Right "i32")])

# TySolve.solve
## constraints
"(x: f32) -> (y: f32) -> f32" ~ "a\8320 -> a\8320 -> a\8320"
"f32" ~ "a\8320"
## typarams
mempty
## tyvars
[("a\8320",(1,TyVarFree NoLoc Unlifted))]
## solution
([],[("a\8320",Right "f32")])

# TySolve.solve
## constraints
"(x: f32) -> (y: f32) -> f32" ~ "a\8320 -> a\8320 -> a\8320"
"f32" ~ "a\8320"
## typarams
mempty
## tyvars
[("a\8320",(1,TyVarFree NoLoc Unlifted))]
## solution
([],[("a\8320",Right "f32")])

# TySolve.solve
## constraints
"(f16, f16)" ~ "(f16, f16)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(f16, f16)" ~ "(f16, f16)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(f16, f16)" ~ "(f16, f16)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(f16, f16)" ~ "(f16, f16)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(f16, f16)" ~ "(f16, f16)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(f16, f16)" ~ "(f16, f16)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u8" ~ "u8"
"i8" ~ "i8"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u16" ~ "u16"
"i16" ~ "i16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u32" ~ "u32"
"i32" ~ "i32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u64" ~ "u64"
"i64" ~ "i64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i8" ~ "i8"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i16" ~ "i16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i32" ~ "i32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i64" ~ "i64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f16" ~ "f16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f32" ~ "f32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f64" ~ "f64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"bool" ~ "bool"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i64" ~ "i64"
"i64" ~ "i64"
"f16" ~ "f16"
"f16" ~ "f16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f16" ~ "f16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f16" ~ "f16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(f16, f16)" ~ "(f16, f16)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(f16, f16)" ~ "(f16, f16)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(f16, f16)" ~ "(f16, f16)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(f16, f16)" ~ "(f16, f16)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(f16, f16)" ~ "(f16, f16)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f16" ~ "f16"
"f16" ~ "f16"
"t\8324" ~ "bool"
## typarams
mempty
## tyvars
[("t\8324",(3,TyVarPrim NoLoc [Bool,Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64]))]
## solution
([],[("t\8324",Right "bool")])

# TySolve.solve
## constraints
"t\8320" ~ "f16"
## typarams
mempty
## tyvars
[("t\8320",(2,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("t\8320",Right "f16")])

# TySolve.solve
## constraints
"num\8320" ~ "f16"
"f16" ~ "f16"
## typarams
mempty
## tyvars
[("num\8320",(2,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "f16")])

# TySolve.solve
## constraints
"(f16, f16)" ~ "(f16, f16)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(f16, f16)" ~ "(f16, f16)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f16" ~ "f16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f16" ~ "f16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f16" ~ "f16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f16" ~ "f16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f16" ~ "f16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f16" ~ "f16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f16" ~ "f16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f16" ~ "f16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f16" ~ "f16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f16" ~ "f16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f16" ~ "f16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f16" ~ "f16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f16" ~ "f16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f16" ~ "f16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f16" ~ "f16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f16" ~ "f16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f16" ~ "f16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f16" ~ "f16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f16" ~ "f16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f16" ~ "f16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f16" ~ "f16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f16" ~ "f16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f16" ~ "f16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f16" ~ "f16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f16" ~ "f16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f16" ~ "f16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f16" ~ "f16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f16" ~ "f16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(f16, f16)" ~ "(f16, f16)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(f16, f16)" ~ "(f16, f16)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(f16, f16)" ~ "(f16, f16)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(t\8320, t\8321, t\8322)" ~ "(f16, f16, f16)"
## typarams
mempty
## tyvars
[("t\8320",(1,TyVarFree NoLoc Lifted)),("t\8321",(2,TyVarFree NoLoc Lifted)),("t\8322",(3,TyVarFree NoLoc Lifted))]
## solution
([],[("t\8320",Right "f16"),("t\8321",Right "f16"),("t\8322",Right "f16")])

# TySolve.solve
## constraints
"(t\8320, t\8321, t\8322)" ~ "(f16, f16, f16)"
## typarams
mempty
## tyvars
[("t\8320",(1,TyVarFree NoLoc Lifted)),("t\8321",(2,TyVarFree NoLoc Lifted)),("t\8322",(3,TyVarFree NoLoc Lifted))]
## solution
([],[("t\8320",Right "f16"),("t\8321",Right "f16"),("t\8322",Right "f16")])

# TySolve.solve
## constraints
"(t\8320, t\8321, t\8322)" ~ "(f16, f16, f16)"
## typarams
mempty
## tyvars
[("t\8320",(1,TyVarFree NoLoc Lifted)),("t\8321",(2,TyVarFree NoLoc Lifted)),("t\8322",(3,TyVarFree NoLoc Lifted))]
## solution
([],[("t\8320",Right "f16"),("t\8321",Right "f16"),("t\8322",Right "f16")])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f16" ~ "f16"
"i16" ~ "i16"
"f16" ~ "f16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(t\8320, t\8321)" ~ "(f16, f16)"
## typarams
mempty
## tyvars
[("t\8320",(1,TyVarFree NoLoc Lifted)),("t\8321",(2,TyVarFree NoLoc Lifted))]
## solution
([],[("t\8320",Right "f16"),("t\8321",Right "f16")])

# TySolve.solve
## constraints
"(t\8320, t\8321)" ~ "(f16, i32)"
## typarams
mempty
## tyvars
[("t\8320",(1,TyVarFree NoLoc Lifted)),("t\8321",(2,TyVarFree NoLoc Lifted))]
## solution
([],[("t\8320",Right "f16"),("t\8321",Right "i32")])

# TySolve.solve
## constraints
"(t\8320, t\8321)" ~ "(f16, f16)"
## typarams
mempty
## tyvars
[("t\8320",(1,TyVarFree NoLoc Lifted)),("t\8321",(2,TyVarFree NoLoc Lifted))]
## solution
([],[("t\8320",Right "f16"),("t\8321",Right "f16")])

# TySolve.solve
## constraints
"f16" ~ "f16"
"i16" ~ "i16"
"u16" ~ "u16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u16" ~ "u16"
"i16" ~ "i16"
"f16" ~ "f16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f16" ~ "f16"
"i32" ~ "i32"
"u16" ~ "u16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f16" ~ "f16"
"i32" ~ "i32"
"u16" ~ "u16"
"i32" ~ "i32"
"u16" ~ "u16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f16" ~ "f16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f16" ~ "f16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f16" ~ "f16"
"f16" ~ "f16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f16" ~ "f16"
"f16" ~ "f16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"t\8320" ~ "f16"
## typarams
mempty
## tyvars
[("t\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("t\8320",Right "f16")])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f64" ~ "f64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f64" ~ "f64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"num\8321" ~ "i32"
"(x: f16) -> (y: f16) -> f16" ~ "a\8320 -> a\8320 -> a\8320"
"f16" ~ "a\8320"
## typarams
mempty
## tyvars
[("a\8320",(1,TyVarFree NoLoc Unlifted)),("num\8321",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("a\8320",Right "f16"),("num\8321",Right "i32")])

# TySolve.solve
## constraints
"num\8321" ~ "i32"
"(x: f16) -> (y: f16) -> f16" ~ "a\8320 -> a\8320 -> a\8320"
"f16" ~ "a\8320"
## typarams
mempty
## tyvars
[("a\8320",(1,TyVarFree NoLoc Unlifted)),("num\8321",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("a\8320",Right "f16"),("num\8321",Right "i32")])

# TySolve.solve
## constraints
"(x: f16) -> (y: f16) -> f16" ~ "a\8320 -> a\8320 -> a\8320"
"f16" ~ "a\8320"
## typarams
mempty
## tyvars
[("a\8320",(1,TyVarFree NoLoc Unlifted))]
## solution
([],[("a\8320",Right "f16")])

# TySolve.solve
## constraints
"(x: f16) -> (y: f16) -> f16" ~ "a\8320 -> a\8320 -> a\8320"
"f16" ~ "a\8320"
## typarams
mempty
## tyvars
[("a\8320",(1,TyVarFree NoLoc Unlifted))]
## solution
([],[("a\8320",Right "f16")])

# TySolve.solve
## constraints
"a" ~ "a"
"b" ~ "b"
## typarams
["(\"a\",(0,Lifted,NoLoc))","(\"b\",(0,Lifted,NoLoc))"]
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"a" ~ "a"
## typarams
["(\"a\",(0,Lifted,NoLoc))","(\"b\",(0,Lifted,NoLoc))"]
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"a" ~ "a"
"b" ~ "b"
"c" ~ "c"
## typarams
["(\"a\",(0,Lifted,NoLoc))","(\"b\",(0,Lifted,NoLoc))","(\"c\",(0,Lifted,NoLoc))"]
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"a" ~ "a"
"b" ~ "b"
"c" ~ "c"
## typarams
["(\"a\",(0,Lifted,NoLoc))","(\"b\",(0,Lifted,NoLoc))","(\"c\",(0,Lifted,NoLoc))"]
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"a" ~ "a"
"b" ~ "b"
"c" ~ "c"
## typarams
["(\"a\",(0,Lifted,NoLoc))","(\"b\",(0,Lifted,NoLoc))","(\"c\",(0,Lifted,NoLoc))"]
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(a, b)" ~ "(a, b)"
"c" ~ "c"
## typarams
["(\"a\",(0,Lifted,NoLoc))","(\"b\",(0,Lifted,NoLoc))","(\"c\",(0,Lifted,NoLoc))"]
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"a" ~ "a"
"b" ~ "b"
"c" ~ "c"
## typarams
["(\"a\",(0,Lifted,NoLoc))","(\"b\",(0,Lifted,NoLoc))","(\"c\",(0,Lifted,NoLoc))"]
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
## typarams
["(\"a\",(0,Lifted,NoLoc))","(\"b\",(0,Lifted,NoLoc))"]
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
## typarams
["(\"a\",(0,Lifted,NoLoc))"]
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"t\8320" ~ "a"
"t\8321" ~ "i32"
"t\8320" ~ "a"
"a" ~ "a"
## typarams
["(\"a\",(0,Unlifted,NoLoc))"]
## tyvars
[("t\8320",(4,TyVarFree NoLoc Lifted)),("t\8321",(4,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64]))]
## solution
([],[("t\8320",Right "a"),("t\8321",Right "i32")])

# TySolve.solve
## constraints
"t\8320" ~ "a"
"t\8320" ~ "a"
"t\8323" ~ "bool"
"t\8320" ~ "a"
"a" ~ "a"
## typarams
["(\"a\",(0,Unlifted,NoLoc))"]
## tyvars
[("t\8320",(4,TyVarFree NoLoc Lifted)),("t\8323",(4,TyVarPrim NoLoc [Bool,Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64]))]
## solution
([],[("t\8320",Right "a"),("t\8323",Right "bool")])

# TySolve.solve
## constraints
"t\8320" ~ "a"
"t\8320" ~ "a"
"t\8320" ~ "a"
"a" ~ "a"
## typarams
["(\"a\",(0,Unlifted,NoLoc))"]
## tyvars
[("t\8320",(4,TyVarFree NoLoc Lifted))]
## solution
([],[("t\8320",Right "a")])

# TySolve.solve
## constraints
## typarams
["(\"t\",(0,Unlifted,NoLoc))"]
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i64" ~ "t\8320"
"num\8321" ~ "t\8320"
## typarams
["(\"t\",(0,Unlifted,NoLoc))"]
## tyvars
[("t\8320",(2,TyVarFree NoLoc Unlifted)),("num\8321",(2,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("t\8320",Right "i64"),("num\8321",Right "i64")])

# TySolve.solve
## constraints
"t\8321" ~ "num\8320"
"index\8322" ~ "index_elem\8323"
"[]t" ~ "[]index_elem\8323"
## typarams
["(\"t\",(0,Unlifted,NoLoc))"]
## tyvars
[("num\8320",(2,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8321",(2,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64])),("index\8322",(2,TyVarFree NoLoc Unlifted)),("index_elem\8323",(2,TyVarFree NoLoc Unlifted))]
## solution
([],[("num\8320",Left "[i8, i16, i32, i64]"),("t\8321",Left "[i8, i16, i32, i64]"),("index\8322",Right "t"),("index_elem\8323",Right "t")])

# TySolve.solve
## constraints
"i64" ~ "t\8320"
"num\8321" ~ "t\8320"
"t\8326" ~ "t\8320"
"index\8327" ~ "index_elem\8328"
"[]t" ~ "[]index_elem\8328"
## typarams
["(\"t\",(0,Unlifted,NoLoc))"]
## tyvars
[("t\8320",(2,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("num\8321",(2,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8326",(2,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64])),("index\8327",(2,TyVarFree NoLoc Unlifted)),("index_elem\8328",(2,TyVarFree NoLoc Unlifted))]
## solution
([],[("t\8320",Right "i64"),("num\8321",Right "i64"),("t\8326",Right "i64"),("index\8327",Right "t"),("index_elem\8328",Right "t")])

# TySolve.solve
## constraints
"index\8321" ~ "[]index\8321\8329"
"i64" ~ "num\8320"
"index\8321" ~ "[]index_elem\8322"
"[]t" ~ "[]index_elem\8322"
"i64" ~ "t\8323"
"num\8324" ~ "t\8323"
"t\8323" ~ "i64"
"[]t" ~ "index\8321"
## typarams
["(\"t\",(0,Unlifted,NoLoc))"]
## tyvars
[("num\8320",(2,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("index\8321",(2,TyVarFree NoLoc Unlifted)),("index_elem\8322",(2,TyVarFree NoLoc Unlifted)),("t\8323",(2,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("num\8324",(2,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("index\8321\8329",(2,TyVarFree NoLoc Unlifted))]
## solution
([],[("num\8320",Right "i64"),("index\8321",Right "[]t"),("index_elem\8322",Right "t"),("t\8323",Right "i64"),("num\8324",Right "i64"),("index\8321\8329",Right "t")])

# TySolve.solve
## constraints
"index\8327" ~ "[]index\8327\8321\8325"
"i64" ~ "num\8320"
"i64" ~ "t\8321"
"num\8322" ~ "t\8321"
"i64" ~ "t\8321"
"index\8327" ~ "[]index_elem\8328"
"[]t" ~ "[]index_elem\8328"
"i64" ~ "t\8329"
"num\8321\8320" ~ "t\8329"
"t\8329" ~ "i64"
"[]t" ~ "index\8327"
## typarams
["(\"t\",(0,Unlifted,NoLoc))"]
## tyvars
[("num\8320",(2,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8321",(2,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("num\8322",(2,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("index\8327",(2,TyVarFree NoLoc Unlifted)),("index_elem\8328",(2,TyVarFree NoLoc Unlifted)),("t\8329",(2,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("num\8321\8320",(2,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("index\8327\8321\8325",(2,TyVarFree NoLoc Unlifted))]
## solution
([],[("num\8320",Right "i64"),("t\8321",Right "i64"),("num\8322",Right "i64"),("index\8327",Right "[]t"),("index_elem\8328",Right "t"),("t\8329",Right "i64"),("num\8321\8320",Right "i64"),("index\8327\8321\8325",Right "t")])

# TySolve.solve
## constraints
"i64" ~ "num\8320"
"index\8321" ~ "[]index_elem\8322"
"[]t" ~ "[]index_elem\8322"
"[]t" ~ "index\8321"
## typarams
["(\"t\",(0,Unlifted,NoLoc))"]
## tyvars
[("num\8320",(3,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("index\8321",(3,TyVarFree NoLoc Unlifted)),("index_elem\8322",(3,TyVarFree NoLoc Unlifted))]
## solution
([],[("num\8320",Right "i64"),("index\8321",Right "[]t"),("index_elem\8322",Right "t")])

# TySolve.solve
## constraints
"index\8320" ~ "[]index\8320\8327"
"index\8320" ~ "[]index_elem\8321"
"[]t" ~ "[]index_elem\8321"
"i64" ~ "t\8322"
"i64" ~ "t\8322"
"t\8322" ~ "i64"
"[]t" ~ "index\8320"
## typarams
["(\"t\",(0,Unlifted,NoLoc))"]
## tyvars
[("index\8320",(3,TyVarFree NoLoc Unlifted)),("index_elem\8321",(3,TyVarFree NoLoc Unlifted)),("t\8322",(3,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("index\8320\8327",(3,TyVarFree NoLoc Unlifted))]
## solution
([],[("index\8320",Right "[]t"),("index_elem\8321",Right "t"),("t\8322",Right "i64"),("index\8320\8327",Right "t")])

# TySolve.solve
## constraints
## typarams
["(\"t\",(0,Unlifted,NoLoc))"]
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"index\8326" ~ "[]index\8326\8321\8325"
"index\8321\8323" ~ "[]index\8321\8323\8321\8326"
"i64" ~ "t\8320"
"i64" ~ "t\8320"
"t\8320" ~ "i64"
"i64" ~ "num\8325"
"index\8326" ~ "[]index_elem\8327"
"[]t" ~ "[]index_elem\8327"
"i64" ~ "t\8328"
"i64" ~ "t\8328"
"i64" ~ "t\8328"
"index\8321\8323" ~ "[]index_elem\8321\8324"
"[]t" ~ "[]index_elem\8321\8324"
"index\8321\8323" ~ "[]t"
"([]t, []t)" ~ "(index\8326, []t)"
## typarams
["(\"t\",(0,Unlifted,NoLoc))"]
## tyvars
[("t\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("num\8325",(2,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("index\8326",(2,TyVarFree NoLoc Unlifted)),("index_elem\8327",(2,TyVarFree NoLoc Unlifted)),("t\8328",(2,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("index\8321\8323",(2,TyVarFree NoLoc Unlifted)),("index_elem\8321\8324",(2,TyVarFree NoLoc Unlifted)),("index\8326\8321\8325",(2,TyVarFree NoLoc Unlifted)),("index\8321\8323\8321\8326",(2,TyVarFree NoLoc Unlifted))]
## solution
([],[("t\8320",Right "i64"),("num\8325",Right "i64"),("index\8326",Right "[]t"),("index_elem\8327",Right "t"),("t\8328",Right "i64"),("index\8321\8323",Right "[]t"),("index_elem\8321\8324",Right "t"),("index\8326\8321\8325",Right "t"),("index\8321\8323\8321\8326",Right "t")])

# TySolve.solve
## constraints
"t\8321" ~ "num\8320"
"i64" ~ "num\8320"
"index\8322" ~ "[]index_elem\8323"
"[]t" ~ "[]index_elem\8323"
"[]t" ~ "index\8322"
## typarams
["(\"t\",(0,Unlifted,NoLoc))"]
## tyvars
[("num\8320",(2,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8321",(2,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("index\8322",(2,TyVarFree NoLoc Unlifted)),("index_elem\8323",(2,TyVarFree NoLoc Unlifted))]
## solution
([],[("num\8320",Right "i64"),("t\8321",Right "i64"),("index\8322",Right "[]t"),("index_elem\8323",Right "t")])

# TySolve.solve
## constraints
"[]t" ~ "[]a\8320"
"[]t" ~ "[]a\8320"
"i64" ~ "t\8325"
"i64" ~ "t\8325"
"t\8325" ~ "i64"
"[]t" ~ "[]a\8320"
## typarams
["(\"t\",(0,Unlifted,NoLoc))"]
## tyvars
[("a\8320",(3,TyVarFree NoLoc Unlifted)),("t\8325",(3,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("a\8320",Right "t"),("t\8325",Right "i64")])

# TySolve.solve
## constraints
"[]t" ~ "[]t\8320"
"[]t" ~ "[]t\8320"
"i64" ~ "t\8325"
"i64" ~ "t\8325"
"t\8325" ~ "i64"
"[]t" ~ "[]t\8320"
## typarams
["(\"t\",(0,Unlifted,NoLoc))"]
## tyvars
[("t\8320",(3,TyVarFree NoLoc Unlifted)),("t\8325",(3,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("t\8320",Right "t"),("t\8325",Right "i64")])

# TySolve.solve
## constraints
"t\8321" ~ "num\8320"
"num\8320" ~ "num\8322"
"num\8320" ~ "i64"
"range\8323" ~ "[]num\8320"
"[]i64" ~ "range\8323"
## typarams
mempty
## tyvars
[("num\8320",(2,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8321",(2,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64])),("num\8322",(2,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("range\8323",(2,TyVarFree NoLoc Unlifted))]
## solution
([],[("num\8320",Right "i64"),("t\8321",Right "i64"),("num\8322",Right "i64"),("range\8323",Right "[]i64")])

# TySolve.solve
## constraints
"i64" ~ "i64"
"[]i64" ~ "[]i64"
## typarams
["(\"t\",(0,Unlifted,NoLoc))"]
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"t\8322" ~ "t\8324"
"i64" ~ "t\8324"
"t\8324" ~ "t\8323"
"i64" ~ "t\8323"
"t\8321\8323" ~ "t\8323"
"index\8321\8324" ~ "index_elem\8321\8325"
"[]t" ~ "[]index_elem\8321\8325"
"i64" ~ "i64"
"(i: t\8322) -> index\8321\8324" ~ "a\8320 -> x\8321"
"[]i64" ~ "[]a\8320"
## typarams
["(\"t\",(0,Unlifted,NoLoc))"]
## tyvars
[("a\8320",(3,TyVarFree NoLoc Unlifted)),("x\8321",(3,TyVarFree NoLoc Unlifted)),("t\8322",(4,TyVarFree NoLoc Lifted)),("t\8323",(5,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8324",(5,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8321\8323",(5,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64])),("index\8321\8324",(5,TyVarFree NoLoc Unlifted)),("index_elem\8321\8325",(5,TyVarFree NoLoc Unlifted))]
## solution
([],[("a\8320",Right "i64"),("x\8321",Right "t"),("t\8322",Right "i64"),("t\8323",Right "i64"),("t\8324",Right "i64"),("t\8321\8323",Right "i64"),("index\8321\8324",Right "t"),("index_elem\8321\8325",Right "t")])

# TySolve.solve
## constraints
"t" ~ "a\8322"
"i64" ~ "i64"
"b\8323 -> a\8322" ~ "a\8320 -> x\8321"
"[]i64" ~ "[]a\8320"
"[]t" ~ "[]x\8321"
## typarams
["(\"t\",(0,Unlifted,NoLoc))"]
## tyvars
[("a\8320",(3,TyVarFree NoLoc Unlifted)),("x\8321",(3,TyVarFree NoLoc Unlifted)),("a\8322",(3,TyVarFree NoLoc Lifted)),("b\8323",(3,TyVarFree NoLoc Lifted))]
## solution
([],[("a\8320",Right "i64"),("x\8321",Right "t"),("a\8322",Right "t"),("b\8323",Right "i64")])

# TySolve.solve
## constraints
"i64" ~ "i64"
"t" ~ "t\8320"
"[]t" ~ "[]t\8320"
## typarams
["(\"t\",(0,Unlifted,NoLoc))"]
## tyvars
[("t\8320",(2,TyVarFree NoLoc Unlifted))]
## solution
([],[("t\8320",Right "t")])

# TySolve.solve
## constraints
"t" ~ "et\8320"
"t\8322" ~ "num\8321"
"index\8323" ~ "index_elem\8324"
"[]et\8320" ~ "[]index_elem\8324"
"t" ~ "index\8323"
## typarams
["(\"t\",(0,Unlifted,NoLoc))"]
## tyvars
[("et\8320",(2,TyVarFree NoLoc Unlifted)),("num\8321",(2,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8322",(2,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64])),("index\8323",(2,TyVarFree NoLoc Unlifted)),("index_elem\8324",(2,TyVarFree NoLoc Unlifted))]
## solution
([],[("et\8320",Right "t"),("num\8321",Left "[i8, i16, i32, i64]"),("t\8322",Left "[i8, i16, i32, i64]"),("index\8323",Right "t"),("index_elem\8324",Right "t")])

# TySolve.solve
## constraints
"t" ~ "a\8320"
"t" ~ "a\8320"
## typarams
["(\"t\",(0,Unlifted,NoLoc))"]
## tyvars
[("a\8320",(2,TyVarFree NoLoc Unlifted))]
## solution
([],[("a\8320",Right "t")])

# TySolve.solve
## constraints
"[][]t" ~ "[][]a\8320"
"i64" ~ "t\8323"
"i64" ~ "t\8323"
"t\8323" ~ "i64"
"[]t" ~ "[]a\8320"
## typarams
["(\"t\",(0,Unlifted,NoLoc))"]
## tyvars
[("a\8320",(2,TyVarFree NoLoc Unlifted)),("t\8323",(2,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("a\8320",Right "t"),("t\8323",Right "i64")])

# TySolve.solve
## constraints
"t\8321" ~ "[]t\8321\8321\8326"
"[][][]t" ~ "[][]t\8321"
"[]t\8321" ~ "[][]t\8320"
"i64" ~ "t\8327"
"i64" ~ "t\8327"
"t\8327" ~ "t\8326"
"i64" ~ "t\8326"
"t\8326" ~ "i64"
"[]t" ~ "[]t\8320"
## typarams
["(\"t\",(0,Unlifted,NoLoc))"]
## tyvars
[("t\8320",(2,TyVarFree NoLoc Unlifted)),("t\8321",(2,TyVarFree NoLoc Unlifted)),("t\8326",(2,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8327",(2,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8321\8321\8326",(2,TyVarFree NoLoc Unlifted))]
## solution
([],[("t\8320",Right "t"),("t\8321",Right "[]t"),("t\8326",Right "i64"),("t\8327",Right "i64"),("t\8321\8321\8326",Right "t")])

# TySolve.solve
## constraints
"t\8321" ~ "[]t\8321\8322\8321"
"[][][][]t" ~ "[][][]t\8321"
"[]t\8321" ~ "[][]t\8320"
"i64" ~ "t\8328"
"i64" ~ "t\8328"
"t\8328" ~ "t\8327"
"i64" ~ "t\8327"
"t\8327" ~ "t\8326"
"i64" ~ "t\8326"
"t\8326" ~ "i64"
"[]t" ~ "[]t\8320"
## typarams
["(\"t\",(0,Unlifted,NoLoc))"]
## tyvars
[("t\8320",(2,TyVarFree NoLoc Unlifted)),("t\8321",(2,TyVarFree NoLoc Unlifted)),("t\8326",(2,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8327",(2,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8328",(2,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8321\8322\8321",(2,TyVarFree NoLoc Unlifted))]
## solution
([],[("t\8320",Right "t"),("t\8321",Right "[]t"),("t\8326",Right "i64"),("t\8327",Right "i64"),("t\8328",Right "i64"),("t\8321\8322\8321",Right "t")])

# TySolve.solve
## constraints
"i64" ~ "t\8320"
"i64" ~ "t\8320"
"t\8320" ~ "i64"
"i64" ~ "i64"
"i64" ~ "i64"
"[]t" ~ "[]a\8325"
"[][]t" ~ "[][]a\8325"
## typarams
["(\"t\",(0,Unlifted,NoLoc))"]
## tyvars
[("t\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("a\8325",(2,TyVarFree NoLoc Unlifted))]
## solution
([],[("t\8320",Right "i64"),("a\8325",Right "t")])

# TySolve.solve
## constraints
"t\8321\8320" ~ "[]t\8321\8320\8321\8326"
"i64" ~ "t\8321"
"i64" ~ "t\8321"
"t\8321" ~ "t\8320"
"i64" ~ "t\8320"
"t\8320" ~ "i64"
"[]t" ~ "[]t\8321\8321"
"[][]t\8321\8321" ~ "[]t\8321\8320"
"[][][]t" ~ "[][]t\8321\8320"
## typarams
["(\"t\",(0,Unlifted,NoLoc))"]
## tyvars
[("t\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8321",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8321\8320",(2,TyVarFree NoLoc Unlifted)),("t\8321\8321",(2,TyVarFree NoLoc Unlifted)),("t\8321\8320\8321\8326",(2,TyVarFree NoLoc Unlifted))]
## solution
([],[("t\8320",Right "i64"),("t\8321",Right "i64"),("t\8321\8320",Right "[]t"),("t\8321\8321",Right "t"),("t\8321\8320\8321\8326",Right "t")])

# TySolve.solve
## constraints
"t\8321\8325" ~ "[][]t\8321\8325\8322\8321"
"i64" ~ "t\8322"
"i64" ~ "t\8322"
"t\8322" ~ "t\8321"
"i64" ~ "t\8321"
"t\8321" ~ "t\8320"
"i64" ~ "t\8320"
"t\8320" ~ "i64"
"[]t" ~ "[]t\8321\8326"
"[][][]t\8321\8326" ~ "[]t\8321\8325"
"[][][][]t" ~ "[][]t\8321\8325"
## typarams
["(\"t\",(0,Unlifted,NoLoc))"]
## tyvars
[("t\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8321",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8322",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8321\8325",(2,TyVarFree NoLoc Unlifted)),("t\8321\8326",(2,TyVarFree NoLoc Unlifted)),("t\8321\8325\8322\8321",(2,TyVarFree NoLoc Unlifted))]
## solution
([],[("t\8320",Right "i64"),("t\8321",Right "i64"),("t\8322",Right "i64"),("t\8321\8325",Right "[][]t"),("t\8321\8326",Right "t"),("t\8321\8325\8322\8321",Right "t")])

# TySolve.solve
## constraints
"[][]t" ~ "[][]a\8320"
"[][]t" ~ "[][]a\8320"
## typarams
["(\"t\",(0,Unlifted,NoLoc))"]
## tyvars
[("a\8320",(2,TyVarFree NoLoc Unlifted))]
## solution
([],[("a\8320",Right "t")])

# TySolve.solve
## constraints
"(x: a\8321) -> a\8321" ~ "a\8320 -> bool"
"[]bool" ~ "[]a\8320"
## typarams
mempty
## tyvars
[("a\8320",(2,TyVarFree NoLoc Unlifted)),("a\8321",(2,TyVarFree NoLoc Lifted))]
## solution
([],[("a\8320",Right "bool"),("a\8321",Right "bool")])

# TySolve.solve
## constraints
"(x: a\8321) -> a\8321" ~ "a\8320 -> bool"
"[]bool" ~ "[]a\8320"
## typarams
mempty
## tyvars
[("a\8320",(2,TyVarFree NoLoc Unlifted)),("a\8321",(2,TyVarFree NoLoc Lifted))]
## solution
([],[("a\8320",Right "bool"),("a\8321",Right "bool")])

# TySolve.solve
## constraints
"t\8320" ~ "a"
"[]b" ~ "[]elem\8321"
"t\8322" ~ "elem\8321"
"t\8320" ~ "a"
"t\8322" ~ "b"
"a" ~ "a"
"a" ~ "t\8320"
## typarams
["(\"a\",(0,Unlifted,NoLoc))","(\"b\",(0,Unlifted,NoLoc))"]
## tyvars
[("t\8320",(4,TyVarFree NoLoc Lifted)),("elem\8321",(4,TyVarFree NoLoc Unlifted)),("t\8322",(4,TyVarFree NoLoc Lifted))]
## solution
([],[("t\8320",Right "a"),("elem\8321",Right "b"),("t\8322",Right "b")])

# TySolve.solve
## constraints
"b -> a -> a" ~ "a\8322 -> b\8323 -> c\8324"
"[]b" ~ "[]t\8327"
"(b: b\8323) -> (a: a\8322) -> c\8324" ~ "a\8320 -> b\8321 -> a\8320"
"a" ~ "a\8320"
"[]t\8327" ~ "[]b\8321"
"a" ~ "a\8320"
## typarams
["(\"a\",(0,Unlifted,NoLoc))","(\"b\",(0,Unlifted,NoLoc))"]
## tyvars
[("a\8320",(4,TyVarFree NoLoc Unlifted)),("b\8321",(4,TyVarFree NoLoc Unlifted)),("a\8322",(4,TyVarFree NoLoc Lifted)),("b\8323",(4,TyVarFree NoLoc Lifted)),("c\8324",(4,TyVarFree NoLoc Lifted)),("t\8327",(4,TyVarFree NoLoc Unlifted))]
## solution
([],[("a\8320",Right "a"),("b\8321",Right "b"),("a\8322",Right "b"),("b\8323",Right "a"),("c\8324",Right "a"),("t\8327",Right "b")])

# TySolve.solve
## constraints
"i64" ~ "i64"
"i64 -> a" ~ "a\8320 -> x\8321"
"[]i64" ~ "[]a\8320"
"[]a" ~ "[]x\8321"
## typarams
["(\"a\",(0,Unlifted,NoLoc))"]
## tyvars
[("a\8320",(3,TyVarFree NoLoc Unlifted)),("x\8321",(3,TyVarFree NoLoc Unlifted))]
## solution
([],[("a\8320",Right "i64"),("x\8321",Right "a")])

# TySolve.solve
## constraints
"x\8321" ~ "[]x\8321\8321\8328"
"c\8324" ~ "[]c\8324\8321\8329"
"i64" ~ "i64"
"i64 -> i64 -> a" ~ "a\8322 -> b\8323"
"(f: i64 -> a\8325) -> *[]a\8325" ~ "b\8323 -> c\8324"
"i64" ~ "i64"
"(x: a\8322) -> c\8324" ~ "a\8320 -> x\8321"
"[]i64" ~ "[]a\8320"
"[][]a" ~ "[]x\8321"
## typarams
["(\"a\",(0,Unlifted,NoLoc))"]
## tyvars
[("a\8320",(4,TyVarFree NoLoc Unlifted)),("x\8321",(4,TyVarFree NoLoc Unlifted)),("a\8322",(4,TyVarFree NoLoc Lifted)),("b\8323",(4,TyVarFree NoLoc Lifted)),("c\8324",(4,TyVarFree NoLoc Lifted)),("a\8325",(4,TyVarFree NoLoc Unlifted)),("x\8321\8321\8328",(4,TyVarFree NoLoc Unlifted)),("c\8324\8321\8329",(4,TyVarFree NoLoc Lifted))]
## solution
([],[("a\8320",Right "i64"),("x\8321",Right "[]a"),("a\8322",Right "i64"),("b\8323",Right "i64 -> a"),("c\8324",Right "[]a"),("a\8325",Right "a"),("x\8321\8321\8328",Right "a"),("c\8324\8321\8329",Right "a")])

# TySolve.solve
## constraints
"x\8321" ~ "[][]x\8321\8322\8320"
"c\8324" ~ "[][]c\8324\8322\8321"
"i64" ~ "i64"
"i64" ~ "i64"
"i64 -> i64 -> i64 -> a" ~ "a\8322 -> b\8323"
"(f: i64 -> i64 -> a\8325) -> *[][]a\8325" ~ "b\8323 -> c\8324"
"i64" ~ "i64"
"(x: a\8322) -> c\8324" ~ "a\8320 -> x\8321"
"[]i64" ~ "[]a\8320"
"[][][]a" ~ "[]x\8321"
## typarams
["(\"a\",(0,Unlifted,NoLoc))"]
## tyvars
[("a\8320",(5,TyVarFree NoLoc Unlifted)),("x\8321",(5,TyVarFree NoLoc Unlifted)),("a\8322",(5,TyVarFree NoLoc Lifted)),("b\8323",(5,TyVarFree NoLoc Lifted)),("c\8324",(5,TyVarFree NoLoc Lifted)),("a\8325",(5,TyVarFree NoLoc Unlifted)),("x\8321\8322\8320",(5,TyVarFree NoLoc Unlifted)),("c\8324\8322\8321",(5,TyVarFree NoLoc Lifted))]
## solution
([],[("a\8320",Right "i64"),("x\8321",Right "[][]a"),("a\8322",Right "i64"),("b\8323",Right "i64 -> i64 -> a"),("c\8324",Right "[][]a"),("a\8325",Right "a"),("x\8321\8322\8320",Right "a"),("c\8324\8322\8321",Right "a")])

# TySolve.solve
## constraints
"a -> b" ~ "a\8320 -> b\8321"
"a" ~ "a\8320"
"a" ~ "a\8320"
"(b, b)" ~ "(b\8321, b\8321)"
## typarams
["(\"a\",(0,Unlifted,NoLoc))","(\"b\",(0,Unlifted,NoLoc))"]
## tyvars
[("a\8320",(4,TyVarFree NoLoc Unlifted)),("b\8321",(4,TyVarFree NoLoc Unlifted))]
## solution
([],[("a\8320",Right "a"),("b\8321",Right "b")])

# TySolve.solve
## constraints
"a -> b" ~ "a\8320 -> b\8321"
"a" ~ "a\8320"
"b" ~ "b\8321"
"(b, a)" ~ "(b\8321, a\8320)"
## typarams
["(\"a\",(0,Unlifted,NoLoc))","(\"b\",(0,Unlifted,NoLoc))"]
## tyvars
[("a\8320",(4,TyVarFree NoLoc Unlifted)),("b\8321",(4,TyVarFree NoLoc Unlifted))]
## solution
([],[("a\8320",Right "a"),("b\8321",Right "b")])

# TySolve.solve
## constraints
"a -> b" ~ "a\8320 -> b\8321"
"a" ~ "a\8320"
"a" ~ "a\8320"
"(b\8321, b\8321)" ~ "t\8329"
"b" ~ "kt\8328"
## typarams
["(\"a\",(0,Unlifted,NoLoc))","(\"b\",(0,Unlifted,NoLoc))"]
## tyvars
[("a\8320",(4,TyVarFree NoLoc Unlifted)),("b\8321",(4,TyVarFree NoLoc Unlifted)),("kt\8328",(4,TyVarFree NoLoc Lifted)),("t\8329",(4,TyVarRecord NoLoc (fromList [(Name "1",Scalar (TypeVar NoUniqueness (QualName {qualQuals = [], qualLeaf = VName (Name "kt\8328") 9836}) []))])))]
## solution
([],[("a\8320",Right "a"),("b\8321",Right "b"),("kt\8328",Right "b"),("t\8329",Right "(b, b)")])

# TySolve.solve
## constraints
"a -> b" ~ "a\8320 -> b\8321"
"a" ~ "a\8320"
"b" ~ "b\8321"
"(b\8321, a\8320)" ~ "t\8329"
"a" ~ "kt\8328"
## typarams
["(\"a\",(0,Unlifted,NoLoc))","(\"b\",(0,Unlifted,NoLoc))"]
## tyvars
[("a\8320",(4,TyVarFree NoLoc Unlifted)),("b\8321",(4,TyVarFree NoLoc Unlifted)),("kt\8328",(4,TyVarFree NoLoc Lifted)),("t\8329",(4,TyVarRecord NoLoc (fromList [(Name "1",Scalar (TypeVar NoUniqueness (QualName {qualQuals = [], qualLeaf = VName (Name "kt\8328") 9855}) []))])))]
## solution
([],[("a\8320",Right "a"),("b\8321",Right "b"),("kt\8328",Right "a"),("t\8329",Right "(b, a)")])

# TySolve.solve
## constraints
"i32" ~ "i32"
"f32" ~ "f32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f32" ~ "f32"
"i32" ~ "i32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i32" ~ "i32"
"f64" ~ "f64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f64" ~ "f64"
"i32" ~ "i32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"t\8320" ~ "bool"
## typarams
mempty
## tyvars
[("t\8320",(2,TyVarPrim NoLoc [Bool,Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64]))]
## solution
([],[("t\8320",Right "bool")])

# TySolve.solve
## constraints
## typarams
["(\"t\",(0,Unlifted,NoLoc))"]
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
## typarams
["(\"t\",(0,Unlifted,NoLoc))"]
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
## typarams
["(\"t\",(0,Unlifted,NoLoc))"]
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f32" ~ "t\8320"
"f32" ~ "t\8320"
"f32" ~ "t\8325"
"f32" ~ "t\8325"
"bool" ~ "bool"
"f32" ~ "if_t\8321\8320"
"f32" ~ "if_t\8321\8320"
"bool" ~ "bool"
"f32" ~ "if_t\8321\8321"
"if_t\8321\8320" ~ "if_t\8321\8321"
"f32" ~ "if_t\8321\8321"
## typarams
mempty
## tyvars
[("t\8320",(2,TyVarPrim NoLoc [Bool,Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8325",(2,TyVarPrim NoLoc [Bool,Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("if_t\8321\8320",(2,TyVarFree NoLoc SizeLifted)),("if_t\8321\8321",(2,TyVarFree NoLoc SizeLifted))]
## solution
([],[("t\8320",Right "f32"),("t\8325",Right "f32"),("if_t\8321\8320",Right "f32"),("if_t\8321\8321",Right "f32")])

# TySolve.solve
## constraints
"f32" ~ "f32"
"f32" ~ "t\8324"
"num\8327" ~ "t\8324"
"t\8324" ~ "f32"
"u32" ~ "t\8323"
"num\8321\8324" ~ "t\8323"
"f32" ~ "f32"
"f32" ~ "t\8322\8320"
"num\8322\8323" ~ "t\8322\8320"
"t\8322\8320" ~ "f32"
"u32" ~ "t\8321\8329"
"num\8323\8320" ~ "t\8321\8329"
"t\8323" ~ "t\8322"
"t\8321\8329" ~ "t\8322"
"f32" ~ "f32"
"f32" ~ "t\8324\8320"
"num\8324\8323" ~ "t\8324\8320"
"t\8324\8320" ~ "f32"
"u32" ~ "t\8323\8329"
"num\8325\8320" ~ "t\8323\8329"
"t\8322" ~ "t\8321"
"t\8323\8329" ~ "t\8321"
"f32" ~ "f32"
"f32" ~ "t\8325\8329"
"num\8326\8322" ~ "t\8325\8329"
"t\8325\8329" ~ "f32"
"t\8321" ~ "t\8320"
"u32" ~ "t\8320"
"u32" ~ "t\8320"
## typarams
mempty
## tyvars
[("t\8320",(5,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64])),("t\8321",(5,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64])),("t\8322",(5,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64])),("t\8323",(5,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64])),("t\8324",(5,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("num\8327",(5,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("num\8321\8324",(5,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8321\8329",(5,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64])),("t\8322\8320",(5,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("num\8322\8323",(5,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("num\8323\8320",(5,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8323\8329",(5,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64])),("t\8324\8320",(5,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("num\8324\8323",(5,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("num\8325\8320",(5,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8325\8329",(5,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("num\8326\8322",(5,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("t\8320",Right "u32"),("t\8321",Right "u32"),("t\8322",Right "u32"),("t\8323",Right "u32"),("t\8324",Right "f32"),("num\8327",Right "f32"),("num\8321\8324",Right "u32"),("t\8321\8329",Right "u32"),("t\8322\8320",Right "f32"),("num\8322\8323",Right "f32"),("num\8323\8320",Right "u32"),("t\8323\8329",Right "u32"),("t\8324\8320",Right "f32"),("num\8324\8323",Right "f32"),("num\8325\8320",Right "u32"),("t\8325\8329",Right "f32"),("num\8326\8322",Right "f32")])

# TySolve.solve
## constraints
"u32" ~ "t\8322"
"num\8323" ~ "t\8322"
"t\8322" ~ "t\8321"
"num\8328" ~ "t\8321"
"t\8321" ~ "u32"
"f32" ~ "t\8320"
"num\8321\8325" ~ "t\8320"
"u32" ~ "t\8322\8322"
"num\8322\8323" ~ "t\8322\8322"
"t\8322\8322" ~ "t\8322\8321"
"num\8322\8328" ~ "t\8322\8321"
"t\8322\8321" ~ "u32"
"f32" ~ "t\8322\8320"
"num\8323\8325" ~ "t\8322\8320"
"u32" ~ "t\8324\8322"
"num\8324\8323" ~ "t\8324\8322"
"t\8324\8322" ~ "t\8324\8321"
"num\8324\8328" ~ "t\8324\8321"
"t\8324\8321" ~ "u32"
"f32" ~ "t\8324\8320"
"num\8325\8325" ~ "t\8324\8320"
"u32" ~ "t\8326\8322"
"num\8326\8323" ~ "t\8326\8322"
"t\8326\8322" ~ "t\8326\8321"
"num\8326\8328" ~ "t\8326\8321"
"t\8326\8321" ~ "u32"
"f32" ~ "t\8326\8320"
"num\8327\8325" ~ "t\8326\8320"
"(f32, f32, f32, f32)" ~ "(t\8320, t\8322\8320, t\8324\8320, t\8326\8320)"
## typarams
mempty
## tyvars
[("t\8320",(2,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8321",(2,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64])),("t\8322",(2,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64])),("num\8323",(2,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("num\8328",(2,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("num\8321\8325",(2,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8322\8320",(2,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8322\8321",(2,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64])),("t\8322\8322",(2,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64])),("num\8322\8323",(2,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("num\8322\8328",(2,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("num\8323\8325",(2,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8324\8320",(2,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8324\8321",(2,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64])),("t\8324\8322",(2,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64])),("num\8324\8323",(2,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("num\8324\8328",(2,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("num\8325\8325",(2,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8326\8320",(2,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8326\8321",(2,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64])),("t\8326\8322",(2,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64])),("num\8326\8323",(2,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("num\8326\8328",(2,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("num\8327\8325",(2,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("t\8320",Right "f32"),("t\8321",Right "u32"),("t\8322",Right "u32"),("num\8323",Right "u32"),("num\8328",Right "u32"),("num\8321\8325",Right "f32"),("t\8322\8320",Right "f32"),("t\8322\8321",Right "u32"),("t\8322\8322",Right "u32"),("num\8322\8323",Right "u32"),("num\8322\8328",Right "u32"),("num\8323\8325",Right "f32"),("t\8324\8320",Right "f32"),("t\8324\8321",Right "u32"),("t\8324\8322",Right "u32"),("num\8324\8323",Right "u32"),("num\8324\8328",Right "u32"),("num\8325\8325",Right "f32"),("t\8326\8320",Right "f32"),("t\8326\8321",Right "u32"),("t\8326\8322",Right "u32"),("num\8326\8323",Right "u32"),("num\8326\8328",Right "u32"),("num\8327\8325",Right "f32")])

# TySolve.solve
## constraints
"f32" ~ "f32"
"f32" ~ "f32"
"f32" ~ "f32"
"f32" ~ "f32"
"t\8328" ~ "f32"
"f32" ~ "t\8329"
"t\8328" ~ "t\8329"
"f32" ~ "t\8321\8324"
"t\8328" ~ "t\8321\8324"
"f32" ~ "t\8321\8329"
"t\8328" ~ "t\8321\8329"
"t\8329" ~ "f32"
"t\8321\8324" ~ "f32"
"t\8321\8329" ~ "f32"
"f32" ~ "f32"
"colour" ~ "colour"
## typarams
mempty
## tyvars
[("t\8328",(5,TyVarFree NoLoc Lifted)),("t\8329",(6,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8321\8324",(6,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8321\8329",(6,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("t\8328",Right "f32"),("t\8329",Right "f32"),("t\8321\8324",Right "f32"),("t\8321\8329",Right "f32")])

# TySolve.solve
## constraints
"f32" ~ "f32"
"f32" ~ "f32"
"f32" ~ "f32"
"f32" ~ "f32"
"t\8328" ~ "f32"
"f32" ~ "t\8329"
"t\8328" ~ "t\8329"
"f32" ~ "t\8321\8324"
"t\8328" ~ "t\8321\8324"
"f32" ~ "t\8321\8329"
"t\8328" ~ "t\8321\8329"
"t\8329" ~ "f32"
"t\8321\8324" ~ "f32"
"t\8321\8329" ~ "f32"
"f32" ~ "f32"
"colour" ~ "colour"
## typarams
mempty
## tyvars
[("t\8328",(6,TyVarFree NoLoc Lifted)),("t\8329",(7,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8321\8324",(7,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8321\8329",(7,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("t\8328",Right "f32"),("t\8329",Right "f32"),("t\8321\8324",Right "f32"),("t\8321\8329",Right "f32")])

# TySolve.solve
## constraints
"colour" ~ "colour"
"(t\8322, t\8323, t\8324, t\8325)" ~ "(f32, f32, f32, f32)"
"colour" ~ "colour"
"(t\8328, t\8329, t\8321\8320, t\8321\8321)" ~ "(f32, f32, f32, f32)"
"t\8322" ~ "f32"
"t\8328" ~ "f32"
"t\8323" ~ "f32"
"t\8329" ~ "f32"
"t\8324" ~ "f32"
"t\8321\8320" ~ "f32"
"t\8325" ~ "t\8322\8325"
"t\8321\8321" ~ "t\8322\8325"
"t\8322\8325" ~ "t\8322\8324"
"f32" ~ "t\8322\8324"
"f32" ~ "f32"
"f32" ~ "f32"
"f32" ~ "f32"
"t\8322\8324" ~ "f32"
"colour" ~ "colour"
## typarams
mempty
## tyvars
[("t\8322",(4,TyVarFree NoLoc Lifted)),("t\8323",(4,TyVarFree NoLoc Lifted)),("t\8324",(4,TyVarFree NoLoc Lifted)),("t\8325",(4,TyVarFree NoLoc Lifted)),("t\8328",(6,TyVarFree NoLoc Lifted)),("t\8329",(6,TyVarFree NoLoc Lifted)),("t\8321\8320",(6,TyVarFree NoLoc Lifted)),("t\8321\8321",(6,TyVarFree NoLoc Lifted)),("t\8322\8324",(7,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8322\8325",(7,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("t\8322",Right "f32"),("t\8323",Right "f32"),("t\8324",Right "f32"),("t\8325",Right "f32"),("t\8328",Right "f32"),("t\8329",Right "f32"),("t\8321\8320",Right "f32"),("t\8321\8321",Right "f32"),("t\8322\8324",Right "f32"),("t\8322\8325",Right "f32")])

# TySolve.solve
## constraints
"colour" ~ "colour"
"(t\8322, t\8323, t\8324, t\8325)" ~ "(f32, f32, f32, f32)"
"colour" ~ "colour"
"(t\8328, t\8329, t\8321\8320, t\8321\8321)" ~ "(f32, f32, f32, f32)"
"t\8322" ~ "t\8321\8322"
"t\8328" ~ "t\8321\8322"
"t\8323" ~ "t\8321\8327"
"t\8329" ~ "t\8321\8327"
"t\8324" ~ "t\8322\8322"
"t\8321\8320" ~ "t\8322\8322"
"t\8325" ~ "t\8322\8327"
"t\8321\8321" ~ "t\8322\8327"
"t\8321\8322" ~ "f32"
"t\8321\8327" ~ "f32"
"t\8322\8322" ~ "f32"
"t\8322\8327" ~ "f32"
"colour" ~ "colour"
## typarams
mempty
## tyvars
[("t\8322",(4,TyVarFree NoLoc Lifted)),("t\8323",(4,TyVarFree NoLoc Lifted)),("t\8324",(4,TyVarFree NoLoc Lifted)),("t\8325",(4,TyVarFree NoLoc Lifted)),("t\8328",(6,TyVarFree NoLoc Lifted)),("t\8329",(6,TyVarFree NoLoc Lifted)),("t\8321\8320",(6,TyVarFree NoLoc Lifted)),("t\8321\8321",(6,TyVarFree NoLoc Lifted)),("t\8321\8322",(7,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8321\8327",(7,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8322\8322",(7,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8322\8327",(7,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("t\8322",Right "f32"),("t\8323",Right "f32"),("t\8324",Right "f32"),("t\8325",Right "f32"),("t\8328",Right "f32"),("t\8329",Right "f32"),("t\8321\8320",Right "f32"),("t\8321\8321",Right "f32"),("t\8321\8322",Right "f32"),("t\8321\8327",Right "f32"),("t\8322\8322",Right "f32"),("t\8322\8327",Right "f32")])

# TySolve.solve
## constraints
"colour" ~ "colour"
"(t\8322, t\8323, t\8324, t\8325)" ~ "(f32, f32, f32, f32)"
"colour" ~ "colour"
"(t\8328, t\8329, t\8321\8320, t\8321\8321)" ~ "(f32, f32, f32, f32)"
"t\8322" ~ "t\8321\8322"
"t\8328" ~ "t\8321\8322"
"t\8323" ~ "t\8321\8327"
"t\8329" ~ "t\8321\8327"
"t\8324" ~ "t\8322\8322"
"t\8321\8320" ~ "t\8322\8322"
"t\8325" ~ "t\8322\8327"
"t\8321\8321" ~ "t\8322\8327"
"t\8321\8322" ~ "f32"
"t\8321\8327" ~ "f32"
"t\8322\8322" ~ "f32"
"t\8322\8327" ~ "f32"
"colour" ~ "colour"
## typarams
mempty
## tyvars
[("t\8322",(4,TyVarFree NoLoc Lifted)),("t\8323",(4,TyVarFree NoLoc Lifted)),("t\8324",(4,TyVarFree NoLoc Lifted)),("t\8325",(4,TyVarFree NoLoc Lifted)),("t\8328",(6,TyVarFree NoLoc Lifted)),("t\8329",(6,TyVarFree NoLoc Lifted)),("t\8321\8320",(6,TyVarFree NoLoc Lifted)),("t\8321\8321",(6,TyVarFree NoLoc Lifted)),("t\8321\8322",(7,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8321\8327",(7,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8322\8322",(7,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8322\8327",(7,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("t\8322",Right "f32"),("t\8323",Right "f32"),("t\8324",Right "f32"),("t\8325",Right "f32"),("t\8328",Right "f32"),("t\8329",Right "f32"),("t\8321\8320",Right "f32"),("t\8321\8321",Right "f32"),("t\8321\8322",Right "f32"),("t\8321\8327",Right "f32"),("t\8322\8322",Right "f32"),("t\8322\8327",Right "f32")])

# TySolve.solve
## constraints
"colour" ~ "colour"
"(t\8322, t\8323, t\8324, t\8325)" ~ "(f32, f32, f32, f32)"
"t\8322" ~ "t\8326"
"f32" ~ "t\8326"
"t\8323" ~ "t\8321\8321"
"f32" ~ "t\8321\8321"
"t\8324" ~ "t\8321\8326"
"f32" ~ "t\8321\8326"
"t\8325" ~ "t\8322\8321"
"f32" ~ "t\8322\8321"
"t\8326" ~ "f32"
"t\8321\8321" ~ "f32"
"t\8321\8326" ~ "f32"
"t\8322\8321" ~ "f32"
"colour" ~ "colour"
## typarams
mempty
## tyvars
[("t\8322",(4,TyVarFree NoLoc Lifted)),("t\8323",(4,TyVarFree NoLoc Lifted)),("t\8324",(4,TyVarFree NoLoc Lifted)),("t\8325",(4,TyVarFree NoLoc Lifted)),("t\8326",(5,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8321\8321",(5,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8321\8326",(5,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8322\8321",(5,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("t\8322",Right "f32"),("t\8323",Right "f32"),("t\8324",Right "f32"),("t\8325",Right "f32"),("t\8326",Right "f32"),("t\8321\8321",Right "f32"),("t\8321\8326",Right "f32"),("t\8322\8321",Right "f32")])

# TySolve.solve
## constraints
"colour" ~ "colour"
"(t\8322, t\8323, t\8324, t\8325)" ~ "(f32, f32, f32, f32)"
"colour" ~ "colour"
"(t\8328, t\8329, t\8321\8320, t\8321\8321)" ~ "(f32, f32, f32, f32)"
"f32" ~ "t\8321\8322"
"f32" ~ "t\8321\8322"
"t\8321\8327" ~ "t\8321\8322"
"f32" ~ "t\8321\8328"
"t\8321\8327" ~ "t\8321\8328"
"t\8322\8323" ~ "t\8321\8328"
"f32" ~ "t\8322\8324"
"t\8321\8327" ~ "t\8322\8324"
"t\8322\8329" ~ "t\8322\8324"
"t\8322" ~ "t\8323\8320"
"t\8322" ~ "t\8323\8320"
"t\8323\8325" ~ "t\8323\8320"
"t\8328" ~ "t\8323\8326"
"t\8328" ~ "t\8323\8326"
"t\8324\8321" ~ "t\8323\8326"
"t\8323" ~ "t\8324\8322"
"t\8323" ~ "t\8324\8322"
"t\8324\8327" ~ "t\8324\8322"
"t\8329" ~ "t\8324\8328"
"t\8329" ~ "t\8324\8328"
"t\8325\8323" ~ "t\8324\8328"
"t\8324" ~ "t\8325\8324"
"t\8324" ~ "t\8325\8324"
"t\8325\8329" ~ "t\8325\8324"
"t\8321\8320" ~ "t\8326\8320"
"t\8321\8320" ~ "t\8326\8320"
"t\8326\8325" ~ "t\8326\8320"
"t\8322\8323" ~ "t\8326\8327"
"t\8323\8325" ~ "t\8326\8327"
"t\8322\8329" ~ "t\8327\8322"
"t\8324\8321" ~ "t\8327\8322"
"t\8326\8327" ~ "t\8326\8326"
"t\8327\8322" ~ "t\8326\8326"
"t\8326\8326" ~ "f32"
"t\8322\8323" ~ "t\8328\8324"
"t\8324\8327" ~ "t\8328\8324"
"t\8322\8329" ~ "t\8328\8329"
"t\8325\8323" ~ "t\8328\8329"
"t\8328\8324" ~ "t\8328\8323"
"t\8328\8329" ~ "t\8328\8323"
"t\8328\8323" ~ "f32"
"t\8322\8323" ~ "t\8321\8320\8321"
"t\8325\8329" ~ "t\8321\8320\8321"
"t\8322\8329" ~ "t\8321\8320\8326"
"t\8326\8325" ~ "t\8321\8320\8326"
"t\8321\8320\8321" ~ "t\8321\8320\8320"
"t\8321\8320\8326" ~ "t\8321\8320\8320"
"t\8321\8320\8320" ~ "f32"
"f32" ~ "t\8321\8321\8329"
"t\8325" ~ "t\8321\8321\8329"
"f32" ~ "t\8321\8322\8324"
"t\8321\8321" ~ "t\8321\8322\8324"
"t\8321\8321\8329" ~ "t\8321\8321\8328"
"t\8321\8322\8324" ~ "t\8321\8321\8328"
"t\8321\8321\8328" ~ "t\8321\8321\8327"
"t\8321\8327" ~ "t\8321\8321\8327"
"f32" ~ "f32"
"f32" ~ "f32"
"f32" ~ "f32"
"t\8321\8321\8327" ~ "f32"
"colour" ~ "colour"
## typarams
mempty
## tyvars
[("t\8322",(6,TyVarFree NoLoc Lifted)),("t\8323",(6,TyVarFree NoLoc Lifted)),("t\8324",(6,TyVarFree NoLoc Lifted)),("t\8325",(6,TyVarFree NoLoc Lifted)),("t\8328",(8,TyVarFree NoLoc Lifted)),("t\8329",(8,TyVarFree NoLoc Lifted)),("t\8321\8320",(8,TyVarFree NoLoc Lifted)),("t\8321\8321",(8,TyVarFree NoLoc Lifted)),("t\8321\8322",(9,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8321\8327",(10,TyVarFree NoLoc Lifted)),("t\8321\8328",(11,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8322\8323",(12,TyVarFree NoLoc Lifted)),("t\8322\8324",(13,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8322\8329",(14,TyVarFree NoLoc Lifted)),("t\8323\8320",(15,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8323\8325",(16,TyVarFree NoLoc Lifted)),("t\8323\8326",(17,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8324\8321",(18,TyVarFree NoLoc Lifted)),("t\8324\8322",(19,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8324\8327",(20,TyVarFree NoLoc Lifted)),("t\8324\8328",(21,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8325\8323",(22,TyVarFree NoLoc Lifted)),("t\8325\8324",(23,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8325\8329",(24,TyVarFree NoLoc Lifted)),("t\8326\8320",(25,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8326\8325",(26,TyVarFree NoLoc Lifted)),("t\8326\8326",(27,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8326\8327",(27,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8327\8322",(27,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8328\8323",(27,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8328\8324",(27,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8328\8329",(27,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8321\8320\8320",(27,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8321\8320\8321",(27,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8321\8320\8326",(27,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8321\8321\8327",(27,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8321\8321\8328",(27,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8321\8321\8329",(27,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8321\8322\8324",(27,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("t\8322",Right "f32"),("t\8323",Right "f32"),("t\8324",Right "f32"),("t\8325",Right "f32"),("t\8328",Right "f32"),("t\8329",Right "f32"),("t\8321\8320",Right "f32"),("t\8321\8321",Right "f32"),("t\8321\8322",Right "f32"),("t\8321\8327",Right "f32"),("t\8321\8328",Right "f32"),("t\8322\8323",Right "f32"),("t\8322\8324",Right "f32"),("t\8322\8329",Right "f32"),("t\8323\8320",Right "f32"),("t\8323\8325",Right "f32"),("t\8323\8326",Right "f32"),("t\8324\8321",Right "f32"),("t\8324\8322",Right "f32"),("t\8324\8327",Right "f32"),("t\8324\8328",Right "f32"),("t\8325\8323",Right "f32"),("t\8325\8324",Right "f32"),("t\8325\8329",Right "f32"),("t\8326\8320",Right "f32"),("t\8326\8325",Right "f32"),("t\8326\8326",Right "f32"),("t\8326\8327",Right "f32"),("t\8327\8322",Right "f32"),("t\8328\8323",Right "f32"),("t\8328\8324",Right "f32"),("t\8328\8329",Right "f32"),("t\8321\8320\8320",Right "f32"),("t\8321\8320\8321",Right "f32"),("t\8321\8320\8326",Right "f32"),("t\8321\8321\8327",Right "f32"),("t\8321\8321\8328",Right "f32"),("t\8321\8321\8329",Right "f32"),("t\8321\8322\8324",Right "f32")])

# TySolve.solve
## constraints
"colour" ~ "colour"
"(t\8322, t\8323, t\8324, t\8325)" ~ "(f32, f32, f32, f32)"
"t\8322" ~ "t\8326"
"f32" ~ "t\8326"
"t\8323" ~ "t\8321\8321"
"f32" ~ "t\8321\8321"
"t\8324" ~ "t\8321\8326"
"f32" ~ "t\8321\8326"
"t\8326" ~ "f32"
"t\8321\8321" ~ "f32"
"t\8321\8326" ~ "f32"
"t\8325" ~ "f32"
"colour" ~ "colour"
## typarams
mempty
## tyvars
[("t\8322",(3,TyVarFree NoLoc Lifted)),("t\8323",(3,TyVarFree NoLoc Lifted)),("t\8324",(3,TyVarFree NoLoc Lifted)),("t\8325",(3,TyVarFree NoLoc Lifted)),("t\8326",(4,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8321\8321",(4,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8321\8326",(4,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("t\8322",Right "f32"),("t\8323",Right "f32"),("t\8324",Right "f32"),("t\8325",Right "f32"),("t\8326",Right "f32"),("t\8321\8321",Right "f32"),("t\8321\8326",Right "f32")])

# TySolve.solve
## constraints
"colour" ~ "colour"
"(t\8322, t\8323, t\8324, t\8325)" ~ "(f32, f32, f32, f32)"
"t\8322" ~ "t\8326"
"f32" ~ "t\8326"
"t\8323" ~ "t\8321\8321"
"f32" ~ "t\8321\8321"
"t\8324" ~ "t\8321\8326"
"f32" ~ "t\8321\8326"
"t\8326" ~ "f32"
"t\8321\8321" ~ "f32"
"t\8321\8326" ~ "f32"
"t\8325" ~ "f32"
"colour" ~ "colour"
## typarams
mempty
## tyvars
[("t\8322",(3,TyVarFree NoLoc Lifted)),("t\8323",(3,TyVarFree NoLoc Lifted)),("t\8324",(3,TyVarFree NoLoc Lifted)),("t\8325",(3,TyVarFree NoLoc Lifted)),("t\8326",(4,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8321\8321",(4,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8321\8326",(4,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("t\8322",Right "f32"),("t\8323",Right "f32"),("t\8324",Right "f32"),("t\8325",Right "f32"),("t\8326",Right "f32"),("t\8321\8321",Right "f32"),("t\8321\8326",Right "f32")])

# TySolve.solve
## constraints
"colour" ~ "colour"
"(t\8322, t\8323, t\8324, t\8325)" ~ "(f32, f32, f32, f32)"
"t\8322" ~ "t\8326"
"f32" ~ "t\8326"
"t\8323" ~ "t\8321\8321"
"f32" ~ "t\8321\8321"
"t\8324" ~ "t\8321\8326"
"f32" ~ "t\8321\8326"
"t\8326" ~ "f32"
"t\8321\8321" ~ "f32"
"t\8321\8326" ~ "f32"
"t\8325" ~ "f32"
"colour" ~ "colour"
## typarams
mempty
## tyvars
[("t\8322",(3,TyVarFree NoLoc Lifted)),("t\8323",(3,TyVarFree NoLoc Lifted)),("t\8324",(3,TyVarFree NoLoc Lifted)),("t\8325",(3,TyVarFree NoLoc Lifted)),("t\8326",(4,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8321\8321",(4,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8321\8326",(4,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("t\8322",Right "f32"),("t\8323",Right "f32"),("t\8324",Right "f32"),("t\8325",Right "f32"),("t\8326",Right "f32"),("t\8321\8321",Right "f32"),("t\8321\8326",Right "f32")])

# TySolve.solve
## constraints
"colour" ~ "colour"
"(t\8322, t\8323, t\8324, t\8325)" ~ "(f32, f32, f32, f32)"
"t\8322" ~ "t\8326"
"f32" ~ "t\8326"
"t\8323" ~ "t\8321\8321"
"f32" ~ "t\8321\8321"
"t\8324" ~ "t\8321\8326"
"f32" ~ "t\8321\8326"
"t\8326" ~ "f32"
"t\8321\8321" ~ "f32"
"t\8321\8326" ~ "f32"
"t\8325" ~ "f32"
"colour" ~ "colour"
## typarams
mempty
## tyvars
[("t\8322",(3,TyVarFree NoLoc Lifted)),("t\8323",(3,TyVarFree NoLoc Lifted)),("t\8324",(3,TyVarFree NoLoc Lifted)),("t\8325",(3,TyVarFree NoLoc Lifted)),("t\8326",(4,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8321\8321",(4,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8321\8326",(4,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("t\8322",Right "f32"),("t\8323",Right "f32"),("t\8324",Right "f32"),("t\8325",Right "f32"),("t\8326",Right "f32"),("t\8321\8321",Right "f32"),("t\8321\8326",Right "f32")])

# TySolve.solve
## constraints
"f32" ~ "f32"
"f32" ~ "f32"
"f32" ~ "f32"
"f32" ~ "f32"
"colour" ~ "colour"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f32" ~ "f32"
"f32" ~ "f32"
"f32" ~ "f32"
"f32" ~ "f32"
"colour" ~ "colour"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f32" ~ "f32"
"f32" ~ "f32"
"f32" ~ "f32"
"f32" ~ "f32"
"colour" ~ "colour"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f32" ~ "f32"
"f32" ~ "f32"
"f32" ~ "f32"
"f32" ~ "f32"
"colour" ~ "colour"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f32" ~ "f32"
"f32" ~ "f32"
"f32" ~ "f32"
"f32" ~ "f32"
"colour" ~ "colour"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f32" ~ "f32"
"f32" ~ "f32"
"f32" ~ "f32"
"f32" ~ "f32"
"colour" ~ "colour"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"colour" ~ "colour"
"colour" ~ "colour"
"colour" ~ "colour"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"colour" ~ "colour"
"colour" ~ "colour"
"colour" ~ "colour"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"colour" ~ "colour"
"colour" ~ "colour"
"colour" ~ "colour"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"colour" ~ "colour"
"colour" ~ "colour"
"colour" ~ "colour"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f32" ~ "f32"
"f32" ~ "f32"
"f32" ~ "f32"
"f32" ~ "f32"
"colour" ~ "colour"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[("t\8320",(1,TyVarFree NoLoc Lifted)),("t\8321",(2,TyVarFree NoLoc Lifted))]
## solution
([("t\8320",Lifted),("t\8321",Lifted)],[])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[("t\8320",(1,TyVarFree NoLoc Lifted))]
## solution
([("t\8320",Lifted)],[])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[("t\8320",(1,TyVarFree NoLoc Lifted)),("t\8321",(2,TyVarFree NoLoc Lifted)),("t\8322",(3,TyVarFree NoLoc Lifted))]
## solution
([("t\8320",Lifted),("t\8321",Lifted),("t\8322",Lifted)],[])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[("t\8320",(1,TyVarFree NoLoc Lifted)),("t\8321",(2,TyVarFree NoLoc Lifted))]
## solution
([("t\8320",Lifted),("t\8321",Lifted)],[])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[("t\8320",(1,TyVarFree NoLoc Lifted)),("t\8321",(2,TyVarFree NoLoc Lifted)),("t\8322",(3,TyVarFree NoLoc Lifted))]
## solution
([("t\8320",Lifted),("t\8321",Lifted),("t\8322",Lifted)],[])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"t\8329" ~ "[]t\8329\8321\8326"
"a\8322" ~ "[]a\8322\8321\8327"
"b\8323" ~ "[][]b\8323\8321\8328"
"t\8321" ~ "i64"
"u32" ~ "t\8324"
"t\8320" ~ "i64"
"[]t\8324" ~ "a\8322"
"(x: t\8329) -> *[]t\8329" ~ "a\8322 -> b\8323"
## typarams
mempty
## tyvars
[("t\8320",(1,TyVarFree NoLoc Lifted)),("t\8321",(1,TyVarFree NoLoc Lifted)),("a\8322",(2,TyVarFree NoLoc Lifted)),("b\8323",(2,TyVarFree NoLoc Lifted)),("t\8324",(2,TyVarFree NoLoc Unlifted)),("t\8329",(2,TyVarFree NoLoc Unlifted)),("t\8329\8321\8326",(2,TyVarFree NoLoc Unlifted)),("a\8322\8321\8327",(2,TyVarFree NoLoc Lifted)),("b\8323\8321\8328",(2,TyVarFree NoLoc Lifted))]
## solution
([],[("t\8320",Right "i64"),("t\8321",Right "i64"),("a\8322",Right "[]u32"),("b\8323",Right "[][]u32"),("t\8324",Right "u32"),("t\8329",Right "[]u32"),("t\8329\8321\8326",Right "u32"),("a\8322\8321\8327",Right "u32"),("b\8323\8321\8328",Right "u32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"i32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[("t\8320",(1,TyVarFree NoLoc Unlifted))]
## solution
([("t\8320",Unlifted)],[])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[("a\8320",(1,TyVarFree NoLoc Unlifted)),("x\8321",(1,TyVarFree NoLoc Unlifted))]
## solution
([("a\8320",Unlifted),("x\8321",Unlifted)],[])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[("a\8320",(1,TyVarFree NoLoc Unlifted)),("b\8321",(1,TyVarFree NoLoc Unlifted)),("x\8322",(1,TyVarFree NoLoc Unlifted))]
## solution
([("a\8320",Unlifted),("b\8321",Unlifted),("x\8322",Unlifted)],[])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[("a\8320",(1,TyVarFree NoLoc Unlifted))]
## solution
([("a\8320",Unlifted)],[])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[("a\8320",(1,TyVarFree NoLoc Unlifted)),("b\8321",(1,TyVarFree NoLoc Unlifted))]
## solution
([("a\8320",Unlifted),("b\8321",Unlifted)],[])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[("t\8320",(1,TyVarFree NoLoc Unlifted))]
## solution
([("t\8320",Unlifted)],[])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[("t\8320",(1,TyVarFree NoLoc Unlifted))]
## solution
([("t\8320",Unlifted)],[])

# TySolve.solve
## constraints
"i64" ~ "i64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i64" ~ "i64"
"t\8320" ~ "t\8322"
## typarams
mempty
## tyvars
[("t\8320",(1,TyVarFree NoLoc Lifted)),("t\8321",(2,TyVarFree NoLoc Unlifted)),("t\8322",(2,TyVarFree NoLoc Unlifted))]
## solution
([("t\8321",Unlifted),("t\8322",Unlifted)],[("t\8320",Right "t\8322")])

# TySolve.solve
## constraints
"t\8321" ~ "i64"
"index\8322" ~ "index_elem\8323"
"t\8320" ~ "[]index_elem\8323"
## typarams
mempty
## tyvars
[("t\8320",(2,TyVarFree NoLoc Lifted)),("t\8321",(3,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64])),("index\8322",(3,TyVarFree NoLoc Unlifted)),("index_elem\8323",(3,TyVarFree NoLoc Unlifted))]
## solution
([("index_elem\8323",Unlifted)],[("t\8320",Right "[]index_elem\8323"),("t\8321",Right "i64"),("index\8322",Right "index_elem\8323")])

# TySolve.solve
## constraints
"t\8322" ~ "[]t\8322\8327"
"t\8321" ~ "[]t\8321\8328"
"t\8321" ~ "t\8322"
"t\8325" ~ "i64"
"t\8322" ~ "[]update_elem\8326"
"t\8320" ~ "update_elem\8326"
## typarams
mempty
## tyvars
[("t\8320",(2,TyVarFree NoLoc Lifted)),("t\8321",(3,TyVarFree NoLoc Lifted)),("t\8322",(4,TyVarFree NoLoc Unlifted)),("t\8325",(4,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64])),("update_elem\8326",(4,TyVarFree NoLoc Unlifted)),("t\8322\8327",(4,TyVarFree NoLoc Unlifted)),("t\8321\8328",(3,TyVarFree NoLoc Lifted))]
## solution
([("update_elem\8326",Unlifted)],[("t\8320",Right "update_elem\8326"),("t\8321",Right "[]t\8321\8328"),("t\8322",Right "[]t\8322\8327"),("t\8325",Right "i64"),("t\8322\8327",Right "update_elem\8326"),("t\8321\8328",Right "update_elem\8326")])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[("a\8320",(1,TyVarFree NoLoc Unlifted)),("b\8321",(1,TyVarFree NoLoc Unlifted))]
## solution
([("a\8320",Unlifted),("b\8321",Unlifted)],[])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[("a\8320",(1,TyVarFree NoLoc Unlifted)),("b\8321",(1,TyVarFree NoLoc Unlifted))]
## solution
([("a\8320",Unlifted),("b\8321",Unlifted)],[])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[("a\8320",(1,TyVarFree NoLoc Lifted))]
## solution
([("a\8320",Lifted)],[])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[("a\8320",(1,TyVarFree NoLoc Lifted))]
## solution
([("a\8320",Lifted)],[])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[("t\8320",(1,TyVarFree NoLoc Unlifted))]
## solution
([("t\8320",Unlifted)],[])

# TySolve.solve
## constraints
"t\8320" ~ "arg\8322 -> res\8323"
"t\8321" ~ "arg\8322"
## typarams
mempty
## tyvars
[("t\8320",(1,TyVarFree NoLoc Lifted)),("t\8321",(2,TyVarFree NoLoc Lifted)),("arg\8322",(3,TyVarFree NoLoc Lifted)),("res\8323",(3,TyVarFree NoLoc Lifted))]
## solution
([("arg\8322",Lifted),("res\8323",Lifted)],[("t\8320",Right "arg\8322 -> res\8323"),("t\8321",Right "arg\8322")])

# TySolve.solve
## constraints
"t\8320" ~ "arg\8323 -> res\8324"
"t\8321" ~ "arg\8323"
"res\8324" ~ "arg\8327 -> res\8328"
"t\8322" ~ "arg\8327"
## typarams
mempty
## tyvars
[("t\8320",(1,TyVarFree NoLoc Lifted)),("t\8321",(2,TyVarFree NoLoc Lifted)),("t\8322",(3,TyVarFree NoLoc Lifted)),("arg\8323",(4,TyVarFree NoLoc Lifted)),("res\8324",(4,TyVarFree NoLoc Lifted)),("arg\8327",(4,TyVarFree NoLoc Lifted)),("res\8328",(4,TyVarFree NoLoc Lifted))]
## solution
([("arg\8323",Lifted),("arg\8327",Lifted),("res\8328",Lifted)],[("t\8320",Right "arg\8323 -> arg\8327 -> res\8328"),("t\8321",Right "arg\8323"),("t\8322",Right "arg\8327"),("res\8324",Right "arg\8327 -> res\8328")])

# TySolve.solve
## constraints
"t\8320" ~ "arg\8323 -> res\8324"
"t\8321" ~ "arg\8323"
"res\8324" ~ "arg\8327 -> res\8328"
"t\8322" ~ "arg\8327"
## typarams
mempty
## tyvars
[("t\8320",(1,TyVarFree NoLoc Lifted)),("t\8321",(2,TyVarFree NoLoc Lifted)),("t\8322",(3,TyVarFree NoLoc Lifted)),("arg\8323",(4,TyVarFree NoLoc Lifted)),("res\8324",(4,TyVarFree NoLoc Lifted)),("arg\8327",(4,TyVarFree NoLoc Lifted)),("res\8328",(4,TyVarFree NoLoc Lifted))]
## solution
([("arg\8323",Lifted),("arg\8327",Lifted),("res\8328",Lifted)],[("t\8320",Right "arg\8323 -> arg\8327 -> res\8328"),("t\8321",Right "arg\8323"),("t\8322",Right "arg\8327"),("res\8324",Right "arg\8327 -> res\8328")])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[("t\8320",(1,TyVarFree NoLoc Lifted)),("t\8321",(2,TyVarFree NoLoc Lifted))]
## solution
([("t\8320",Lifted),("t\8321",Lifted)],[])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[("a\8320",(1,TyVarFree NoLoc Lifted))]
## solution
([("a\8320",Lifted)],[])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[("a\8320",(1,TyVarFree NoLoc Lifted))]
## solution
([("a\8320",Lifted)],[])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[("t\8320",(1,TyVarFree NoLoc Lifted))]
## solution
([("t\8320",Lifted)],[])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[("t\8320",(1,TyVarFree NoLoc Lifted)),("t\8321",(2,TyVarFree NoLoc Lifted))]
## solution
([("t\8320",Lifted),("t\8321",Lifted)],[])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[("t\8320",(1,TyVarFree NoLoc Lifted)),("t\8321",(2,TyVarFree NoLoc Lifted)),("t\8322",(3,TyVarFree NoLoc Lifted))]
## solution
([("t\8320",Lifted),("t\8321",Lifted),("t\8322",Lifted)],[])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"t\8320" ~ "arg\8323 -> res\8324"
"t\8321" ~ "arg\8323"
"res\8324" ~ "arg\8327 -> res\8328"
"t\8322" ~ "arg\8327"
## typarams
mempty
## tyvars
[("t\8320",(1,TyVarFree NoLoc Lifted)),("t\8321",(2,TyVarFree NoLoc Lifted)),("t\8322",(3,TyVarFree NoLoc Lifted)),("arg\8323",(4,TyVarFree NoLoc Lifted)),("res\8324",(4,TyVarFree NoLoc Lifted)),("arg\8327",(4,TyVarFree NoLoc Lifted)),("res\8328",(4,TyVarFree NoLoc Lifted))]
## solution
([("arg\8323",Lifted),("arg\8327",Lifted),("res\8328",Lifted)],[("t\8320",Right "arg\8323 -> arg\8327 -> res\8328"),("t\8321",Right "arg\8323"),("t\8322",Right "arg\8327"),("res\8324",Right "arg\8327 -> res\8328")])

# TySolve.solve
## constraints
"t\8320" ~ "arg\8323 -> res\8324"
"t\8322" ~ "arg\8323"
"res\8324" ~ "arg\8327 -> res\8328"
"t\8321" ~ "arg\8327"
## typarams
mempty
## tyvars
[("t\8320",(1,TyVarFree NoLoc Lifted)),("t\8321",(2,TyVarFree NoLoc Lifted)),("t\8322",(3,TyVarFree NoLoc Lifted)),("arg\8323",(4,TyVarFree NoLoc Lifted)),("res\8324",(4,TyVarFree NoLoc Lifted)),("arg\8327",(4,TyVarFree NoLoc Lifted)),("res\8328",(4,TyVarFree NoLoc Lifted))]
## solution
([("arg\8323",Lifted),("arg\8327",Lifted),("res\8328",Lifted)],[("t\8320",Right "arg\8323 -> arg\8327 -> res\8328"),("t\8321",Right "arg\8327"),("t\8322",Right "arg\8323"),("res\8324",Right "arg\8327 -> res\8328")])

# TySolve.solve
## constraints
"i64" ~ "i64"
"t\8320" ~ "t\8322"
## typarams
mempty
## tyvars
[("t\8320",(1,TyVarFree NoLoc Lifted)),("t\8321",(2,TyVarFree NoLoc Unlifted)),("t\8322",(2,TyVarFree NoLoc Unlifted))]
## solution
([("t\8321",Unlifted),("t\8322",Unlifted)],[("t\8320",Right "t\8322")])

# TySolve.solve
## constraints
"t\8322" ~ "num\8321"
"index\8323" ~ "index_elem\8324"
"t\8320" ~ "[]index_elem\8324"
## typarams
mempty
## tyvars
[("t\8320",(1,TyVarFree NoLoc Lifted)),("num\8321",(2,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8322",(2,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64])),("index\8323",(2,TyVarFree NoLoc Unlifted)),("index_elem\8324",(2,TyVarFree NoLoc Unlifted))]
## solution
([("index_elem\8324",Unlifted)],[("t\8320",Right "[]index_elem\8324"),("num\8321",Left "[i8, i16, i32, i64]"),("t\8322",Left "[i8, i16, i32, i64]"),("index\8323",Right "index_elem\8324")])

# TySolve.solve
## constraints
"t\8320" ~ "vector []a\8324"
"t\8321" ~ "vector []a\8327"
"[]vector a\8324" ~ "[]a\8322"
"[]vector a\8327" ~ "[]b\8323"
## typarams
mempty
## tyvars
[("t\8320",(1,TyVarFree NoLoc Lifted)),("t\8321",(1,TyVarFree NoLoc Lifted)),("a\8322",(2,TyVarFree NoLoc Unlifted)),("b\8323",(2,TyVarFree NoLoc Unlifted)),("a\8324",(2,TyVarFree NoLoc Unlifted)),("a\8327",(2,TyVarFree NoLoc Unlifted))]
## solution
([("a\8324",Unlifted),("a\8327",Unlifted)],[("t\8320",Right "vector []a\8324"),("t\8321",Right "vector []a\8327"),("a\8322",Right "vector a\8324"),("b\8323",Right "vector a\8327")])

# TySolve.solve
## constraints
"t\8326" ~ "[]t\8326\8321\8323"
"t\8325" ~ "[]t\8325\8321\8324"
"t\8320" ~ "[]t\8320\8321\8325"
"t\8320" ~ "[](a\8321, b\8322)"
"(t\8325, t\8326)" ~ "([]a\8321, []b\8322)"
"t\8325" ~ "[]vector a\8327"
"t\8326" ~ "[]vector a\8321\8320"
## typarams
mempty
## tyvars
[("t\8320",(1,TyVarFree NoLoc Lifted)),("a\8321",(2,TyVarFree NoLoc Unlifted)),("b\8322",(2,TyVarFree NoLoc Unlifted)),("t\8325",(3,TyVarFree NoLoc Lifted)),("t\8326",(3,TyVarFree NoLoc Lifted)),("a\8327",(4,TyVarFree NoLoc Unlifted)),("a\8321\8320",(4,TyVarFree NoLoc Unlifted)),("t\8326\8321\8323",(3,TyVarFree NoLoc Lifted)),("t\8325\8321\8324",(3,TyVarFree NoLoc Lifted)),("t\8320\8321\8325",(1,TyVarFree NoLoc Lifted))]
## solution
([("a\8327",Unlifted),("a\8321\8320",Unlifted)],[("t\8320",Right "[](vector a\8327, vector a\8321\8320)"),("a\8321",Right "vector a\8327"),("b\8322",Right "vector a\8321\8320"),("t\8325",Right "[]vector a\8327"),("t\8326",Right "[]vector a\8321\8320"),("t\8326\8321\8323",Right "vector a\8321\8320"),("t\8325\8321\8324",Right "vector a\8327"),("t\8320\8321\8325",Right "(vector a\8327, vector a\8321\8320)")])

# TySolve.solve
## constraints
"t\8320" ~ "a\8323 -> b\8324"
"t\8321" ~ "vector a\8323"
"t\8320" ~ "a\8329 -> b\8321\8320"
"t\8322" ~ "vector a\8329"
## typarams
mempty
## tyvars
[("t\8320",(1,TyVarFree NoLoc Lifted)),("t\8321",(2,TyVarFree NoLoc Lifted)),("t\8322",(2,TyVarFree NoLoc Lifted)),("a\8323",(3,TyVarFree NoLoc Unlifted)),("b\8324",(3,TyVarFree NoLoc Unlifted)),("a\8329",(3,TyVarFree NoLoc Unlifted)),("b\8321\8320",(3,TyVarFree NoLoc Unlifted))]
## solution
([("a\8329",Unlifted),("b\8321\8320",Unlifted)],[("t\8320",Right "a\8323 -> b\8324"),("t\8321",Right "vector a\8323"),("t\8322",Right "vector a\8329"),("a\8323",Right "a\8329"),("b\8324",Right "b\8321\8320")])

# TySolve.solve
## constraints
"t\8320" ~ "a\8325 -> b\8326 -> c\8327"
"t\8321" ~ "vector a\8325"
"t\8323" ~ "vector b\8326"
"t\8320" ~ "a\8321\8324 -> b\8321\8325 -> c\8321\8326"
"t\8322" ~ "vector a\8321\8324"
"t\8324" ~ "vector b\8321\8325"
## typarams
mempty
## tyvars
[("t\8320",(1,TyVarFree NoLoc Lifted)),("t\8321",(2,TyVarFree NoLoc Lifted)),("t\8322",(2,TyVarFree NoLoc Lifted)),("t\8323",(3,TyVarFree NoLoc Lifted)),("t\8324",(3,TyVarFree NoLoc Lifted)),("a\8325",(4,TyVarFree NoLoc Unlifted)),("b\8326",(4,TyVarFree NoLoc Unlifted)),("c\8327",(4,TyVarFree NoLoc Unlifted)),("a\8321\8324",(4,TyVarFree NoLoc Unlifted)),("b\8321\8325",(4,TyVarFree NoLoc Unlifted)),("c\8321\8326",(4,TyVarFree NoLoc Unlifted))]
## solution
([("a\8321\8324",Unlifted),("b\8321\8325",Unlifted),("c\8321\8326",Unlifted)],[("t\8320",Right "a\8325 -> b\8326 -> c\8327"),("t\8321",Right "vector a\8325"),("t\8322",Right "vector a\8321\8324"),("t\8323",Right "vector b\8326"),("t\8324",Right "vector b\8321\8325"),("a\8325",Right "a\8321\8324"),("b\8326",Right "b\8321\8325"),("c\8327",Right "c\8321\8326")])

# TySolve.solve
## constraints
"t\8320" ~ "a\8324 -> a\8324 -> a\8324"
"t\8321" ~ "a\8324"
"t\8322" ~ "vector a\8324"
"t\8320" ~ "a\8321\8321 -> a\8321\8321 -> a\8321\8321"
"t\8321" ~ "a\8321\8321"
"t\8323" ~ "vector a\8321\8321"
"t\8320" ~ "arg\8321\8328 -> res\8321\8329"
"a\8324" ~ "arg\8321\8328"
"res\8321\8329" ~ "arg\8322\8322 -> res\8322\8323"
"a\8321\8321" ~ "arg\8322\8322"
## typarams
mempty
## tyvars
[("t\8320",(1,TyVarFree NoLoc Lifted)),("t\8321",(2,TyVarFree NoLoc Lifted)),("t\8322",(3,TyVarFree NoLoc Lifted)),("t\8323",(3,TyVarFree NoLoc Lifted)),("a\8324",(4,TyVarFree NoLoc Unlifted)),("a\8321\8321",(4,TyVarFree NoLoc Unlifted)),("arg\8321\8328",(4,TyVarFree NoLoc Lifted)),("res\8321\8329",(4,TyVarFree NoLoc Lifted)),("arg\8322\8322",(4,TyVarFree NoLoc Lifted)),("res\8322\8323",(4,TyVarFree NoLoc Lifted))]
## solution
([("res\8322\8323",Unlifted)],[("t\8320",Right "a\8324 -> a\8324 -> a\8324"),("t\8321",Right "res\8322\8323"),("t\8322",Right "vector a\8324"),("t\8323",Right "vector a\8321\8321"),("a\8324",Right "res\8322\8323"),("a\8321\8321",Right "res\8322\8323"),("arg\8321\8328",Right "res\8322\8323"),("res\8321\8329",Right "a\8324 -> a\8324"),("arg\8322\8322",Right "res\8322\8323")])

# TySolve.solve
## constraints
"t\8320" ~ "vector a\8324"
"t\8322" ~ "vector b\8325"
"t\8321" ~ "vector a\8321\8320"
"t\8323" ~ "vector b\8321\8321"
## typarams
mempty
## tyvars
[("t\8320",(1,TyVarFree NoLoc Lifted)),("t\8321",(1,TyVarFree NoLoc Lifted)),("t\8322",(2,TyVarFree NoLoc Lifted)),("t\8323",(2,TyVarFree NoLoc Lifted)),("a\8324",(3,TyVarFree NoLoc Unlifted)),("b\8325",(3,TyVarFree NoLoc Unlifted)),("a\8321\8320",(3,TyVarFree NoLoc Unlifted)),("b\8321\8321",(3,TyVarFree NoLoc Unlifted))]
## solution
([("a\8324",Unlifted),("b\8325",Unlifted),("a\8321\8320",Unlifted),("b\8321\8321",Unlifted)],[("t\8320",Right "vector a\8324"),("t\8321",Right "vector a\8321\8320"),("t\8322",Right "vector b\8325"),("t\8323",Right "vector b\8321\8321")])

# TySolve.solve
## constraints
"t\8323" ~ "t\8322"
"i64" ~ "t\8322"
"t\8323 -> t\8322" ~ "a\8320 -> b\8321"
"vector i64" ~ "vector a\8320"
## typarams
mempty
## tyvars
[("a\8320",(1,TyVarFree NoLoc Unlifted)),("b\8321",(1,TyVarFree NoLoc Unlifted)),("t\8322",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8323",(1,TyVarFree NoLoc Lifted))]
## solution
([],[("a\8320",Right "i64"),("b\8321",Right "i64"),("t\8322",Right "i64"),("t\8323",Right "i64")])

# TySolve.solve
## constraints
"t\8320" ~ "a\8321"
"t\8320" ~ "a\8324"
## typarams
mempty
## tyvars
[("t\8320",(1,TyVarFree NoLoc Lifted)),("a\8321",(2,TyVarFree NoLoc Unlifted)),("a\8324",(2,TyVarFree NoLoc Unlifted))]
## solution
([("a\8324",Unlifted)],[("t\8320",Right "a\8324"),("a\8321",Right "a\8324")])

# TySolve.solve
## constraints
"t\8320" ~ "t\8323"
"i64" ~ "t\8323"
"t\8320" ~ "i64"
"t\8321" ~ "vector a\8328"
"t\8320" ~ "t\8321\8324"
"i64" ~ "t\8321\8324"
"t\8321\8324" ~ "i64"
"t\8322" ~ "vector a\8321\8323"
"bool" ~ "bool"
"a\8328" ~ "if_t\8322\8323"
"a\8321\8323" ~ "if_t\8322\8323"
## typarams
mempty
## tyvars
[("t\8320",(1,TyVarFree NoLoc Lifted)),("t\8321",(2,TyVarFree NoLoc Lifted)),("t\8322",(2,TyVarFree NoLoc Lifted)),("t\8323",(3,TyVarPrim NoLoc [Bool,Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("a\8328",(3,TyVarFree NoLoc Unlifted)),("a\8321\8323",(3,TyVarFree NoLoc Unlifted)),("t\8321\8324",(3,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("if_t\8322\8323",(3,TyVarFree NoLoc SizeLifted))]
## solution
([("if_t\8322\8323",Unlifted)],[("t\8320",Right "i64"),("t\8321",Right "vector a\8328"),("t\8322",Right "vector a\8321\8323"),("t\8323",Right "i64"),("a\8328",Right "if_t\8322\8323"),("a\8321\8323",Right "if_t\8322\8323"),("t\8321\8324",Right "i64")])

# TySolve.solve
## constraints
"t\8320" ~ "t\8324"
"i64" ~ "t\8324"
"t\8320" ~ "i64"
"t\8321" ~ "a\8329"
"t\8322" ~ "vector a\8329"
"t\8320" ~ "t\8321\8327"
"i64" ~ "t\8321\8327"
"t\8321\8327" ~ "i64"
"t\8321" ~ "a\8321\8326"
"t\8323" ~ "vector a\8321\8326"
"bool" ~ "bool"
"(vector a\8329, t\8323)" ~ "if_t\8322\8328"
"(t\8322, vector a\8321\8326)" ~ "if_t\8322\8328"
## typarams
mempty
## tyvars
[("t\8320",(1,TyVarFree NoLoc Lifted)),("t\8321",(2,TyVarFree NoLoc Lifted)),("t\8322",(3,TyVarFree NoLoc Lifted)),("t\8323",(3,TyVarFree NoLoc Lifted)),("t\8324",(4,TyVarPrim NoLoc [Bool,Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("a\8329",(4,TyVarFree NoLoc Unlifted)),("a\8321\8326",(4,TyVarFree NoLoc Unlifted)),("t\8321\8327",(4,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("if_t\8322\8328",(4,TyVarFree NoLoc SizeLifted))]
## solution
([("a\8321\8326",Unlifted)],[("t\8320",Right "i64"),("t\8321",Right "a\8321\8326"),("t\8322",Right "vector a\8329"),("t\8323",Right "vector a\8321\8326"),("t\8324",Right "i64"),("a\8329",Right "a\8321\8326"),("t\8321\8327",Right "i64"),("if_t\8322\8328",Right "(vector a\8329, vector a\8321\8326)")])

# TySolve.solve
## constraints
"i64" ~ "t\8320"
"i64" ~ "t\8320"
## typarams
mempty
## tyvars
[("t\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("t\8320",Right "i64")])

# TySolve.solve
## constraints
"t\8320" ~ "b\8327 -> a\8326 -> b\8327"
"t\8321" ~ "b\8327"
"t\8322" ~ "vector a\8326"
"t\8320" ~ "b\8325 -> a\8324 -> b\8325"
"b\8327" ~ "b\8325"
"t\8323" ~ "vector a\8324"
## typarams
mempty
## tyvars
[("t\8320",(1,TyVarFree NoLoc Lifted)),("t\8321",(2,TyVarFree NoLoc Lifted)),("t\8322",(3,TyVarFree NoLoc Lifted)),("t\8323",(3,TyVarFree NoLoc Lifted)),("a\8324",(4,TyVarFree NoLoc Unlifted)),("b\8325",(4,TyVarFree NoLoc Unlifted)),("a\8326",(4,TyVarFree NoLoc Unlifted)),("b\8327",(4,TyVarFree NoLoc Unlifted))]
## solution
([("a\8324",Unlifted),("b\8325",Unlifted)],[("t\8320",Right "b\8327 -> a\8326 -> b\8327"),("t\8321",Right "b\8325"),("t\8322",Right "vector a\8326"),("t\8323",Right "vector a\8324"),("a\8326",Right "a\8324"),("b\8327",Right "b\8325")])

# TySolve.solve
## constraints
"t\8320" ~ "a\8326 -> b\8327 -> b\8327"
"t\8321" ~ "b\8327"
"t\8323" ~ "vector a\8326"
"t\8320" ~ "a\8324 -> b\8325 -> b\8325"
"b\8327" ~ "b\8325"
"t\8322" ~ "vector a\8324"
## typarams
mempty
## tyvars
[("t\8320",(1,TyVarFree NoLoc Lifted)),("t\8321",(2,TyVarFree NoLoc Lifted)),("t\8322",(3,TyVarFree NoLoc Lifted)),("t\8323",(3,TyVarFree NoLoc Lifted)),("a\8324",(4,TyVarFree NoLoc Unlifted)),("b\8325",(4,TyVarFree NoLoc Unlifted)),("a\8326",(4,TyVarFree NoLoc Unlifted)),("b\8327",(4,TyVarFree NoLoc Unlifted))]
## solution
([("a\8324",Unlifted),("b\8325",Unlifted)],[("t\8320",Right "a\8326 -> b\8327 -> b\8327"),("t\8321",Right "b\8325"),("t\8322",Right "vector a\8324"),("t\8323",Right "vector a\8326"),("a\8326",Right "a\8324"),("b\8327",Right "b\8325")])

# TySolve.solve
## constraints
"t\8320" ~ "vector a\8323"
"t\8321" ~ "vector a\8326"
"[]a\8323" ~ "[]t\8322"
"[]a\8326" ~ "[]t\8322"
"[]t\8322" ~ "[]t"
## typarams
["(\"t\",(0,Unlifted,NoLoc))"]
## tyvars
[("t\8320",(1,TyVarFree NoLoc Lifted)),("t\8321",(1,TyVarFree NoLoc Lifted)),("t\8322",(2,TyVarFree NoLoc Unlifted)),("a\8323",(2,TyVarFree NoLoc Unlifted)),("a\8326",(2,TyVarFree NoLoc Unlifted))]
## solution
([],[("t\8320",Right "vector t"),("t\8321",Right "vector t"),("t\8322",Right "t"),("a\8323",Right "t"),("a\8326",Right "t")])

# TySolve.solve
## constraints
"t\8320" ~ "[]t\8320\8322\8324"
"i64" ~ "i64"
"t\8320" ~ "[]t\8322"
"[]t\8322" ~ "[]a\8321"
"t\8329" ~ "vector a\8321"
"i64" ~ "i64"
"t\8320" ~ "[]t\8321\8322"
"i64" ~ "i64"
"[]t\8321\8322" ~ "[]t\8321\8321"
"[]t\8321\8321" ~ "[]a\8321\8320"
"t\8322\8323" ~ "vector a\8321\8320"
## typarams
["(\"t\",(0,Unlifted,NoLoc))"]
## tyvars
[("t\8320",(1,TyVarFree NoLoc Lifted)),("a\8321",(2,TyVarFree NoLoc Unlifted)),("t\8322",(2,TyVarFree NoLoc Unlifted)),("t\8329",(3,TyVarFree NoLoc Lifted)),("a\8321\8320",(4,TyVarFree NoLoc Unlifted)),("t\8321\8321",(4,TyVarFree NoLoc Unlifted)),("t\8321\8322",(4,TyVarFree NoLoc Unlifted)),("t\8322\8323",(5,TyVarFree NoLoc Lifted)),("t\8320\8322\8324",(1,TyVarFree NoLoc Lifted))]
## solution
([("a\8321\8320",Unlifted)],[("t\8320",Right "[]t\8320\8322\8324"),("a\8321",Right "a\8321\8320"),("t\8322",Right "a\8321\8320"),("t\8329",Right "vector a\8321"),("t\8321\8321",Right "a\8321\8320"),("t\8321\8322",Right "a\8321\8320"),("t\8322\8323",Right "vector a\8321\8320"),("t\8320\8322\8324",Right "a\8321\8320")])

# TySolve.solve
## constraints
"num\8320" ~ "i32"
"num\8323" ~ "i32"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("num\8323",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32"),("num\8323",Right "i32")])

# TySolve.solve
## constraints
"num\8320" ~ "i32"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"{x: real.t, y: real.t}" ~ "t\8322"
"t\8320" ~ "arg\8323 -> res\8324"
"kt\8321" ~ "arg\8323"
"{x: real.t, y: real.t}" ~ "t\8328"
"t\8320" ~ "arg\8329 -> res\8321\8320"
"kt\8327" ~ "arg\8329"
## typarams
mempty
## tyvars
[("t\8320",(1,TyVarFree NoLoc Lifted)),("kt\8321",(3,TyVarFree NoLoc Lifted)),("t\8322",(3,TyVarRecord NoLoc (fromList [(Name "x",Scalar (TypeVar NoUniqueness (QualName {qualQuals = [], qualLeaf = VName (Name "kt\8321") 12520}) []))]))),("arg\8323",(3,TyVarFree NoLoc Lifted)),("res\8324",(3,TyVarFree NoLoc Lifted)),("kt\8327",(3,TyVarFree NoLoc Lifted)),("t\8328",(3,TyVarRecord NoLoc (fromList [(Name "y",Scalar (TypeVar NoUniqueness (QualName {qualQuals = [], qualLeaf = VName (Name "kt\8327") 12527}) []))]))),("arg\8329",(3,TyVarFree NoLoc Lifted)),("res\8321\8320",(3,TyVarFree NoLoc Lifted))]
## solution
([("res\8321\8320",Lifted)],[("t\8320",Right "real.t -> res\8324"),("kt\8321",Right "real.t"),("t\8322",Right "{x: real.t, y: real.t}"),("arg\8323",Right "real.t"),("res\8324",Right "res\8321\8320"),("kt\8327",Right "real.t"),("t\8328",Right "{x: real.t, y: real.t}"),("arg\8329",Right "real.t")])

# TySolve.solve
## constraints
"{x: real.t, y: real.t}" ~ "t\8322"
"{x: real.t, y: real.t}" ~ "t\8324"
"t\8320" ~ "arg\8325 -> res\8326"
"kt\8321" ~ "arg\8325"
"res\8326" ~ "arg\8329 -> res\8321\8320"
"kt\8323" ~ "arg\8329"
"{x: real.t, y: real.t}" ~ "t\8321\8324"
"{x: real.t, y: real.t}" ~ "t\8321\8326"
"t\8320" ~ "arg\8321\8327 -> res\8321\8328"
"kt\8321\8323" ~ "arg\8321\8327"
"res\8321\8328" ~ "arg\8322\8321 -> res\8322\8322"
"kt\8321\8325" ~ "arg\8322\8321"
## typarams
mempty
## tyvars
[("t\8320",(1,TyVarFree NoLoc Lifted)),("kt\8321",(4,TyVarFree NoLoc Lifted)),("t\8322",(4,TyVarRecord NoLoc (fromList [(Name "x",Scalar (TypeVar NoUniqueness (QualName {qualQuals = [], qualLeaf = VName (Name "kt\8321") 12539}) []))]))),("kt\8323",(4,TyVarFree NoLoc Lifted)),("t\8324",(4,TyVarRecord NoLoc (fromList [(Name "x",Scalar (TypeVar NoUniqueness (QualName {qualQuals = [], qualLeaf = VName (Name "kt\8323") 12541}) []))]))),("arg\8325",(4,TyVarFree NoLoc Lifted)),("res\8326",(4,TyVarFree NoLoc Lifted)),("arg\8329",(4,TyVarFree NoLoc Lifted)),("res\8321\8320",(4,TyVarFree NoLoc Lifted)),("kt\8321\8323",(4,TyVarFree NoLoc Lifted)),("t\8321\8324",(4,TyVarRecord NoLoc (fromList [(Name "y",Scalar (TypeVar NoUniqueness (QualName {qualQuals = [], qualLeaf = VName (Name "kt\8321\8323") 12552}) []))]))),("kt\8321\8325",(4,TyVarFree NoLoc Lifted)),("t\8321\8326",(4,TyVarRecord NoLoc (fromList [(Name "y",Scalar (TypeVar NoUniqueness (QualName {qualQuals = [], qualLeaf = VName (Name "kt\8321\8325") 12554}) []))]))),("arg\8321\8327",(4,TyVarFree NoLoc Lifted)),("res\8321\8328",(4,TyVarFree NoLoc Lifted)),("arg\8322\8321",(4,TyVarFree NoLoc Lifted)),("res\8322\8322",(4,TyVarFree NoLoc Lifted))]
## solution
([("res\8322\8322",Lifted)],[("t\8320",Right "real.t -> real.t -> res\8321\8320"),("kt\8321",Right "real.t"),("t\8322",Right "{x: real.t, y: real.t}"),("kt\8323",Right "real.t"),("t\8324",Right "{x: real.t, y: real.t}"),("arg\8325",Right "real.t"),("res\8326",Right "real.t -> res\8321\8320"),("arg\8329",Right "real.t"),("res\8321\8320",Right "res\8322\8322"),("kt\8321\8323",Right "real.t"),("t\8321\8324",Right "{x: real.t, y: real.t}"),("kt\8321\8325",Right "real.t"),("t\8321\8326",Right "{x: real.t, y: real.t}"),("arg\8321\8327",Right "real.t"),("res\8321\8328",Right "real.t -> res\8321\8320"),("arg\8322\8321",Right "real.t")])

# TySolve.solve
## constraints
"t -> t -> t" ~ "real.t -> real.t -> res\8320"
## typarams
mempty
## tyvars
[("res\8320",(1,TyVarFree NoLoc Lifted))]
## solution
([],[("res\8320",Right "t")])

# TySolve.solve
## constraints
"t -> t -> t" ~ "real.t -> real.t -> res\8320"
## typarams
mempty
## tyvars
[("res\8320",(1,TyVarFree NoLoc Lifted))]
## solution
([],[("res\8320",Right "t")])

# TySolve.solve
## constraints
"t -> t -> t" ~ "real.t -> real.t -> res\8320"
## typarams
mempty
## tyvars
[("res\8320",(1,TyVarFree NoLoc Lifted))]
## solution
([],[("res\8320",Right "t")])

# TySolve.solve
## constraints
"t -> t -> t" ~ "real.t -> real.t -> res\8320"
## typarams
mempty
## tyvars
[("res\8320",(1,TyVarFree NoLoc Lifted))]
## solution
([],[("res\8320",Right "t")])

# TySolve.solve
## constraints
"{x: real.t, y: real.t}" ~ "t\8321"
"{x: real.t, y: real.t}" ~ "t\8323"
"kt\8320" ~ "t"
"kt\8322" ~ "t"
"{x: real.t, y: real.t}" ~ "t\8329"
"{x: real.t, y: real.t}" ~ "t\8321\8321"
"kt\8328" ~ "t"
"kt\8321\8320" ~ "t"
"t" ~ "t"
"t" ~ "t"
## typarams
mempty
## tyvars
[("kt\8320",(3,TyVarFree NoLoc Lifted)),("t\8321",(3,TyVarRecord NoLoc (fromList [(Name "x",Scalar (TypeVar NoUniqueness (QualName {qualQuals = [], qualLeaf = VName (Name "kt\8320") 12592}) []))]))),("kt\8322",(3,TyVarFree NoLoc Lifted)),("t\8323",(3,TyVarRecord NoLoc (fromList [(Name "x",Scalar (TypeVar NoUniqueness (QualName {qualQuals = [], qualLeaf = VName (Name "kt\8322") 12594}) []))]))),("kt\8328",(3,TyVarFree NoLoc Lifted)),("t\8329",(3,TyVarRecord NoLoc (fromList [(Name "y",Scalar (TypeVar NoUniqueness (QualName {qualQuals = [], qualLeaf = VName (Name "kt\8328") 12601}) []))]))),("kt\8321\8320",(3,TyVarFree NoLoc Lifted)),("t\8321\8321",(3,TyVarRecord NoLoc (fromList [(Name "y",Scalar (TypeVar NoUniqueness (QualName {qualQuals = [], qualLeaf = VName (Name "kt\8321\8320") 12603}) []))])))]
## solution
([],[("kt\8320",Right "real.t"),("t\8321",Right "{x: real.t, y: real.t}"),("kt\8322",Right "real.t"),("t\8323",Right "{x: real.t, y: real.t}"),("kt\8328",Right "real.t"),("t\8329",Right "{x: real.t, y: real.t}"),("kt\8321\8320",Right "real.t"),("t\8321\8321",Right "{x: real.t, y: real.t}")])

# TySolve.solve
## constraints
"t\8320" ~ "{x: real.t, y: real.t}"
"t\8320" ~ "{x: real.t, y: real.t}"
## typarams
mempty
## tyvars
[("t\8320",(1,TyVarFree NoLoc Lifted))]
## solution
([],[("t\8320",Right "{x: real.t, y: real.t}")])

# TySolve.solve
## constraints
"real.t" ~ "t"
"t\8321" ~ "t"
"t\8321 -> t" ~ "real.t -> res\8320"
## typarams
mempty
## tyvars
[("res\8320",(2,TyVarFree NoLoc Lifted)),("t\8321",(2,TyVarFree NoLoc Lifted))]
## solution
([],[("res\8320",Right "t"),("t\8321",Right "t")])

# TySolve.solve
## constraints
"(v: {x: real.t, y: real.t}) -> real.t" ~ "a\8320 -> b\8321"
"t -> t" ~ "b\8321 -> c\8322"
## typarams
mempty
## tyvars
[("a\8320",(1,TyVarFree NoLoc Lifted)),("b\8321",(1,TyVarFree NoLoc Lifted)),("c\8322",(1,TyVarFree NoLoc Lifted))]
## solution
([],[("a\8320",Right "{x: real.t, y: real.t}"),("b\8321",Right "real.t"),("c\8322",Right "t")])

# TySolve.solve
## constraints
"{x: real.t, y: real.t}" ~ "{x: real.t, y: real.t}"
"t\8322" ~ "real.t"
"real.t" ~ "t"
"t\8322" ~ "t"
"t" ~ "real.t"
"{x: real.t, y: real.t}" ~ "{x: real.t, y: real.t}"
"{x: real.t, y: real.t}" ~ "{x: real.t, y: real.t}"
## typarams
mempty
## tyvars
[("t\8322",(3,TyVarFree NoLoc Lifted))]
## solution
([],[("t\8322",Right "real.t")])

# TySolve.solve
## constraints
"num\8320" ~ "i32"
"num\8323" ~ "i32"
"num\8326" ~ "i32"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("num\8323",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("num\8326",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32"),("num\8323",Right "i32"),("num\8326",Right "i32")])

# TySolve.solve
## constraints
"num\8320" ~ "i32"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
"{x: real.t, y: real.t, z: real.t}" ~ "t\8322"
"t\8320" ~ "arg\8323 -> res\8324"
"kt\8321" ~ "arg\8323"
"{x: real.t, y: real.t, z: real.t}" ~ "t\8328"
"t\8320" ~ "arg\8329 -> res\8321\8320"
"kt\8327" ~ "arg\8329"
"{x: real.t, y: real.t, z: real.t}" ~ "t\8321\8324"
"t\8320" ~ "arg\8321\8325 -> res\8321\8326"
"kt\8321\8323" ~ "arg\8321\8325"
## typarams
mempty
## tyvars
[("t\8320",(1,TyVarFree NoLoc Lifted)),("kt\8321",(3,TyVarFree NoLoc Lifted)),("t\8322",(3,TyVarRecord NoLoc (fromList [(Name "x",Scalar (TypeVar NoUniqueness (QualName {qualQuals = [], qualLeaf = VName (Name "kt\8321") 12819}) []))]))),("arg\8323",(3,TyVarFree NoLoc Lifted)),("res\8324",(3,TyVarFree NoLoc Lifted)),("kt\8327",(3,TyVarFree NoLoc Lifted)),("t\8328",(3,TyVarRecord NoLoc (fromList [(Name "y",Scalar (TypeVar NoUniqueness (QualName {qualQuals = [], qualLeaf = VName (Name "kt\8327") 12826}) []))]))),("arg\8329",(3,TyVarFree NoLoc Lifted)),("res\8321\8320",(3,TyVarFree NoLoc Lifted)),("kt\8321\8323",(3,TyVarFree NoLoc Lifted)),("t\8321\8324",(3,TyVarRecord NoLoc (fromList [(Name "z",Scalar (TypeVar NoUniqueness (QualName {qualQuals = [], qualLeaf = VName (Name "kt\8321\8323") 12833}) []))]))),("arg\8321\8325",(3,TyVarFree NoLoc Lifted)),("res\8321\8326",(3,TyVarFree NoLoc Lifted))]
## solution
([("res\8321\8326",Lifted)],[("t\8320",Right "real.t -> res\8324"),("kt\8321",Right "real.t"),("t\8322",Right "{x: real.t, y: real.t, z: real.t}"),("arg\8323",Right "real.t"),("res\8324",Right "res\8321\8326"),("kt\8327",Right "real.t"),("t\8328",Right "{x: real.t, y: real.t, z: real.t}"),("arg\8329",Right "real.t"),("res\8321\8320",Right "res\8321\8326"),("kt\8321\8323",Right "real.t"),("t\8321\8324",Right "{x: real.t, y: real.t, z: real.t}"),("arg\8321\8325",Right "real.t")])

# TySolve.solve
## constraints
"{x: real.t, y: real.t, z: real.t}" ~ "t\8322"
"{x: real.t, y: real.t, z: real.t}" ~ "t\8324"
"t\8320" ~ "arg\8325 -> res\8326"
"kt\8321" ~ "arg\8325"
"res\8326" ~ "arg\8329 -> res\8321\8320"
"kt\8323" ~ "arg\8329"
"{x: real.t, y: real.t, z: real.t}" ~ "t\8321\8324"
"{x: real.t, y: real.t, z: real.t}" ~ "t\8321\8326"
"t\8320" ~ "arg\8321\8327 -> res\8321\8328"
"kt\8321\8323" ~ "arg\8321\8327"
"res\8321\8328" ~ "arg\8322\8321 -> res\8322\8322"
"kt\8321\8325" ~ "arg\8322\8321"
"{x: real.t, y: real.t, z: real.t}" ~ "t\8322\8326"
"{x: real.t, y: real.t, z: real.t}" ~ "t\8322\8328"
"t\8320" ~ "arg\8322\8329 -> res\8323\8320"
"kt\8322\8325" ~ "arg\8322\8329"
"res\8323\8320" ~ "arg\8323\8323 -> res\8323\8324"
"kt\8322\8327" ~ "arg\8323\8323"
## typarams
mempty
## tyvars
[("t\8320",(1,TyVarFree NoLoc Lifted)),("kt\8321",(4,TyVarFree NoLoc Lifted)),("t\8322",(4,TyVarRecord NoLoc (fromList [(Name "x",Scalar (TypeVar NoUniqueness (QualName {qualQuals = [], qualLeaf = VName (Name "kt\8321") 12845}) []))]))),("kt\8323",(4,TyVarFree NoLoc Lifted)),("t\8324",(4,TyVarRecord NoLoc (fromList [(Name "x",Scalar (TypeVar NoUniqueness (QualName {qualQuals = [], qualLeaf = VName (Name "kt\8323") 12847}) []))]))),("arg\8325",(4,TyVarFree NoLoc Lifted)),("res\8326",(4,TyVarFree NoLoc Lifted)),("arg\8329",(4,TyVarFree NoLoc Lifted)),("res\8321\8320",(4,TyVarFree NoLoc Lifted)),("kt\8321\8323",(4,TyVarFree NoLoc Lifted)),("t\8321\8324",(4,TyVarRecord NoLoc (fromList [(Name "y",Scalar (TypeVar NoUniqueness (QualName {qualQuals = [], qualLeaf = VName (Name "kt\8321\8323") 12858}) []))]))),("kt\8321\8325",(4,TyVarFree NoLoc Lifted)),("t\8321\8326",(4,TyVarRecord NoLoc (fromList [(Name "y",Scalar (TypeVar NoUniqueness (QualName {qualQuals = [], qualLeaf = VName (Name "kt\8321\8325") 12860}) []))]))),("arg\8321\8327",(4,TyVarFree NoLoc Lifted)),("res\8321\8328",(4,TyVarFree NoLoc Lifted)),("arg\8322\8321",(4,TyVarFree NoLoc Lifted)),("res\8322\8322",(4,TyVarFree NoLoc Lifted)),("kt\8322\8325",(4,TyVarFree NoLoc Lifted)),("t\8322\8326",(4,TyVarRecord NoLoc (fromList [(Name "z",Scalar (TypeVar NoUniqueness (QualName {qualQuals = [], qualLeaf = VName (Name "kt\8322\8325") 12871}) []))]))),("kt\8322\8327",(4,TyVarFree NoLoc Lifted)),("t\8322\8328",(4,TyVarRecord NoLoc (fromList [(Name "z",Scalar (TypeVar NoUniqueness (QualName {qualQuals = [], qualLeaf = VName (Name "kt\8322\8327") 12873}) []))]))),("arg\8322\8329",(4,TyVarFree NoLoc Lifted)),("res\8323\8320",(4,TyVarFree NoLoc Lifted)),("arg\8323\8323",(4,TyVarFree NoLoc Lifted)),("res\8323\8324",(4,TyVarFree NoLoc Lifted))]
## solution
([("res\8323\8324",Lifted)],[("t\8320",Right "real.t -> real.t -> res\8321\8320"),("kt\8321",Right "real.t"),("t\8322",Right "{x: real.t, y: real.t, z: real.t}"),("kt\8323",Right "real.t"),("t\8324",Right "{x: real.t, y: real.t, z: real.t}"),("arg\8325",Right "real.t"),("res\8326",Right "real.t -> res\8321\8320"),("arg\8329",Right "real.t"),("res\8321\8320",Right "res\8323\8324"),("kt\8321\8323",Right "real.t"),("t\8321\8324",Right "{x: real.t, y: real.t, z: real.t}"),("kt\8321\8325",Right "real.t"),("t\8321\8326",Right "{x: real.t, y: real.t, z: real.t}"),("arg\8321\8327",Right "real.t"),("res\8321\8328",Right "real.t -> res\8321\8320"),("arg\8322\8321",Right "real.t"),("res\8322\8322",Right "res\8323\8324"),("kt\8322\8325",Right "real.t"),("t\8322\8326",Right "{x: real.t, y: real.t, z: real.t}"),("kt\8322\8327",Right "real.t"),("t\8322\8328",Right "{x: real.t, y: real.t, z: real.t}"),("arg\8322\8329",Right "real.t"),("res\8323\8320",Right "real.t -> res\8321\8320"),("arg\8323\8323",Right "real.t")])

# TySolve.solve
## constraints
"t -> t -> t" ~ "real.t -> real.t -> res\8320"
## typarams
mempty
## tyvars
[("res\8320",(1,TyVarFree NoLoc Lifted))]
## solution
([],[("res\8320",Right "t")])

# TySolve.solve
## constraints
"t -> t -> t" ~ "real.t -> real.t -> res\8320"
## typarams
mempty
## tyvars
[("res\8320",(1,TyVarFree NoLoc Lifted))]
## solution
([],[("res\8320",Right "t")])

# TySolve.solve
## constraints
"t -> t -> t" ~ "real.t -> real.t -> res\8320"
## typarams
mempty
## tyvars
[("res\8320",(1,TyVarFree NoLoc Lifted))]
## solution
([],[("res\8320",Right "t")])

# TySolve.solve
## constraints
"t -> t -> t" ~ "real.t -> real.t -> res\8320"
## typarams
mempty
## tyvars
[("res\8320",(1,TyVarFree NoLoc Lifted))]
## solution
([],[("res\8320",Right "t")])

# TySolve.solve
## constraints
"{x: real.t, y: real.t, z: real.t}" ~ "t\8321"
"{x: real.t, y: real.t, z: real.t}" ~ "t\8323"
"kt\8320" ~ "t"
"kt\8322" ~ "t"
"{x: real.t, y: real.t, z: real.t}" ~ "t\8329"
"{x: real.t, y: real.t, z: real.t}" ~ "t\8321\8321"
"kt\8328" ~ "t"
"kt\8321\8320" ~ "t"
"t" ~ "t"
"t" ~ "t"
"{x: real.t, y: real.t, z: real.t}" ~ "t\8322\8321"
"{x: real.t, y: real.t, z: real.t}" ~ "t\8322\8323"
"kt\8322\8320" ~ "t"
"kt\8322\8322" ~ "t"
"t" ~ "t"
"t" ~ "t"
## typarams
mempty
## tyvars
[("kt\8320",(3,TyVarFree NoLoc Lifted)),("t\8321",(3,TyVarRecord NoLoc (fromList [(Name "x",Scalar (TypeVar NoUniqueness (QualName {qualQuals = [], qualLeaf = VName (Name "kt\8320") 12911}) []))]))),("kt\8322",(3,TyVarFree NoLoc Lifted)),("t\8323",(3,TyVarRecord NoLoc (fromList [(Name "x",Scalar (TypeVar NoUniqueness (QualName {qualQuals = [], qualLeaf = VName (Name "kt\8322") 12913}) []))]))),("kt\8328",(3,TyVarFree NoLoc Lifted)),("t\8329",(3,TyVarRecord NoLoc (fromList [(Name "y",Scalar (TypeVar NoUniqueness (QualName {qualQuals = [], qualLeaf = VName (Name "kt\8328") 12920}) []))]))),("kt\8321\8320",(3,TyVarFree NoLoc Lifted)),("t\8321\8321",(3,TyVarRecord NoLoc (fromList [(Name "y",Scalar (TypeVar NoUniqueness (QualName {qualQuals = [], qualLeaf = VName (Name "kt\8321\8320") 12922}) []))]))),("kt\8322\8320",(3,TyVarFree NoLoc Lifted)),("t\8322\8321",(3,TyVarRecord NoLoc (fromList [(Name "z",Scalar (TypeVar NoUniqueness (QualName {qualQuals = [], qualLeaf = VName (Name "kt\8322\8320") 12934}) []))]))),("kt\8322\8322",(3,TyVarFree NoLoc Lifted)),("t\8322\8323",(3,TyVarRecord NoLoc (fromList [(Name "z",Scalar (TypeVar NoUniqueness (QualName {qualQuals = [], qualLeaf = VName (Name "kt\8322\8322") 12936}) []))])))]
## solution
([],[("kt\8320",Right "real.t"),("t\8321",Right "{x: real.t, y: real.t, z: real.t}"),("kt\8322",Right "real.t"),("t\8323",Right "{x: real.t, y: real.t, z: real.t}"),("kt\8328",Right "real.t"),("t\8329",Right "{x: real.t, y: real.t, z: real.t}"),("kt\8321\8320",Right "real.t"),("t\8321\8321",Right "{x: real.t, y: real.t, z: real.t}"),("kt\8322\8320",Right "real.t"),("t\8322\8321",Right "{x: real.t, y: real.t, z: real.t}"),("kt\8322\8322",Right "real.t"),("t\8322\8323",Right "{x: real.t, y: real.t, z: real.t}")])

# TySolve.solve
## constraints
"real.t" ~ "t"
"real.t" ~ "t"
"real.t" ~ "t"
"real.t" ~ "t"
"t" ~ "t"
"t" ~ "t"
"real.t" ~ "t"
"real.t" ~ "t"
"real.t" ~ "t"
"real.t" ~ "t"
"t" ~ "t"
"t" ~ "t"
"real.t" ~ "t"
"real.t" ~ "t"
"real.t" ~ "t"
"real.t" ~ "t"
"t" ~ "t"
"t" ~ "t"
"{x: real.t, y: real.t, z: real.t}" ~ "{x: t, y: t, z: t}"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"t\8320" ~ "{x: real.t, y: real.t, z: real.t}"
"t\8320" ~ "{x: real.t, y: real.t, z: real.t}"
## typarams
mempty
## tyvars
[("t\8320",(1,TyVarFree NoLoc Lifted))]
## solution
([],[("t\8320",Right "{x: real.t, y: real.t, z: real.t}")])

# TySolve.solve
## constraints
"real.t" ~ "t"
"t\8321" ~ "t"
"t\8321 -> t" ~ "real.t -> res\8320"
## typarams
mempty
## tyvars
[("res\8320",(2,TyVarFree NoLoc Lifted)),("t\8321",(2,TyVarFree NoLoc Lifted))]
## solution
([],[("res\8320",Right "t"),("t\8321",Right "t")])

# TySolve.solve
## constraints
"(v: {x: real.t, y: real.t, z: real.t}) -> real.t" ~ "a\8320 -> b\8321"
"t -> t" ~ "b\8321 -> c\8322"
## typarams
mempty
## tyvars
[("a\8320",(1,TyVarFree NoLoc Lifted)),("b\8321",(1,TyVarFree NoLoc Lifted)),("c\8322",(1,TyVarFree NoLoc Lifted))]
## solution
([],[("a\8320",Right "{x: real.t, y: real.t, z: real.t}"),("b\8321",Right "real.t"),("c\8322",Right "t")])

# TySolve.solve
## constraints
"{x: real.t, y: real.t, z: real.t}" ~ "{x: real.t, y: real.t, z: real.t}"
"t\8322" ~ "real.t"
"real.t" ~ "t"
"t\8322" ~ "t"
"t" ~ "real.t"
"{x: real.t, y: real.t, z: real.t}" ~ "{x: real.t, y: real.t, z: real.t}"
"{x: real.t, y: real.t, z: real.t}" ~ "{x: real.t, y: real.t, z: real.t}"
## typarams
mempty
## tyvars
[("t\8322",(3,TyVarFree NoLoc Lifted))]
## solution
([],[("t\8322",Right "real.t")])

# TySolve.solve
## constraints
"real.t" ~ "t"
"t\8322" ~ "t"
"real.t" ~ "t"
"t\8325" ~ "t"
"t\8322" ~ "t"
"real.t" ~ "t"
"t\8325" ~ "t"
"real.t" ~ "t"
"t" ~ "t"
"t" ~ "t"
"t\8325" ~ "t"
"real.t" ~ "t"
"t\8322" ~ "t"
"real.t" ~ "t"
"t" ~ "t"
"t" ~ "t"
## typarams
mempty
## tyvars
[("t\8322",(4,TyVarFree NoLoc Lifted)),("t\8325",(6,TyVarFree NoLoc Lifted))]
## solution
([],[("t\8322",Right "t"),("t\8325",Right "t")])

# TySolve.solve
## constraints
"real.t" ~ "t"
"t\8322" ~ "t"
"real.t" ~ "t"
"t\8325" ~ "t"
"t\8322" ~ "t"
"real.t" ~ "t"
"t\8325" ~ "t"
"real.t" ~ "t"
"t" ~ "t"
"t" ~ "t"
"t\8325" ~ "t"
"real.t" ~ "t"
"t\8322" ~ "t"
"real.t" ~ "t"
"t" ~ "t"
"t" ~ "t"
## typarams
mempty
## tyvars
[("t\8322",(4,TyVarFree NoLoc Lifted)),("t\8325",(6,TyVarFree NoLoc Lifted))]
## solution
([],[("t\8322",Right "t"),("t\8325",Right "t")])

# TySolve.solve
## constraints
"real.t" ~ "t"
"t\8322" ~ "t"
"real.t" ~ "t"
"t\8325" ~ "t"
"t\8322" ~ "t"
"real.t" ~ "t"
"t\8325" ~ "t"
"real.t" ~ "t"
"t" ~ "t"
"t" ~ "t"
"t\8325" ~ "t"
"real.t" ~ "t"
"t\8322" ~ "t"
"real.t" ~ "t"
"t" ~ "t"
"t" ~ "t"
## typarams
mempty
## tyvars
[("t\8322",(4,TyVarFree NoLoc Lifted)),("t\8325",(6,TyVarFree NoLoc Lifted))]
## solution
([],[("t\8322",Right "t"),("t\8325",Right "t")])

# TySolve.solve
## constraints
"num\8321" ~ "i32"
"t" ~ "a\8320"
## typarams
mempty
## tyvars
[("a\8320",(1,TyVarFree NoLoc Unlifted)),("num\8321",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("a\8320",Right "t"),("num\8321",Right "i32")])

# TySolve.solve
## constraints
"num\8320" ~ "i32"
"real.t" ~ "t"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[("a\8320",(1,TyVarFree NoLoc Unlifted)),("b\8321",(1,TyVarFree NoLoc Unlifted))]
## solution
([("a\8320",Unlifted),("b\8321",Unlifted)],[])

# TySolve.solve
## constraints
"t\8321" ~ "vector a\8325"
"t\8322" ~ "vector b\8326"
"t\8320" ~ "a\8321\8323 -> b\8321\8324 -> c\8321\8325"
"(a\8321\8323, b\8321\8324) -> c\8321\8325" ~ "a\8321\8321 -> b\8321\8322"
"vector (a\8325, b\8326)" ~ "a\8323"
"vector a\8321\8321 -> vector b\8321\8322" ~ "a\8323 -> b\8324"
## typarams
mempty
## tyvars
[("t\8320",(1,TyVarFree NoLoc Lifted)),("t\8321",(2,TyVarFree NoLoc Lifted)),("t\8322",(3,TyVarFree NoLoc Lifted)),("a\8323",(4,TyVarFree NoLoc Lifted)),("b\8324",(4,TyVarFree NoLoc Lifted)),("a\8325",(4,TyVarFree NoLoc Unlifted)),("b\8326",(4,TyVarFree NoLoc Unlifted)),("a\8321\8321",(4,TyVarFree NoLoc Unlifted)),("b\8321\8322",(4,TyVarFree NoLoc Unlifted)),("a\8321\8323",(4,TyVarFree NoLoc Lifted)),("b\8321\8324",(4,TyVarFree NoLoc Lifted)),("c\8321\8325",(4,TyVarFree NoLoc Lifted))]
## solution
([("a\8325",Unlifted),("b\8326",Unlifted),("b\8321\8322",Unlifted)],[("t\8320",Right "a\8321\8323 -> b\8321\8324 -> c\8321\8325"),("t\8321",Right "vector a\8325"),("t\8322",Right "vector b\8326"),("a\8323",Right "vector (a\8325, b\8326)"),("b\8324",Right "vector b\8321\8322"),("a\8321\8321",Right "(a\8321\8323, b\8321\8324)"),("a\8321\8323",Right "a\8325"),("b\8321\8324",Right "b\8326"),("c\8321\8325",Right "b\8321\8322")])

# TySolve.solve
## constraints
"t -> t -> t" ~ "a\8320 -> b\8321 -> b\8322"
## typarams
mempty
## tyvars
[("a\8320",(1,TyVarFree NoLoc Unlifted)),("b\8321",(1,TyVarFree NoLoc Unlifted)),("b\8322",(1,TyVarFree NoLoc Unlifted))]
## solution
([],[("a\8320",Right "t"),("b\8321",Right "t"),("b\8322",Right "t")])

# TySolve.solve
## constraints
"t -> t -> t" ~ "a\8320 -> b\8321 -> b\8322"
## typarams
mempty
## tyvars
[("a\8320",(1,TyVarFree NoLoc Unlifted)),("b\8321",(1,TyVarFree NoLoc Unlifted)),("b\8322",(1,TyVarFree NoLoc Unlifted))]
## solution
([],[("a\8320",Right "t"),("b\8321",Right "t"),("b\8322",Right "t")])

# TySolve.solve
## constraints
"t -> t -> t" ~ "a\8320 -> b\8321 -> b\8322"
## typarams
mempty
## tyvars
[("a\8320",(1,TyVarFree NoLoc Unlifted)),("b\8321",(1,TyVarFree NoLoc Unlifted)),("b\8322",(1,TyVarFree NoLoc Unlifted))]
## solution
([],[("a\8320",Right "t"),("b\8321",Right "t"),("b\8322",Right "t")])

# TySolve.solve
## constraints
"t -> t -> t" ~ "a\8320 -> b\8321 -> b\8322"
## typarams
mempty
## tyvars
[("a\8320",(1,TyVarFree NoLoc Unlifted)),("b\8321",(1,TyVarFree NoLoc Unlifted)),("b\8322",(1,TyVarFree NoLoc Unlifted))]
## solution
([],[("a\8320",Right "t"),("b\8321",Right "t"),("b\8322",Right "t")])

# TySolve.solve
## constraints
"num\8321" ~ "i32"
"t -> t -> t" ~ "a\8326 -> b\8327 -> c\8328"
"V.vector real.t" ~ "vector a\8321\8321"
"V.vector real.t" ~ "vector b\8321\8322"
"(a\8326, b\8327) -> c\8328" ~ "a\8324 -> b\8325"
"vector (a\8321\8321, b\8321\8322)" ~ "vector a\8324"
"t -> t -> t" ~ "a\8320 -> a\8320 -> a\8320"
"t" ~ "a\8320"
"vector b\8325" ~ "vector a\8320"
## typarams
mempty
## tyvars
[("a\8320",(3,TyVarFree NoLoc Unlifted)),("num\8321",(3,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("a\8324",(3,TyVarFree NoLoc Unlifted)),("b\8325",(3,TyVarFree NoLoc Unlifted)),("a\8326",(3,TyVarFree NoLoc Lifted)),("b\8327",(3,TyVarFree NoLoc Lifted)),("c\8328",(3,TyVarFree NoLoc Lifted)),("a\8321\8321",(3,TyVarFree NoLoc Unlifted)),("b\8321\8322",(3,TyVarFree NoLoc Unlifted))]
## solution
([],[("a\8320",Right "t"),("num\8321",Right "i32"),("a\8324",Right "(t, t)"),("b\8325",Right "t"),("a\8326",Right "t"),("b\8327",Right "t"),("c\8328",Right "t"),("a\8321\8321",Right "real.t"),("b\8321\8322",Right "real.t")])

# TySolve.solve
## constraints
"real.t" ~ "t"
"t\8324" ~ "t"
"t\8324 -> t" ~ "a\8322 -> b\8323"
## typarams
mempty
## tyvars
[("a\8320",(2,TyVarFree NoLoc Unlifted)),("b\8321",(2,TyVarFree NoLoc Unlifted)),("a\8322",(2,TyVarFree NoLoc Unlifted)),("b\8323",(2,TyVarFree NoLoc Unlifted)),("t\8324",(2,TyVarFree NoLoc Lifted))]
## solution
([("a\8320",Unlifted),("b\8321",Unlifted)],[("a\8322",Right "t"),("b\8323",Right "t"),("t\8324",Right "t")])

# TySolve.solve
## constraints
"t\8320" ~ "V.vector real.t"
"t\8320" ~ "V.vector real.t"
## typarams
mempty
## tyvars
[("t\8320",(1,TyVarFree NoLoc Lifted))]
## solution
([],[("t\8320",Right "V.vector real.t")])

# TySolve.solve
## constraints
"(v: V.vector real.t) -> real.t" ~ "a\8320 -> b\8321"
"t -> t" ~ "b\8321 -> c\8322"
## typarams
mempty
## tyvars
[("a\8320",(1,TyVarFree NoLoc Lifted)),("b\8321",(1,TyVarFree NoLoc Lifted)),("c\8322",(1,TyVarFree NoLoc Lifted))]
## solution
([],[("a\8320",Right "V.vector real.t"),("b\8321",Right "real.t"),("c\8322",Right "t")])

# TySolve.solve
## constraints
"V.vector real.t" ~ "V.vector real.t"
"t\8322" ~ "real.t"
"real.t" ~ "t"
"t\8322" ~ "t"
"t" ~ "real.t"
"V.vector real.t" ~ "V.vector real.t"
"V.vector real.t" ~ "V.vector real.t"
## typarams
mempty
## tyvars
[("t\8322",(3,TyVarFree NoLoc Lifted))]
## solution
([],[("t\8322",Right "real.t")])

# TySolve.solve
## constraints
"{colour: u32, position: {x: f32, y: f32, z: f32}, radius: f32, shine: f32}" ~ "t\8321"
"t\8322" ~ "kt\8320"
"{colour: u32, position: {x: f32, y: f32, z: f32}, radius: f32, shine: f32}" ~ "t\8324"
"t\8325" ~ "kt\8323"
"t\8322" ~ "{x: f32, y: f32, z: f32}"
"{x: f32, y: f32, z: f32}" ~ "{x: f32, y: f32, z: f32}"
"{x: f32, y: f32, z: f32}" ~ "{x: f32, y: f32, z: f32}"
"{x: f32, y: f32, z: f32}" ~ "{x: f32, y: f32, z: f32}"
"f32" ~ "f32"
"{x: f32, y: f32, z: f32}" ~ "{x: f32, y: f32, z: f32}"
"{x: f32, y: f32, z: f32}" ~ "{x: f32, y: f32, z: f32}"
"{x: f32, y: f32, z: f32}" ~ "{x: f32, y: f32, z: f32}"
"t\8322\8322" ~ "{x: f32, y: f32, z: f32}"
"t\8322\8322" ~ "{x: f32, y: f32, z: f32}"
"t\8322" ~ "{x: f32, y: f32, z: f32}"
"{x: f32, y: f32, z: f32}" ~ "{x: f32, y: f32, z: f32}"
"t\8322\8329" ~ "f32"
"t\8322\8322" ~ "{x: f32, y: f32, z: f32}"
"{x: f32, y: f32, z: f32}" ~ "{x: f32, y: f32, z: f32}"
"t\8323\8324" ~ "{x: f32, y: f32, z: f32}"
"t\8322\8329" ~ "t\8323\8326"
"t\8325" ~ "t\8323\8326"
"t\8323\8324" ~ "{x: f32, y: f32, z: f32}"
"{x: f32, y: f32, z: f32}" ~ "{x: f32, y: f32, z: f32}"
"f32" ~ "t\8324\8321"
"float\8324\8326" ~ "t\8324\8321"
"bool" ~ "t\8323\8325"
"bool" ~ "t\8323\8325"
"t\8325\8325" ~ "t\8323\8325"
"t\8323\8324" ~ "{x: f32, y: f32, z: f32}"
"t\8325" ~ "t\8326\8320"
"t\8325" ~ "t\8326\8320"
"t\8322\8329" ~ "t\8326\8325"
"t\8322\8329" ~ "t\8326\8325"
"t\8326\8320" ~ "t\8325\8329"
"t\8326\8325" ~ "t\8325\8329"
"t\8325\8329" ~ "f32"
"f32" ~ "t\8325\8326"
"f32" ~ "t\8325\8326"
"t\8325\8325" ~ "bool"
"(bool, f32)" ~ "if_t\8328\8320"
"(bool, t\8325\8326)" ~ "if_t\8328\8320"
"(bool, f32)" ~ "if_t\8328\8320"
## typarams
mempty
## tyvars
[("kt\8320",(4,TyVarFree NoLoc Lifted)),("t\8321",(4,TyVarRecord NoLoc (fromList [(Name "position",Scalar (TypeVar NoUniqueness (QualName {qualQuals = [], qualLeaf = VName (Name "kt\8320") 13620}) []))]))),("t\8322",(5,TyVarFree NoLoc Lifted)),("kt\8323",(6,TyVarFree NoLoc Lifted)),("t\8324",(6,TyVarRecord NoLoc (fromList [(Name "radius",Scalar (TypeVar NoUniqueness (QualName {qualQuals = [], qualLeaf = VName (Name "kt\8323") 13623}) []))]))),("t\8325",(7,TyVarFree NoLoc Lifted)),("t\8322\8322",(9,TyVarFree NoLoc Lifted)),("t\8322\8329",(11,TyVarFree NoLoc Lifted)),("t\8323\8324",(13,TyVarFree NoLoc Lifted)),("t\8323\8325",(14,TyVarPrim NoLoc [Bool])),("t\8323\8326",(14,TyVarPrim NoLoc [Bool,Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8324\8321",(14,TyVarPrim NoLoc [Bool,Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("float\8324\8326",(14,TyVarPrim NoLoc [FloatType Float16,FloatType Float32,FloatType Float64])),("t\8325\8325",(15,TyVarFree NoLoc Lifted)),("t\8325\8326",(16,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8325\8329",(16,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8326\8320",(16,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8326\8325",(16,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("if_t\8328\8320",(16,TyVarFree NoLoc SizeLifted))]
## solution
([],[("kt\8320",Right "{x: f32, y: f32, z: f32}"),("t\8321",Right "{colour: u32, position: {x: f32, y: f32, z: f32}, radius: f32, shine: f32}"),("t\8322",Right "{x: f32, y: f32, z: f32}"),("kt\8323",Right "f32"),("t\8324",Right "{colour: u32, position: {x: f32, y: f32, z: f32}, radius: f32, shine: f32}"),("t\8325",Right "f32"),("t\8322\8322",Right "{x: f32, y: f32, z: f32}"),("t\8322\8329",Right "f32"),("t\8323\8324",Right "{x: f32, y: f32, z: f32}"),("t\8323\8325",Right "bool"),("t\8323\8326",Right "f32"),("t\8324\8321",Right "f32"),("float\8324\8326",Right "f32"),("t\8325\8325",Right "bool"),("t\8325\8326",Right "f32"),("t\8325\8329",Right "f32"),("t\8326\8320",Right "f32"),("t\8326\8325",Right "f32"),("if_t\8328\8320",Right "(bool, f32)")])

# TySolve.solve
## constraints
"{colour: u32, position: {x: f32, y: f32, z: f32}, radius: f32, shine: f32}" ~ "t\8321"
"{x: f32, y: f32, z: f32}" ~ "{x: f32, y: f32, z: f32}"
"kt\8320" ~ "{x: f32, y: f32, z: f32}"
"{x: f32, y: f32, z: f32}" ~ "{x: f32, y: f32, z: f32}"
"{x: f32, y: f32, z: f32}" ~ "{x: f32, y: f32, z: f32}"
## typarams
mempty
## tyvars
[("kt\8320",(3,TyVarFree NoLoc Lifted)),("t\8321",(3,TyVarRecord NoLoc (fromList [(Name "position",Scalar (TypeVar NoUniqueness (QualName {qualQuals = [], qualLeaf = VName (Name "kt\8320") 13724}) []))])))]
## solution
([],[("kt\8320",Right "{x: f32, y: f32, z: f32}"),("t\8321",Right "{colour: u32, position: {x: f32, y: f32, z: f32}, radius: f32, shine: f32}")])

# TySolve.solve
## constraints
"{colour: u32, normal: {x: f32, y: f32, z: f32}, position: {x: f32, y: f32, z: f32}, shine: f32}" ~ "t\8321"
"t\8322" ~ "kt\8320"
"{colour: u32, normal: {x: f32, y: f32, z: f32}, position: {x: f32, y: f32, z: f32}, shine: f32}" ~ "t\8324"
"t\8325" ~ "kt\8323"
"{x: f32, y: f32, z: f32}" ~ "{x: f32, y: f32, z: f32}"
"t\8325" ~ "{x: f32, y: f32, z: f32}"
"t\8321\8320" ~ "f32"
"t\8321\8320" ~ "t\8321\8321"
"float\8321\8322" ~ "t\8321\8321"
"t\8322" ~ "{x: f32, y: f32, z: f32}"
"{x: f32, y: f32, z: f32}" ~ "{x: f32, y: f32, z: f32}"
"{x: f32, y: f32, z: f32}" ~ "{x: f32, y: f32, z: f32}"
"t\8325" ~ "{x: f32, y: f32, z: f32}"
"f32" ~ "t\8321\8327"
"t\8321\8320" ~ "t\8321\8327"
"bool" ~ "bool"
"(bool, f32)" ~ "if_t\8323\8320"
"(bool, t\8321\8327)" ~ "if_t\8323\8320"
"(bool, f32)" ~ "if_t\8323\8320"
## typarams
mempty
## tyvars
[("kt\8320",(4,TyVarFree NoLoc Lifted)),("t\8321",(4,TyVarRecord NoLoc (fromList [(Name "position",Scalar (TypeVar NoUniqueness (QualName {qualQuals = [], qualLeaf = VName (Name "kt\8320") 13744}) []))]))),("t\8322",(5,TyVarFree NoLoc Lifted)),("kt\8323",(6,TyVarFree NoLoc Lifted)),("t\8324",(6,TyVarRecord NoLoc (fromList [(Name "normal",Scalar (TypeVar NoUniqueness (QualName {qualQuals = [], qualLeaf = VName (Name "kt\8323") 13747}) []))]))),("t\8325",(7,TyVarFree NoLoc Lifted)),("t\8321\8320",(9,TyVarFree NoLoc Lifted)),("t\8321\8321",(10,TyVarPrim NoLoc [Bool,Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("float\8321\8322",(10,TyVarPrim NoLoc [FloatType Float16,FloatType Float32,FloatType Float64])),("t\8321\8327",(10,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("if_t\8323\8320",(10,TyVarFree NoLoc SizeLifted))]
## solution
([],[("kt\8320",Right "{x: f32, y: f32, z: f32}"),("t\8321",Right "{colour: u32, normal: {x: f32, y: f32, z: f32}, position: {x: f32, y: f32, z: f32}, shine: f32}"),("t\8322",Right "{x: f32, y: f32, z: f32}"),("kt\8323",Right "{x: f32, y: f32, z: f32}"),("t\8324",Right "{colour: u32, normal: {x: f32, y: f32, z: f32}, position: {x: f32, y: f32, z: f32}, shine: f32}"),("t\8325",Right "{x: f32, y: f32, z: f32}"),("t\8321\8320",Right "f32"),("t\8321\8321",Right "f32"),("float\8321\8322",Right "f32"),("t\8321\8327",Right "f32"),("if_t\8323\8320",Right "(bool, f32)")])

# TySolve.solve
## constraints
"f32" ~ "t\8321"
"float\8322" ~ "t\8321"
"t\8321" ~ "f32"
"i32" ~ "t\8320"
"num\8329" ~ "t\8320"
"t\8321\8324" ~ "t\8320"
"f32" ~ "t\8321\8326"
"float\8321\8327" ~ "t\8321\8326"
"t\8321\8326" ~ "f32"
"i32" ~ "t\8321\8325"
"num\8322\8324" ~ "t\8321\8325"
"t\8322\8329" ~ "t\8321\8325"
"f32" ~ "t\8323\8320"
"float\8323\8321" ~ "t\8323\8320"
"bool" ~ "bool"
"t\8323\8328" ~ "i32"
"f32" ~ "t\8323\8329"
"float\8324\8320" ~ "t\8323\8329"
"bool" ~ "bool"
"t\8324\8327" ~ "i32"
"t\8321\8324" ~ "t\8325\8321"
"t\8322\8329" ~ "t\8325\8321"
"t\8325\8321" ~ "t\8325\8320"
"t\8323\8328" ~ "t\8325\8320"
"t\8325\8320" ~ "t\8324\8329"
"t\8324\8327" ~ "t\8324\8329"
"t\8324\8329" ~ "t\8324\8328"
"num\8326\8324" ~ "t\8324\8328"
"u32" ~ "a\8327\8323"
"u32 -> u32" ~ "a\8327\8323 -> b\8327\8324"
"b\8327\8324" ~ "a\8327\8321"
"u32 -> u32" ~ "a\8327\8321 -> b\8327\8322"
"b\8327\8322" ~ "a\8326\8329"
"u32 -> u32" ~ "a\8326\8329 -> b\8327\8320"
"bool" ~ "bool"
"u32" ~ "if_t\8328\8327"
"b\8327\8320" ~ "if_t\8328\8327"
"u32" ~ "if_t\8328\8327"
## typarams
mempty
## tyvars
[("t\8320",(3,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8321",(3,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("float\8322",(3,TyVarPrim NoLoc [FloatType Float16,FloatType Float32,FloatType Float64])),("num\8329",(3,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8321\8324",(4,TyVarFree NoLoc Lifted)),("t\8321\8325",(5,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8321\8326",(5,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("float\8321\8327",(5,TyVarPrim NoLoc [FloatType Float16,FloatType Float32,FloatType Float64])),("num\8322\8324",(5,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8322\8329",(6,TyVarFree NoLoc Lifted)),("t\8323\8320",(7,TyVarPrim NoLoc [Bool,Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("float\8323\8321",(7,TyVarPrim NoLoc [FloatType Float16,FloatType Float32,FloatType Float64])),("t\8323\8328",(8,TyVarFree NoLoc Lifted)),("t\8323\8329",(9,TyVarPrim NoLoc [Bool,Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("float\8324\8320",(9,TyVarPrim NoLoc [FloatType Float16,FloatType Float32,FloatType Float64])),("t\8324\8327",(10,TyVarFree NoLoc Lifted)),("t\8324\8328",(11,TyVarFree NoLoc Unlifted)),("t\8324\8329",(11,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64])),("t\8325\8320",(11,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64])),("t\8325\8321",(11,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64])),("num\8326\8324",(11,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("a\8326\8329",(11,TyVarFree NoLoc Lifted)),("b\8327\8320",(11,TyVarFree NoLoc Lifted)),("a\8327\8321",(11,TyVarFree NoLoc Lifted)),("b\8327\8322",(11,TyVarFree NoLoc Lifted)),("a\8327\8323",(11,TyVarFree NoLoc Lifted)),("b\8327\8324",(11,TyVarFree NoLoc Lifted)),("if_t\8328\8327",(11,TyVarFree NoLoc SizeLifted))]
## solution
([],[("t\8320",Right "i32"),("t\8321",Right "f32"),("float\8322",Right "f32"),("num\8329",Right "i32"),("t\8321\8324",Right "i32"),("t\8321\8325",Right "i32"),("t\8321\8326",Right "f32"),("float\8321\8327",Right "f32"),("num\8322\8324",Right "i32"),("t\8322\8329",Right "i32"),("t\8323\8320",Right "f32"),("float\8323\8321",Right "f32"),("t\8323\8328",Right "i32"),("t\8323\8329",Right "f32"),("float\8324\8320",Right "f32"),("t\8324\8327",Right "i32"),("t\8324\8328",Right "i32"),("t\8324\8329",Right "i32"),("t\8325\8320",Right "i32"),("t\8325\8321",Right "i32"),("num\8326\8324",Right "i32"),("a\8326\8329",Right "u32"),("b\8327\8320",Right "u32"),("a\8327\8321",Right "u32"),("b\8327\8322",Right "u32"),("a\8327\8323",Right "u32"),("b\8327\8324",Right "u32"),("if_t\8328\8327",Right "u32")])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(t\8320, t\8321, t\8322)" ~ "(bool, f32, object)"
"[]object" ~ "[]elem\8323"
"t\8324" ~ "elem\8323"
"t\8324" ~ "object"
"{x: f32, y: f32, z: f32}" ~ "{x: f32, y: f32, z: f32}"
"{x: f32, y: f32, z: f32}" ~ "{x: f32, y: f32, z: f32}"
"(t\8321\8321, t\8321\8322)" ~ "(bool, f32)"
"t\8321\8322" ~ "t\8321\8324"
"t\8321" ~ "t\8321\8324"
"t\8321\8321" ~ "t\8321\8323"
"bool" ~ "t\8321\8323"
"t\8321\8323" ~ "bool"
"(t\8321\8321, t\8321\8322, t\8324)" ~ "if_t\8322\8323"
"(t\8320, t\8321, t\8322)" ~ "if_t\8322\8323"
"(bool, f32, object)" ~ "if_t\8322\8323"
"(bool, f32, object)" ~ "(t\8320, t\8321, t\8322)"
## typarams
["(\"object\",(0,Unlifted,NoLoc))"]
## tyvars
[("t\8320",(6,TyVarFree NoLoc Lifted)),("t\8321",(6,TyVarFree NoLoc Lifted)),("t\8322",(6,TyVarFree NoLoc Lifted)),("elem\8323",(6,TyVarFree NoLoc Unlifted)),("t\8324",(6,TyVarFree NoLoc Lifted)),("t\8321\8321",(7,TyVarFree NoLoc Lifted)),("t\8321\8322",(7,TyVarFree NoLoc Lifted)),("t\8321\8323",(8,TyVarPrim NoLoc [Bool])),("t\8321\8324",(8,TyVarPrim NoLoc [Bool,Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("if_t\8322\8323",(8,TyVarFree NoLoc SizeLifted))]
## solution
([],[("t\8320",Right "bool"),("t\8321",Right "f32"),("t\8322",Right "object"),("elem\8323",Right "object"),("t\8324",Right "object"),("t\8321\8321",Right "bool"),("t\8321\8322",Right "f32"),("t\8321\8323",Right "bool"),("t\8321\8324",Right "f32"),("if_t\8322\8323",Right "(bool, f32, object)")])

# TySolve.solve
## constraints
"{colour: u32, position: {x: f32, y: f32, z: f32}, radius: f32, shine: f32} -> {x: f32, y: f32, z: f32} -> {x: f32, y: f32, z: f32} -> (bool, f32)" ~ "object\8320 -> {x: f32, y: f32, z: f32} -> {x: f32, y: f32, z: f32} -> (bool, f32)"
## typarams
mempty
## tyvars
[("object\8320",(1,TyVarFree NoLoc Unlifted))]
## solution
([],[("object\8320",Right "{colour: u32, position: {x: f32, y: f32, z: f32}, radius: f32, shine: f32}")])

# TySolve.solve
## constraints
"{colour: u32, normal: {x: f32, y: f32, z: f32}, position: {x: f32, y: f32, z: f32}, shine: f32} -> {x: f32, y: f32, z: f32} -> {x: f32, y: f32, z: f32} -> (bool, f32)" ~ "object\8320 -> {x: f32, y: f32, z: f32} -> {x: f32, y: f32, z: f32} -> (bool, f32)"
## typarams
mempty
## tyvars
[("object\8320",(1,TyVarFree NoLoc Unlifted))]
## solution
([],[("object\8320",Right "{colour: u32, normal: {x: f32, y: f32, z: f32}, position: {x: f32, y: f32, z: f32}, shine: f32}")])

# TySolve.solve
## constraints
"t\8320" ~ "bool"
"t\8321" ~ "i64"
"t\8322" ~ "t\8320"
"t\8323" ~ "i64"
"index\8324" ~ "index_elem\8325"
"[]object" ~ "[]index_elem\8325"
"index\8324" ~ "object"
"{x: f32, y: f32, z: f32}" ~ "{x: f32, y: f32, z: f32}"
"{x: f32, y: f32, z: f32}" ~ "{x: f32, y: f32, z: f32}"
"(t\8321\8322, t\8321\8323)" ~ "(bool, f32)"
"t\8321\8323" ~ "t\8321\8325"
"f32" ~ "t\8321\8325"
"t\8321\8322" ~ "t\8321\8324"
"bool" ~ "t\8321\8324"
"t\8321\8324" ~ "bool"
"bool" ~ "if_t\8322\8324"
"t\8320" ~ "if_t\8322\8324"
"t\8320" ~ "bool"
"if_t\8322\8324" ~ "if_t\8322\8325"
"t\8320" ~ "if_t\8322\8325"
"bool" ~ "if_t\8322\8325"
"bool" ~ "t\8320"
## typarams
["(\"object\",(0,Unlifted,NoLoc))"]
## tyvars
[("t\8320",(6,TyVarFree NoLoc Lifted)),("t\8321",(6,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64])),("t\8322",(6,TyVarPrim NoLoc [Bool,Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64])),("t\8323",(6,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64])),("index\8324",(6,TyVarFree NoLoc Unlifted)),("index_elem\8325",(6,TyVarFree NoLoc Unlifted)),("t\8321\8322",(7,TyVarFree NoLoc Lifted)),("t\8321\8323",(7,TyVarFree NoLoc Lifted)),("t\8321\8324",(8,TyVarPrim NoLoc [Bool])),("t\8321\8325",(8,TyVarPrim NoLoc [Bool,Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("if_t\8322\8324",(8,TyVarFree NoLoc SizeLifted)),("if_t\8322\8325",(6,TyVarFree NoLoc SizeLifted))]
## solution
([],[("t\8320",Right "bool"),("t\8321",Right "i64"),("t\8322",Right "bool"),("t\8323",Right "i64"),("index\8324",Right "object"),("index_elem\8325",Right "object"),("t\8321\8322",Right "bool"),("t\8321\8323",Right "f32"),("t\8321\8324",Right "bool"),("t\8321\8325",Right "f32"),("if_t\8322\8324",Right "bool"),("if_t\8322\8325",Right "bool")])

# TySolve.solve
## constraints
"{colour: u32, position: {x: f32, y: f32, z: f32}, radius: f32, shine: f32} -> {x: f32, y: f32, z: f32} -> {x: f32, y: f32, z: f32} -> (bool, f32)" ~ "object\8320 -> {x: f32, y: f32, z: f32} -> {x: f32, y: f32, z: f32} -> (bool, f32)"
## typarams
mempty
## tyvars
[("object\8320",(1,TyVarFree NoLoc Unlifted))]
## solution
([],[("object\8320",Right "{colour: u32, position: {x: f32, y: f32, z: f32}, radius: f32, shine: f32}")])

# TySolve.solve
## constraints
"{colour: u32, normal: {x: f32, y: f32, z: f32}, position: {x: f32, y: f32, z: f32}, shine: f32} -> {x: f32, y: f32, z: f32} -> {x: f32, y: f32, z: f32} -> (bool, f32)" ~ "object\8320 -> {x: f32, y: f32, z: f32} -> {x: f32, y: f32, z: f32} -> (bool, f32)"
## typarams
mempty
## tyvars
[("object\8320",(1,TyVarFree NoLoc Unlifted))]
## solution
([],[("object\8320",Right "{colour: u32, normal: {x: f32, y: f32, z: f32}, position: {x: f32, y: f32, z: f32}, shine: f32}")])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"{colour: u32, position: {x: f32, y: f32, z: f32}}" ~ "t\8323"
"kt\8322" ~ "{x: f32, y: f32, z: f32}"
"{x: f32, y: f32, z: f32}" ~ "{x: f32, y: f32, z: f32}"
"t\8328" ~ "{x: f32, y: f32, z: f32}"
"t\8328" ~ "{x: f32, y: f32, z: f32}"
"t\8321\8321" ~ "f32"
"float\8321\8323" ~ "t\8321\8322"
"t\8321\8321" ~ "t\8321\8322"
"t\8321\8322" ~ "f32"
"t\8328" ~ "{x: f32, y: f32, z: f32}"
"t\8322\8322" ~ "{x: f32, y: f32, z: f32}"
"[]{colour: u32, position: {x: f32, y: f32, z: f32}, radius: f32, shine: f32}" ~ "[]{colour: u32, position: {x: f32, y: f32, z: f32}, radius: f32, shine: f32}"
"{x: f32, y: f32, z: f32}" ~ "{x: f32, y: f32, z: f32}"
"t\8322\8322" ~ "{x: f32, y: f32, z: f32}"
"t\8321\8321" ~ "f32"
"[]{colour: u32, normal: {x: f32, y: f32, z: f32}, position: {x: f32, y: f32, z: f32}, shine: f32}" ~ "[]{colour: u32, normal: {x: f32, y: f32, z: f32}, position: {x: f32, y: f32, z: f32}, shine: f32}"
"{x: f32, y: f32, z: f32}" ~ "{x: f32, y: f32, z: f32}"
"t\8322\8322" ~ "{x: f32, y: f32, z: f32}"
"t\8321\8321" ~ "f32"
"bool" ~ "t\8322\8323"
"bool" ~ "t\8322\8323"
"{x: f32, y: f32, z: f32}" ~ "{x: f32, y: f32, z: f32}"
"t\8322\8322" ~ "{x: f32, y: f32, z: f32}"
"t\8324\8328" ~ "f32"
"{colour: u32, position: {x: f32, y: f32, z: f32}}" ~ "t\8325\8320"
"kt\8324\8329" ~ "u32"
"(t\8325\8323, t\8325\8324, t\8325\8325, t\8325\8326)" ~ "(f32, f32, f32, f32)"
"t\8325\8323" ~ "t\8325\8327"
"t\8324\8328" ~ "t\8325\8327"
"t\8325\8324" ~ "t\8326\8322"
"t\8324\8328" ~ "t\8326\8322"
"t\8325\8325" ~ "t\8326\8327"
"t\8324\8328" ~ "t\8326\8327"
"t\8325\8327" ~ "f32"
"t\8326\8322" ~ "f32"
"t\8326\8327" ~ "f32"
"float\8327\8322" ~ "f32"
"t\8328\8321" ~ "u32"
"t\8322\8323" ~ "bool"
"u32" ~ "if_t\8328\8322"
"t\8328\8321" ~ "if_t\8328\8322"
"u32" ~ "if_t\8328\8322"
## typarams
mempty
## tyvars
[("kt\8322",(5,TyVarFree NoLoc Lifted)),("t\8323",(5,TyVarRecord NoLoc (fromList [(Name "position",Scalar (TypeVar NoUniqueness (QualName {qualQuals = [], qualLeaf = VName (Name "kt\8322") 14044}) []))]))),("t\8328",(6,TyVarFree NoLoc Lifted)),("t\8321\8321",(8,TyVarFree NoLoc Lifted)),("t\8321\8322",(9,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("float\8321\8323",(9,TyVarPrim NoLoc [FloatType Float16,FloatType Float32,FloatType Float64])),("t\8322\8322",(10,TyVarFree NoLoc Lifted)),("t\8322\8323",(11,TyVarPrim NoLoc [Bool])),("t\8324\8328",(12,TyVarFree NoLoc Lifted)),("kt\8324\8329",(13,TyVarFree NoLoc Lifted)),("t\8325\8320",(13,TyVarRecord NoLoc (fromList [(Name "colour",Scalar (TypeVar NoUniqueness (QualName {qualQuals = [], qualLeaf = VName (Name "kt\8324\8329") 14103}) []))]))),("t\8325\8323",(14,TyVarFree NoLoc Lifted)),("t\8325\8324",(14,TyVarFree NoLoc Lifted)),("t\8325\8325",(14,TyVarFree NoLoc Lifted)),("t\8325\8326",(14,TyVarFree NoLoc Lifted)),("t\8325\8327",(15,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8326\8322",(15,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8326\8327",(15,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("float\8327\8322",(15,TyVarPrim NoLoc [FloatType Float16,FloatType Float32,FloatType Float64])),("t\8328\8321",(16,TyVarFree NoLoc Lifted)),("if_t\8328\8322",(11,TyVarFree NoLoc SizeLifted))]
## solution
([],[("kt\8322",Right "{x: f32, y: f32, z: f32}"),("t\8323",Right "{colour: u32, position: {x: f32, y: f32, z: f32}}"),("t\8328",Right "{x: f32, y: f32, z: f32}"),("t\8321\8321",Right "f32"),("t\8321\8322",Right "f32"),("float\8321\8323",Right "f32"),("t\8322\8322",Right "{x: f32, y: f32, z: f32}"),("t\8322\8323",Right "bool"),("t\8324\8328",Right "f32"),("kt\8324\8329",Right "u32"),("t\8325\8320",Right "{colour: u32, position: {x: f32, y: f32, z: f32}}"),("t\8325\8323",Right "f32"),("t\8325\8324",Right "f32"),("t\8325\8325",Right "f32"),("t\8325\8326",Right "f32"),("t\8325\8327",Right "f32"),("t\8326\8322",Right "f32"),("t\8326\8327",Right "f32"),("float\8327\8322",Right "f32"),("t\8328\8321",Right "u32"),("if_t\8328\8322",Right "u32")])

# TySolve.solve
## constraints
"{planes: []{colour: u32, normal: {x: f32, y: f32, z: f32}, position: {x: f32, y: f32, z: f32}, shine: f32}, spheres: []{colour: u32, position: {x: f32, y: f32, z: f32}, radius: f32, shine: f32}}" ~ "{planes: []{colour: u32, normal: {x: f32, y: f32, z: f32}, position: {x: f32, y: f32, z: f32}, shine: f32}, spheres: []{colour: u32, position: {x: f32, y: f32, z: f32}, radius: f32, shine: f32}}"
"{x: f32, y: f32, z: f32}" ~ "{x: f32, y: f32, z: f32}"
"{x: f32, y: f32, z: f32}" ~ "{x: f32, y: f32, z: f32}"
"t\8323" ~ "{colour: u32, position: {x: f32, y: f32, z: f32}}"
"t\8322" ~ "u32"
"u32" ~ "u32"
"(c: t\8322) -> (l: t\8323) -> u32" ~ "a\8321\8326 -> b\8321\8327 -> a\8321\8326"
"u32" ~ "a\8321\8326"
"[]{colour: u32, position: {x: f32, y: f32, z: f32}}" ~ "[]b\8321\8327"
"u32" ~ "a\8321\8326"
## typarams
mempty
## tyvars
[("t\8322",(6,TyVarFree NoLoc Lifted)),("t\8323",(7,TyVarFree NoLoc Lifted)),("a\8321\8326",(5,TyVarFree NoLoc Unlifted)),("b\8321\8327",(5,TyVarFree NoLoc Unlifted))]
## solution
([],[("t\8322",Right "u32"),("t\8323",Right "{colour: u32, position: {x: f32, y: f32, z: f32}}"),("a\8321\8326",Right "u32"),("b\8321\8327",Right "{colour: u32, position: {x: f32, y: f32, z: f32}}")])

# TySolve.solve
## constraints
"x\8321\8324\8326" ~ "[]x\8321\8324\8326\8321\8326\8327"
"{x: f32, y: f32, z: f32}" ~ "{x: f32, y: f32, z: f32}"
"t\8322" ~ "{x: f32, y: f32, z: f32}"
"t\8322" ~ "{x: f32, y: f32, z: f32}"
"{x: num\8323, y: num\8324, z: num\8325}" ~ "{x: f32, y: f32, z: f32}"
"{x: f32, y: f32, z: f32}" ~ "{x: f32, y: f32, z: f32}"
"t\8321\8322" ~ "{x: f32, y: f32, z: f32}"
"t\8321\8322" ~ "{x: f32, y: f32, z: f32}"
"t\8322" ~ "{x: f32, y: f32, z: f32}"
"{x: f32, y: f32, z: f32}" ~ "{x: f32, y: f32, z: f32}"
"t\8321\8329" ~ "{x: f32, y: f32, z: f32}"
"i32" ~ "i32"
"f32" ~ "t\8322\8322"
"num\8322\8325" ~ "t\8322\8322"
"f32" ~ "t\8322\8321"
"t\8322\8322" ~ "t\8322\8321"
"t\8322\8321" ~ "t\8322\8320"
"num\8323\8324" ~ "t\8322\8320"
"t\8323\8329" ~ "t\8322\8320"
"i64" ~ "i64"
"i64" ~ "i64"
"f32" ~ "t\8324\8320"
"f32" ~ "t\8324\8320"
"t\8324\8329" ~ "t\8324\8320"
"t\8323\8329" ~ "f32"
"t\8325\8322" ~ "f32"
"t\8324\8329" ~ "t\8325\8323"
"t\8325\8322" ~ "t\8325\8323"
"t\8325\8328" ~ "t\8325\8323"
"t\8325\8322" ~ "t\8325\8329"
"num\8326\8320" ~ "t\8325\8329"
"t\8326\8325" ~ "t\8325\8329"
"t\8325\8328" ~ "t\8326\8326"
"num\8326\8327" ~ "t\8326\8326"
"t\8327\8322" ~ "t\8326\8326"
"i64" ~ "i64"
"f32" ~ "t\8327\8324"
"num\8327\8327" ~ "t\8327\8324"
"t\8326\8325" ~ "t\8327\8323"
"t\8327\8324" ~ "t\8327\8323"
"t\8328\8326" ~ "t\8327\8323"
"i64" ~ "i64"
"f32" ~ "t\8328\8328"
"num\8329\8321" ~ "t\8328\8328"
"t\8327\8322" ~ "t\8328\8327"
"t\8328\8328" ~ "t\8328\8327"
"t\8321\8320\8320" ~ "t\8328\8327"
"i64" ~ "i64"
"f32" ~ "t\8321\8320\8322"
"t\8328\8326" ~ "t\8321\8320\8322"
"t\8321\8320\8322" ~ "t\8321\8320\8321"
"t\8325\8322" ~ "t\8321\8320\8321"
"t\8321\8320\8321" ~ "f32"
"t\8321\8322" ~ "{x: f32, y: f32, z: f32}"
"t\8321\8321\8327" ~ "{x: f32, y: f32, z: f32}"
"i64" ~ "i64"
"f32" ~ "t\8321\8321\8329"
"t\8321\8320\8320" ~ "t\8321\8321\8329"
"t\8321\8321\8329" ~ "t\8321\8321\8328"
"t\8325\8328" ~ "t\8321\8321\8328"
"t\8321\8321\8328" ~ "f32"
"t\8321\8329" ~ "{x: f32, y: f32, z: f32}"
"t\8321\8323\8324" ~ "{x: f32, y: f32, z: f32}"
"t\8322" ~ "{x: f32, y: f32, z: f32}"
"t\8321\8321\8327" ~ "{x: f32, y: f32, z: f32}"
"{x: f32, y: f32, z: f32}" ~ "{x: f32, y: f32, z: f32}"
"t\8321\8323\8324" ~ "{x: f32, y: f32, z: f32}"
"{x: f32, y: f32, z: f32}" ~ "{x: f32, y: f32, z: f32}"
"t\8321\8324\8327" ~ "i64"
"i64" ~ "i64"
"(x: i64) -> {x: f32, y: f32, z: f32}" ~ "a\8321\8324\8328 -> x\8321\8324\8329"
"[]i64" ~ "[]a\8321\8324\8328"
"i64" ~ "i64"
"[]i64" ~ "[]t\8321\8325\8328"
"(y: t\8321\8324\8327) -> []x\8321\8324\8329" ~ "a\8321\8324\8325 -> x\8321\8324\8326"
"[]t\8321\8325\8328" ~ "[]a\8321\8324\8325"
"[][]{x: f32, y: f32, z: f32}" ~ "[]x\8321\8324\8326"
## typarams
mempty
## tyvars
[("t\8322",(6,TyVarFree NoLoc Lifted)),("num\8323",(7,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("num\8324",(7,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("num\8325",(7,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8321\8322",(8,TyVarFree NoLoc Lifted)),("t\8321\8329",(10,TyVarFree NoLoc Lifted)),("t\8322\8320",(11,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8322\8321",(11,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8322\8322",(11,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("num\8322\8325",(11,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("num\8323\8324",(11,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8323\8329",(12,TyVarFree NoLoc Lifted)),("t\8324\8320",(13,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8324\8329",(14,TyVarFree NoLoc Lifted)),("t\8325\8322",(16,TyVarFree NoLoc Lifted)),("t\8325\8323",(17,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8325\8328",(18,TyVarFree NoLoc Lifted)),("t\8325\8329",(19,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("num\8326\8320",(19,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8326\8325",(20,TyVarFree NoLoc Lifted)),("t\8326\8326",(21,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("num\8326\8327",(21,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8327\8322",(22,TyVarFree NoLoc Lifted)),("t\8327\8323",(23,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8327\8324",(23,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("num\8327\8327",(23,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8328\8326",(24,TyVarFree NoLoc Lifted)),("t\8328\8327",(25,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8328\8328",(25,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("num\8329\8321",(25,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8321\8320\8320",(26,TyVarFree NoLoc Lifted)),("t\8321\8320\8321",(30,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8321\8320\8322",(30,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8321\8321\8327",(31,TyVarFree NoLoc Lifted)),("t\8321\8321\8328",(32,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8321\8321\8329",(32,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8321\8323\8324",(33,TyVarFree NoLoc Lifted)),("a\8321\8324\8325",(27,TyVarFree NoLoc Unlifted)),("x\8321\8324\8326",(27,TyVarFree NoLoc Unlifted)),("t\8321\8324\8327",(28,TyVarFree NoLoc Lifted)),("a\8321\8324\8328",(29,TyVarFree NoLoc Unlifted)),("x\8321\8324\8329",(29,TyVarFree NoLoc Unlifted)),("t\8321\8325\8328",(27,TyVarFree NoLoc Unlifted)),("x\8321\8324\8326\8321\8326\8327",(27,TyVarFree NoLoc Unlifted))]
## solution
([],[("t\8322",Right "{x: f32, y: f32, z: f32}"),("num\8323",Right "f32"),("num\8324",Right "f32"),("num\8325",Right "f32"),("t\8321\8322",Right "{x: f32, y: f32, z: f32}"),("t\8321\8329",Right "{x: f32, y: f32, z: f32}"),("t\8322\8320",Right "f32"),("t\8322\8321",Right "f32"),("t\8322\8322",Right "f32"),("num\8322\8325",Right "f32"),("num\8323\8324",Right "f32"),("t\8323\8329",Right "f32"),("t\8324\8320",Right "f32"),("t\8324\8329",Right "f32"),("t\8325\8322",Right "f32"),("t\8325\8323",Right "f32"),("t\8325\8328",Right "f32"),("t\8325\8329",Right "f32"),("num\8326\8320",Right "f32"),("t\8326\8325",Right "f32"),("t\8326\8326",Right "f32"),("num\8326\8327",Right "f32"),("t\8327\8322",Right "f32"),("t\8327\8323",Right "f32"),("t\8327\8324",Right "f32"),("num\8327\8327",Right "f32"),("t\8328\8326",Right "f32"),("t\8328\8327",Right "f32"),("t\8328\8328",Right "f32"),("num\8329\8321",Right "f32"),("t\8321\8320\8320",Right "f32"),("t\8321\8320\8321",Right "f32"),("t\8321\8320\8322",Right "f32"),("t\8321\8321\8327",Right "{x: f32, y: f32, z: f32}"),("t\8321\8321\8328",Right "f32"),("t\8321\8321\8329",Right "f32"),("t\8321\8323\8324",Right "{x: f32, y: f32, z: f32}"),("a\8321\8324\8325",Right "i64"),("x\8321\8324\8326",Right "[]{x: f32, y: f32, z: f32}"),("t\8321\8324\8327",Right "i64"),("a\8321\8324\8328",Right "i64"),("x\8321\8324\8329",Right "{x: f32, y: f32, z: f32}"),("t\8321\8325\8328",Right "i64"),("x\8321\8324\8326\8321\8326\8327",Right "{x: f32, y: f32, z: f32}")])

# TySolve.solve
## constraints
"f32" ~ "f32"
"{x: f32, y: f32, z: f32}" ~ "{x: f32, y: f32, z: f32}"
"{x: f32, y: f32, z: f32}" ~ "{x: f32, y: f32, z: f32}"
"{x: f32, y: f32, z: f32}" ~ "{x: f32, y: f32, z: f32}"
"t\8328" ~ "{x: f32, y: f32, z: f32}"
"{colour: u32, position: {x: f32, y: f32, z: f32}, radius: f32, shine: f32}" ~ "{colour: u32, position: {x: f32, y: f32, z: f32}, radius: f32, shine: f32}"
"t\8328" ~ "{x: f32, y: f32, z: f32}"
"t\8321\8323" ~ "{x: f32, y: f32, z: f32}"
"{colour: u32, position: {x: f32, y: f32, z: f32}, radius: f32, shine: f32}" ~ "t\8321\8325"
"t\8321\8326" ~ "kt\8321\8324"
"{colour: u32, position: {x: f32, y: f32, z: f32}, radius: f32, shine: f32}" ~ "t\8321\8328"
"t\8321\8329" ~ "kt\8321\8327"
"({x: f32, y: f32, z: f32}, {x: f32, y: f32, z: f32}, u32, f32)" ~ "(t\8328, t\8321\8323, t\8321\8326, t\8321\8329)"
## typarams
mempty
## tyvars
[("t\8328",(6,TyVarFree NoLoc Lifted)),("t\8321\8323",(8,TyVarFree NoLoc Lifted)),("kt\8321\8324",(9,TyVarFree NoLoc Lifted)),("t\8321\8325",(9,TyVarRecord NoLoc (fromList [(Name "colour",Scalar (TypeVar NoUniqueness (QualName {qualQuals = [], qualLeaf = VName (Name "kt\8321\8324") 14491}) []))]))),("t\8321\8326",(10,TyVarFree NoLoc Lifted)),("kt\8321\8327",(11,TyVarFree NoLoc Lifted)),("t\8321\8328",(11,TyVarRecord NoLoc (fromList [(Name "shine",Scalar (TypeVar NoUniqueness (QualName {qualQuals = [], qualLeaf = VName (Name "kt\8321\8327") 14494}) []))]))),("t\8321\8329",(12,TyVarFree NoLoc Lifted))]
## solution
([],[("t\8328",Right "{x: f32, y: f32, z: f32}"),("t\8321\8323",Right "{x: f32, y: f32, z: f32}"),("kt\8321\8324",Right "u32"),("t\8321\8325",Right "{colour: u32, position: {x: f32, y: f32, z: f32}, radius: f32, shine: f32}"),("t\8321\8326",Right "u32"),("kt\8321\8327",Right "f32"),("t\8321\8328",Right "{colour: u32, position: {x: f32, y: f32, z: f32}, radius: f32, shine: f32}"),("t\8321\8329",Right "f32")])

# TySolve.solve
## constraints
"f32" ~ "f32"
"{x: f32, y: f32, z: f32}" ~ "{x: f32, y: f32, z: f32}"
"{x: f32, y: f32, z: f32}" ~ "{x: f32, y: f32, z: f32}"
"{x: f32, y: f32, z: f32}" ~ "{x: f32, y: f32, z: f32}"
"t\8328" ~ "{x: f32, y: f32, z: f32}"
"{colour: u32, normal: {x: f32, y: f32, z: f32}, position: {x: f32, y: f32, z: f32}, shine: f32}" ~ "t\8321\8320"
"t\8321\8321" ~ "kt\8329"
"{colour: u32, normal: {x: f32, y: f32, z: f32}, position: {x: f32, y: f32, z: f32}, shine: f32}" ~ "t\8321\8323"
"kt\8321\8322" ~ "u32"
"t\8328" ~ "{x: f32, y: f32, z: f32}"
"t\8321\8328" ~ "u32"
"{colour: u32, normal: {x: f32, y: f32, z: f32}, position: {x: f32, y: f32, z: f32}, shine: f32}" ~ "t\8322\8320"
"t\8322\8321" ~ "kt\8321\8329"
"({x: f32, y: f32, z: f32}, {x: f32, y: f32, z: f32}, u32, f32)" ~ "(t\8328, t\8321\8321, t\8321\8328, t\8322\8321)"
## typarams
mempty
## tyvars
[("t\8328",(6,TyVarFree NoLoc Lifted)),("kt\8329",(7,TyVarFree NoLoc Lifted)),("t\8321\8320",(7,TyVarRecord NoLoc (fromList [(Name "normal",Scalar (TypeVar NoUniqueness (QualName {qualQuals = [], qualLeaf = VName (Name "kt\8329") 14517}) []))]))),("t\8321\8321",(8,TyVarFree NoLoc Lifted)),("kt\8321\8322",(9,TyVarFree NoLoc Lifted)),("t\8321\8323",(9,TyVarRecord NoLoc (fromList [(Name "colour",Scalar (TypeVar NoUniqueness (QualName {qualQuals = [], qualLeaf = VName (Name "kt\8321\8322") 14520}) []))]))),("t\8321\8328",(10,TyVarFree NoLoc Lifted)),("kt\8321\8329",(11,TyVarFree NoLoc Lifted)),("t\8322\8320",(11,TyVarRecord NoLoc (fromList [(Name "shine",Scalar (TypeVar NoUniqueness (QualName {qualQuals = [], qualLeaf = VName (Name "kt\8321\8329") 14528}) []))]))),("t\8322\8321",(12,TyVarFree NoLoc Lifted))]
## solution
([],[("t\8328",Right "{x: f32, y: f32, z: f32}"),("kt\8329",Right "{x: f32, y: f32, z: f32}"),("t\8321\8320",Right "{colour: u32, normal: {x: f32, y: f32, z: f32}, position: {x: f32, y: f32, z: f32}, shine: f32}"),("t\8321\8321",Right "{x: f32, y: f32, z: f32}"),("kt\8321\8322",Right "u32"),("t\8321\8323",Right "{colour: u32, normal: {x: f32, y: f32, z: f32}, position: {x: f32, y: f32, z: f32}, shine: f32}"),("t\8321\8328",Right "u32"),("kt\8321\8329",Right "f32"),("t\8322\8320",Right "{colour: u32, normal: {x: f32, y: f32, z: f32}, position: {x: f32, y: f32, z: f32}, shine: f32}"),("t\8322\8321",Right "f32")])

# TySolve.solve
## constraints
"{colour: u32, position: {x: float\8323, y: float\8324, z: float\8325}, radius: float\8327, shine: float\8326}" ~ "{colour: u32, position: {x: f32, y: f32, z: f32}, radius: f32, shine: f32}"
"t\8328" ~ "{colour: u32, position: {x: float\8323, y: float\8324, z: float\8325}, radius: float\8327, shine: float\8326}"
"{colour: u32, normal: {x: float\8321\8322, y: float\8321\8323, z: float\8321\8324}, position: {x: float\8329, y: float\8321\8320, z: float\8321\8321}, shine: float\8321\8325}" ~ "{colour: u32, normal: {x: f32, y: f32, z: f32}, position: {x: f32, y: f32, z: f32}, shine: f32}"
"t\8321\8326" ~ "{colour: u32, normal: {x: float\8321\8322, y: float\8321\8323, z: float\8321\8324}, position: {x: float\8329, y: float\8321\8320, z: float\8321\8321}, shine: float\8321\8325}"
"(t\8321\8329, t\8322\8320, t\8322\8321, t\8322\8322, t\8322\8323)" ~ "(num\8321\8327, u32, {x: f32, y: f32, z: f32}, {x: f32, y: f32, z: f32}, float\8321\8328)"
"t\8321\8329" ~ "t\8322\8324"
"i32" ~ "t\8322\8324"
"[]{colour: u32, position: {x: f32, y: f32, z: f32}, radius: f32, shine: f32}" ~ "[]{colour: u32, position: {x: f32, y: f32, z: f32}, radius: f32, shine: f32}"
"t\8328" ~ "{colour: u32, position: {x: f32, y: f32, z: f32}, radius: f32, shine: f32}"
"t\8322\8321" ~ "{x: f32, y: f32, z: f32}"
"t\8322\8322" ~ "{x: f32, y: f32, z: f32}"
"(t\8323\8327, t\8323\8328, t\8323\8329)" ~ "(bool, f32, {colour: u32, position: {x: f32, y: f32, z: f32}, radius: f32, shine: f32})"
"[]{colour: u32, normal: {x: f32, y: f32, z: f32}, position: {x: f32, y: f32, z: f32}, shine: f32}" ~ "[]{colour: u32, normal: {x: f32, y: f32, z: f32}, position: {x: f32, y: f32, z: f32}, shine: f32}"
"t\8321\8326" ~ "{colour: u32, normal: {x: f32, y: f32, z: f32}, position: {x: f32, y: f32, z: f32}, shine: f32}"
"t\8322\8321" ~ "{x: f32, y: f32, z: f32}"
"t\8322\8322" ~ "{x: f32, y: f32, z: f32}"
"(t\8324\8328, t\8324\8329, t\8325\8320)" ~ "(bool, f32, {colour: u32, normal: {x: f32, y: f32, z: f32}, position: {x: f32, y: f32, z: f32}, shine: f32})"
"t\8323\8327" ~ "t\8325\8321"
"t\8324\8328" ~ "t\8325\8321"
"t\8325\8326" ~ "t\8325\8321"
"t\8323\8329" ~ "{colour: u32, position: {x: f32, y: f32, z: f32}, radius: f32, shine: f32}"
"t\8323\8328" ~ "f32"
"t\8322\8321" ~ "{x: f32, y: f32, z: f32}"
"t\8322\8322" ~ "{x: f32, y: f32, z: f32}"
"t\8326\8325" ~ "({x: f32, y: f32, z: f32}, {x: f32, y: f32, z: f32}, u32, f32)"
"t\8325\8320" ~ "{colour: u32, normal: {x: f32, y: f32, z: f32}, position: {x: f32, y: f32, z: f32}, shine: f32}"
"t\8324\8329" ~ "f32"
"t\8322\8321" ~ "{x: f32, y: f32, z: f32}"
"t\8322\8322" ~ "{x: f32, y: f32, z: f32}"
"t\8327\8324" ~ "({x: f32, y: f32, z: f32}, {x: f32, y: f32, z: f32}, u32, f32)"
"t\8323\8328" ~ "t\8327\8325"
"t\8324\8329" ~ "t\8327\8325"
"bool" ~ "bool"
"t\8326\8325" ~ "if_t\8328\8320"
"t\8327\8324" ~ "if_t\8328\8320"
"(t\8328\8321, t\8328\8322, t\8328\8323, t\8328\8324)" ~ "if_t\8328\8320"
"t\8328\8322" ~ "{x: f32, y: f32, z: f32}"
"t\8322\8322" ~ "{x: f32, y: f32, z: f32}"
"float\8328\8326" ~ "t\8328\8325"
"f32" ~ "t\8328\8325"
"t\8328\8325" ~ "f32"
"t\8328\8322" ~ "{x: f32, y: f32, z: f32}"
"t\8322\8322" ~ "{x: f32, y: f32, z: f32}"
"{x: f32, y: f32, z: f32}" ~ "{x: f32, y: f32, z: f32}"
"t\8321\8320\8323" ~ "{x: f32, y: f32, z: f32}"
"{planes: []{colour: u32, normal: {x: f32, y: f32, z: f32}, position: {x: f32, y: f32, z: f32}, shine: f32}, spheres: []{colour: u32, position: {x: f32, y: f32, z: f32}, radius: f32, shine: f32}}" ~ "{planes: []{colour: u32, normal: {x: f32, y: f32, z: f32}, position: {x: f32, y: f32, z: f32}, shine: f32}, spheres: []{colour: u32, position: {x: f32, y: f32, z: f32}, radius: f32, shine: f32}}"
"{lights: []{colour: u32, position: {x: f32, y: f32, z: f32}}}" ~ "{lights: []{colour: u32, position: {x: f32, y: f32, z: f32}}}"
"t\8328\8321" ~ "{x: f32, y: f32, z: f32}"
"t\8328\8322" ~ "{x: f32, y: f32, z: f32}"
"t\8321\8321\8322" ~ "u32"
"t\8321\8321\8322" ~ "u32"
"u32" ~ "u32"
"t\8321\8321\8327" ~ "u32"
"t\8321\8321\8327" ~ "u32"
"t\8328\8323" ~ "u32"
"float\8321\8322\8323" ~ "t\8321\8322\8322"
"t\8328\8324" ~ "t\8321\8322\8322"
"u32" ~ "u32"
"t\8321\8322\8322" ~ "f32"
"t\8321\8323\8322" ~ "u32"
"float\8321\8323\8324" ~ "t\8321\8323\8323"
"t\8322\8323" ~ "t\8321\8323\8323"
"t\8321\8323\8323" ~ "f32"
"t\8322\8320" ~ "u32"
"t\8322\8323" ~ "f32"
"t\8321\8323\8322" ~ "u32"
"t\8321\8324\8327" ~ "u32"
"t\8321\8329" ~ "t\8321\8324\8328"
"num\8321\8324\8329" ~ "t\8321\8324\8328"
"t\8322\8323" ~ "t\8321\8325\8324"
"t\8328\8324" ~ "t\8321\8325\8324"
"t\8325\8321" ~ "bool"
"(i32, t\8322\8320, t\8322\8321, t\8322\8322, t\8322\8323)" ~ "if_t\8321\8325\8329"
"(t\8321\8324\8328, t\8321\8324\8327, t\8328\8321, t\8321\8320\8323, t\8321\8325\8324)" ~ "if_t\8321\8325\8329"
"(num\8321\8327, u32, {x: f32, y: f32, z: f32}, {x: f32, y: f32, z: f32}, float\8321\8328)" ~ "if_t\8321\8325\8329"
"(t\8321\8326\8320, t\8321\8326\8321, t\8321\8326\8322, t\8321\8326\8323, t\8321\8326\8324)" ~ "(t\8321\8329, t\8322\8320, t\8322\8321, t\8322\8322, t\8322\8323)"
## typarams
mempty
## tyvars
[("float\8323",(7,TyVarPrim NoLoc [FloatType Float16,FloatType Float32,FloatType Float64])),("float\8324",(7,TyVarPrim NoLoc [FloatType Float16,FloatType Float32,FloatType Float64])),("float\8325",(7,TyVarPrim NoLoc [FloatType Float16,FloatType Float32,FloatType Float64])),("float\8326",(7,TyVarPrim NoLoc [FloatType Float16,FloatType Float32,FloatType Float64])),("float\8327",(7,TyVarPrim NoLoc [FloatType Float16,FloatType Float32,FloatType Float64])),("t\8328",(8,TyVarFree NoLoc Lifted)),("float\8329",(9,TyVarPrim NoLoc [FloatType Float16,FloatType Float32,FloatType Float64])),("float\8321\8320",(9,TyVarPrim NoLoc [FloatType Float16,FloatType Float32,FloatType Float64])),("float\8321\8321",(9,TyVarPrim NoLoc [FloatType Float16,FloatType Float32,FloatType Float64])),("float\8321\8322",(9,TyVarPrim NoLoc [FloatType Float16,FloatType Float32,FloatType Float64])),("float\8321\8323",(9,TyVarPrim NoLoc [FloatType Float16,FloatType Float32,FloatType Float64])),("float\8321\8324",(9,TyVarPrim NoLoc [FloatType Float16,FloatType Float32,FloatType Float64])),("float\8321\8325",(9,TyVarPrim NoLoc [FloatType Float16,FloatType Float32,FloatType Float64])),("t\8321\8326",(10,TyVarFree NoLoc Lifted)),("num\8321\8327",(11,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("float\8321\8328",(11,TyVarPrim NoLoc [FloatType Float16,FloatType Float32,FloatType Float64])),("t\8321\8329",(11,TyVarFree NoLoc Lifted)),("t\8322\8320",(11,TyVarFree NoLoc Lifted)),("t\8322\8321",(11,TyVarFree NoLoc Lifted)),("t\8322\8322",(11,TyVarFree NoLoc Lifted)),("t\8322\8323",(11,TyVarFree NoLoc Lifted)),("t\8322\8324",(11,TyVarPrim NoLoc [Bool,Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8323\8327",(12,TyVarFree NoLoc Lifted)),("t\8323\8328",(12,TyVarFree NoLoc Lifted)),("t\8323\8329",(12,TyVarFree NoLoc Lifted)),("t\8324\8328",(14,TyVarFree NoLoc Lifted)),("t\8324\8329",(14,TyVarFree NoLoc Lifted)),("t\8325\8320",(14,TyVarFree NoLoc Lifted)),("t\8325\8321",(15,TyVarPrim NoLoc [Bool])),("t\8325\8326",(15,TyVarPrim NoLoc [Bool,Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64])),("t\8326\8325",(16,TyVarFree NoLoc Lifted)),("t\8327\8324",(18,TyVarFree NoLoc Lifted)),("t\8327\8325",(19,TyVarPrim NoLoc [Bool,Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("if_t\8328\8320",(19,TyVarFree NoLoc SizeLifted)),("t\8328\8321",(20,TyVarFree NoLoc Lifted)),("t\8328\8322",(20,TyVarFree NoLoc Lifted)),("t\8328\8323",(20,TyVarFree NoLoc Lifted)),("t\8328\8324",(20,TyVarFree NoLoc Lifted)),("t\8328\8325",(21,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("float\8328\8326",(21,TyVarPrim NoLoc [FloatType Float16,FloatType Float32,FloatType Float64])),("t\8321\8320\8323",(22,TyVarFree NoLoc Lifted)),("t\8321\8321\8322",(24,TyVarFree NoLoc Lifted)),("t\8321\8321\8327",(26,TyVarFree NoLoc Lifted)),("t\8321\8322\8322",(27,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("float\8321\8322\8323",(27,TyVarPrim NoLoc [FloatType Float16,FloatType Float32,FloatType Float64])),("t\8321\8323\8322",(28,TyVarFree NoLoc Lifted)),("t\8321\8323\8323",(29,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("float\8321\8323\8324",(29,TyVarPrim NoLoc [FloatType Float16,FloatType Float32,FloatType Float64])),("t\8321\8324\8327",(30,TyVarFree NoLoc Lifted)),("t\8321\8324\8328",(31,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("num\8321\8324\8329",(31,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8321\8325\8324",(31,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("if_t\8321\8325\8329",(15,TyVarFree NoLoc SizeLifted)),("t\8321\8326\8320",(12,TyVarFree NoLoc Lifted)),("t\8321\8326\8321",(12,TyVarFree NoLoc Lifted)),("t\8321\8326\8322",(12,TyVarFree NoLoc Lifted)),("t\8321\8326\8323",(12,TyVarFree NoLoc Lifted)),("t\8321\8326\8324",(12,TyVarFree NoLoc Lifted))]
## solution
([],[("float\8323",Right "f32"),("float\8324",Right "f32"),("float\8325",Right "f32"),("float\8326",Right "f32"),("float\8327",Right "f32"),("t\8328",Right "{colour: u32, position: {x: f32, y: f32, z: f32}, radius: f32, shine: f32}"),("float\8329",Right "f32"),("float\8321\8320",Right "f32"),("float\8321\8321",Right "f32"),("float\8321\8322",Right "f32"),("float\8321\8323",Right "f32"),("float\8321\8324",Right "f32"),("float\8321\8325",Right "f32"),("t\8321\8326",Right "{colour: u32, normal: {x: f32, y: f32, z: f32}, position: {x: f32, y: f32, z: f32}, shine: f32}"),("num\8321\8327",Right "i32"),("float\8321\8328",Right "f32"),("t\8321\8329",Right "i32"),("t\8322\8320",Right "u32"),("t\8322\8321",Right "{x: f32, y: f32, z: f32}"),("t\8322\8322",Right "{x: f32, y: f32, z: f32}"),("t\8322\8323",Right "f32"),("t\8322\8324",Right "i32"),("t\8323\8327",Right "bool"),("t\8323\8328",Right "f32"),("t\8323\8329",Right "{colour: u32, position: {x: f32, y: f32, z: f32}, radius: f32, shine: f32}"),("t\8324\8328",Right "bool"),("t\8324\8329",Right "f32"),("t\8325\8320",Right "{colour: u32, normal: {x: f32, y: f32, z: f32}, position: {x: f32, y: f32, z: f32}, shine: f32}"),("t\8325\8321",Right "bool"),("t\8325\8326",Right "bool"),("t\8326\8325",Right "({x: f32, y: f32, z: f32}, {x: f32, y: f32, z: f32}, u32, f32)"),("t\8327\8324",Right "({x: f32, y: f32, z: f32}, {x: f32, y: f32, z: f32}, u32, f32)"),("t\8327\8325",Right "f32"),("if_t\8328\8320",Right "({x: f32, y: f32, z: f32}, {x: f32, y: f32, z: f32}, u32, f32)"),("t\8328\8321",Right "{x: f32, y: f32, z: f32}"),("t\8328\8322",Right "{x: f32, y: f32, z: f32}"),("t\8328\8323",Right "u32"),("t\8328\8324",Right "f32"),("t\8328\8325",Right "f32"),("float\8328\8326",Right "f32"),("t\8321\8320\8323",Right "{x: f32, y: f32, z: f32}"),("t\8321\8321\8322",Right "u32"),("t\8321\8321\8327",Right "u32"),("t\8321\8322\8322",Right "f32"),("float\8321\8322\8323",Right "f32"),("t\8321\8323\8322",Right "u32"),("t\8321\8323\8323",Right "f32"),("float\8321\8323\8324",Right "f32"),("t\8321\8324\8327",Right "u32"),("t\8321\8324\8328",Right "i32"),("num\8321\8324\8329",Right "i32"),("t\8321\8325\8324",Right "f32"),("if_t\8321\8325\8329",Right "(i32, u32, {x: f32, y: f32, z: f32}, {x: f32, y: f32, z: f32}, f32)"),("t\8321\8326\8320",Right "i32"),("t\8321\8326\8321",Right "u32"),("t\8321\8326\8322",Right "{x: f32, y: f32, z: f32}"),("t\8321\8326\8323",Right "{x: f32, y: f32, z: f32}"),("t\8321\8326\8324",Right "f32")])

# TySolve.solve
## constraints
"f32" ~ "f32"
"float\8322" ~ "t\8321"
"f32" ~ "t\8321"
"t\8321\8320" ~ "float\8329"
"float\8321\8323" ~ "f32"
"float\8321\8324" ~ "f32"
"float\8321\8325" ~ "f32"
"float\8321\8326" ~ "f32"
"{colour: u32, position: {x: t\8321, y: float\8329, z: float\8321\8321}, radius: float\8321\8322, shine: float\8322\8325}" ~ "et\8320"
"f32" ~ "f32"
"float\8322\8327" ~ "t\8322\8326"
"f32" ~ "t\8322\8326"
"f32" ~ "t\8323\8327"
"float\8323\8328" ~ "t\8323\8327"
"f32" ~ "t\8323\8326"
"t\8323\8327" ~ "t\8323\8326"
"t\8323\8326" ~ "f32"
"float\8323\8325" ~ "t\8323\8324"
"f32" ~ "t\8323\8324"
"f32" ~ "f32"
"float\8325\8324" ~ "t\8325\8323"
"f32" ~ "t\8325\8323"
"float\8326\8322" ~ "f32"
"float\8326\8323" ~ "f32"
"float\8326\8324" ~ "f32"
"float\8326\8325" ~ "f32"
"{colour: u32, position: {x: t\8322\8326, y: t\8323\8324, z: t\8325\8323}, radius: float\8326\8321, shine: float\8327\8324}" ~ "et\8320"
"t\8327\8327" ~ "float\8327\8326"
"f32" ~ "f32"
"float\8327\8326" ~ "t\8327\8325"
"f32" ~ "t\8327\8325"
"f32" ~ "t\8328\8327"
"float\8328\8328" ~ "t\8328\8327"
"f32" ~ "t\8328\8326"
"t\8328\8327" ~ "t\8328\8326"
"t\8328\8326" ~ "f32"
"float\8328\8325" ~ "t\8328\8324"
"f32" ~ "t\8328\8324"
"t\8321\8320\8325" ~ "float\8321\8320\8324"
"f32" ~ "f32"
"float\8321\8320\8324" ~ "t\8321\8320\8323"
"f32" ~ "t\8321\8320\8323"
"float\8321\8321\8323" ~ "f32"
"float\8321\8321\8324" ~ "f32"
"float\8321\8321\8325" ~ "f32"
"float\8321\8321\8326" ~ "f32"
"{colour: u32, position: {x: t\8327\8325, y: t\8328\8324, z: t\8321\8320\8323}, radius: float\8321\8321\8322, shine: float\8321\8322\8325}" ~ "et\8320"
"t\8321\8322\8329" ~ "float\8321\8322\8328"
"float\8321\8323\8321" ~ "f32"
"float\8321\8323\8322" ~ "f32"
"float\8321\8323\8323" ~ "f32"
"float\8321\8323\8324" ~ "f32"
"{colour: u32, position: {x: float\8321\8322\8326, y: float\8321\8322\8327, z: float\8321\8322\8328}, radius: float\8321\8323\8320, shine: float\8321\8324\8323}" ~ "et\8320"
"t\8321\8324\8327" ~ "float\8321\8324\8326"
"t\8321\8325\8322" ~ "float\8321\8325\8321"
"{colour: u32, normal: {x: float\8321\8324\8329, y: float\8321\8325\8320, z: float\8321\8325\8321}, position: {x: float\8321\8324\8325, y: float\8321\8324\8326, z: float\8321\8324\8328}, shine: float\8321\8325\8323}" ~ "et\8321\8324\8324"
"{planes: []{colour: u32, normal: {x: f32, y: f32, z: f32}, position: {x: f32, y: f32, z: f32}, shine: f32}, spheres: []{colour: u32, position: {x: f32, y: f32, z: f32}, radius: f32, shine: f32}}" ~ "{planes: []et\8321\8324\8324, spheres: []et\8320}"
## typarams
mempty
## tyvars
[("et\8320",(2,TyVarFree NoLoc Unlifted)),("t\8321",(2,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("float\8322",(2,TyVarPrim NoLoc [FloatType Float16,FloatType Float32,FloatType Float64])),("float\8329",(2,TyVarPrim NoLoc [FloatType Float16,FloatType Float32,FloatType Float64])),("t\8321\8320",(2,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("float\8321\8321",(2,TyVarPrim NoLoc [FloatType Float16,FloatType Float32,FloatType Float64])),("float\8321\8322",(2,TyVarPrim NoLoc [FloatType Float16,FloatType Float32,FloatType Float64])),("float\8321\8323",(2,TyVarPrim NoLoc [FloatType Float16,FloatType Float32,FloatType Float64])),("float\8321\8324",(2,TyVarPrim NoLoc [FloatType Float16,FloatType Float32,FloatType Float64])),("float\8321\8325",(2,TyVarPrim NoLoc [FloatType Float16,FloatType Float32,FloatType Float64])),("float\8321\8326",(2,TyVarPrim NoLoc [FloatType Float16,FloatType Float32,FloatType Float64])),("float\8322\8325",(2,TyVarPrim NoLoc [FloatType Float16,FloatType Float32,FloatType Float64])),("t\8322\8326",(2,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("float\8322\8327",(2,TyVarPrim NoLoc [FloatType Float16,FloatType Float32,FloatType Float64])),("t\8323\8324",(2,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("float\8323\8325",(2,TyVarPrim NoLoc [FloatType Float16,FloatType Float32,FloatType Float64])),("t\8323\8326",(2,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8323\8327",(2,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("float\8323\8328",(2,TyVarPrim NoLoc [FloatType Float16,FloatType Float32,FloatType Float64])),("t\8325\8323",(2,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("float\8325\8324",(2,TyVarPrim NoLoc [FloatType Float16,FloatType Float32,FloatType Float64])),("float\8326\8321",(2,TyVarPrim NoLoc [FloatType Float16,FloatType Float32,FloatType Float64])),("float\8326\8322",(2,TyVarPrim NoLoc [FloatType Float16,FloatType Float32,FloatType Float64])),("float\8326\8323",(2,TyVarPrim NoLoc [FloatType Float16,FloatType Float32,FloatType Float64])),("float\8326\8324",(2,TyVarPrim NoLoc [FloatType Float16,FloatType Float32,FloatType Float64])),("float\8326\8325",(2,TyVarPrim NoLoc [FloatType Float16,FloatType Float32,FloatType Float64])),("float\8327\8324",(2,TyVarPrim NoLoc [FloatType Float16,FloatType Float32,FloatType Float64])),("t\8327\8325",(2,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("float\8327\8326",(2,TyVarPrim NoLoc [FloatType Float16,FloatType Float32,FloatType Float64])),("t\8327\8327",(2,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8328\8324",(2,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("float\8328\8325",(2,TyVarPrim NoLoc [FloatType Float16,FloatType Float32,FloatType Float64])),("t\8328\8326",(2,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8328\8327",(2,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("float\8328\8328",(2,TyVarPrim NoLoc [FloatType Float16,FloatType Float32,FloatType Float64])),("t\8321\8320\8323",(2,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("float\8321\8320\8324",(2,TyVarPrim NoLoc [FloatType Float16,FloatType Float32,FloatType Float64])),("t\8321\8320\8325",(2,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("float\8321\8321\8322",(2,TyVarPrim NoLoc [FloatType Float16,FloatType Float32,FloatType Float64])),("float\8321\8321\8323",(2,TyVarPrim NoLoc [FloatType Float16,FloatType Float32,FloatType Float64])),("float\8321\8321\8324",(2,TyVarPrim NoLoc [FloatType Float16,FloatType Float32,FloatType Float64])),("float\8321\8321\8325",(2,TyVarPrim NoLoc [FloatType Float16,FloatType Float32,FloatType Float64])),("float\8321\8321\8326",(2,TyVarPrim NoLoc [FloatType Float16,FloatType Float32,FloatType Float64])),("float\8321\8322\8325",(2,TyVarPrim NoLoc [FloatType Float16,FloatType Float32,FloatType Float64])),("float\8321\8322\8326",(2,TyVarPrim NoLoc [FloatType Float16,FloatType Float32,FloatType Float64])),("float\8321\8322\8327",(2,TyVarPrim NoLoc [FloatType Float16,FloatType Float32,FloatType Float64])),("float\8321\8322\8328",(2,TyVarPrim NoLoc [FloatType Float16,FloatType Float32,FloatType Float64])),("t\8321\8322\8329",(2,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("float\8321\8323\8320",(2,TyVarPrim NoLoc [FloatType Float16,FloatType Float32,FloatType Float64])),("float\8321\8323\8321",(2,TyVarPrim NoLoc [FloatType Float16,FloatType Float32,FloatType Float64])),("float\8321\8323\8322",(2,TyVarPrim NoLoc [FloatType Float16,FloatType Float32,FloatType Float64])),("float\8321\8323\8323",(2,TyVarPrim NoLoc [FloatType Float16,FloatType Float32,FloatType Float64])),("float\8321\8323\8324",(2,TyVarPrim NoLoc [FloatType Float16,FloatType Float32,FloatType Float64])),("float\8321\8324\8323",(2,TyVarPrim NoLoc [FloatType Float16,FloatType Float32,FloatType Float64])),("et\8321\8324\8324",(2,TyVarFree NoLoc Unlifted)),("float\8321\8324\8325",(2,TyVarPrim NoLoc [FloatType Float16,FloatType Float32,FloatType Float64])),("float\8321\8324\8326",(2,TyVarPrim NoLoc [FloatType Float16,FloatType Float32,FloatType Float64])),("t\8321\8324\8327",(2,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("float\8321\8324\8328",(2,TyVarPrim NoLoc [FloatType Float16,FloatType Float32,FloatType Float64])),("float\8321\8324\8329",(2,TyVarPrim NoLoc [FloatType Float16,FloatType Float32,FloatType Float64])),("float\8321\8325\8320",(2,TyVarPrim NoLoc [FloatType Float16,FloatType Float32,FloatType Float64])),("float\8321\8325\8321",(2,TyVarPrim NoLoc [FloatType Float16,FloatType Float32,FloatType Float64])),("t\8321\8325\8322",(2,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("float\8321\8325\8323",(2,TyVarPrim NoLoc [FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("et\8320",Right "{colour: u32, position: {x: f32, y: f32, z: f32}, radius: f32, shine: f32}"),("t\8321",Right "f32"),("float\8322",Right "f32"),("float\8329",Right "f32"),("t\8321\8320",Right "f32"),("float\8321\8321",Right "f32"),("float\8321\8322",Right "f32"),("float\8321\8323",Right "f32"),("float\8321\8324",Right "f32"),("float\8321\8325",Right "f32"),("float\8321\8326",Right "f32"),("float\8322\8325",Right "f32"),("t\8322\8326",Right "f32"),("float\8322\8327",Right "f32"),("t\8323\8324",Right "f32"),("float\8323\8325",Right "f32"),("t\8323\8326",Right "f32"),("t\8323\8327",Right "f32"),("float\8323\8328",Right "f32"),("t\8325\8323",Right "f32"),("float\8325\8324",Right "f32"),("float\8326\8321",Right "f32"),("float\8326\8322",Right "f32"),("float\8326\8323",Right "f32"),("float\8326\8324",Right "f32"),("float\8326\8325",Right "f32"),("float\8327\8324",Right "f32"),("t\8327\8325",Right "f32"),("float\8327\8326",Right "f32"),("t\8327\8327",Right "f32"),("t\8328\8324",Right "f32"),("float\8328\8325",Right "f32"),("t\8328\8326",Right "f32"),("t\8328\8327",Right "f32"),("float\8328\8328",Right "f32"),("t\8321\8320\8323",Right "f32"),("float\8321\8320\8324",Right "f32"),("t\8321\8320\8325",Right "f32"),("float\8321\8321\8322",Right "f32"),("float\8321\8321\8323",Right "f32"),("float\8321\8321\8324",Right "f32"),("float\8321\8321\8325",Right "f32"),("float\8321\8321\8326",Right "f32"),("float\8321\8322\8325",Right "f32"),("float\8321\8322\8326",Right "f32"),("float\8321\8322\8327",Right "f32"),("float\8321\8322\8328",Right "f32"),("t\8321\8322\8329",Right "f32"),("float\8321\8323\8320",Right "f32"),("float\8321\8323\8321",Right "f32"),("float\8321\8323\8322",Right "f32"),("float\8321\8323\8323",Right "f32"),("float\8321\8323\8324",Right "f32"),("float\8321\8324\8323",Right "f32"),("et\8321\8324\8324",Right "{colour: u32, normal: {x: f32, y: f32, z: f32}, position: {x: f32, y: f32, z: f32}, shine: f32}"),("float\8321\8324\8325",Right "f32"),("float\8321\8324\8326",Right "f32"),("t\8321\8324\8327",Right "f32"),("float\8321\8324\8328",Right "f32"),("float\8321\8324\8329",Right "f32"),("float\8321\8325\8320",Right "f32"),("float\8321\8325\8321",Right "f32"),("t\8321\8325\8322",Right "f32"),("float\8321\8325\8323",Right "f32")])

# TySolve.solve
## constraints
"t\8325\8327" ~ "[][]t\8325\8327\8327\8328"
"a\8325\8328" ~ "[]a\8325\8328\8327\8329"
"x\8325\8329" ~ "[]x\8325\8329\8328\8320"
"i32" ~ "i32"
"t\8322" ~ "i64"
"i32" ~ "i32"
"t\8325" ~ "i64"
"{colour: u32, position: {x: float\8327, y: float\8328, z: float\8329}}" ~ "et\8326"
"t\8321\8320" ~ "{lights: []et\8326}"
"f32" ~ "f32"
"t\8321\8323" ~ "{planes: []{colour: u32, normal: {x: f32, y: f32, z: f32}, position: {x: f32, y: f32, z: f32}, shine: f32}, spheres: []{colour: u32, position: {x: f32, y: f32, z: f32}, radius: f32, shine: f32}}"
"float\8321\8324" ~ "f32"
"float\8321\8325" ~ "f32"
"float\8321\8326" ~ "f32"
"float\8321\8327" ~ "f32"
"t\8322\8326" ~ "u32"
"t\8322\8327" ~ "{x: f32, y: f32, z: f32}"
"f32" ~ "f32"
"f32" ~ "f32"
"f32" ~ "t\8322\8328"
"f32" ~ "t\8322\8328"
"f32" ~ "f32"
"f32" ~ "f32"
"f32" ~ "f32"
"f32" ~ "t\8323\8329"
"f32" ~ "t\8323\8329"
"t\8324\8328" ~ "{x: t\8322\8328, y: f32, z: t\8323\8329}"
"t\8322" ~ "i64"
"t\8325" ~ "i64"
"i32" ~ "i32"
"t\8324\8328" ~ "{x: f32, y: f32, z: f32}"
"t\8325\8327" ~ "[][]{x: f32, y: f32, z: f32}"
"i32" ~ "i32"
"t\8321\8323" ~ "{planes: []{colour: u32, normal: {x: f32, y: f32, z: f32}, position: {x: f32, y: f32, z: f32}, shine: f32}, spheres: []{colour: u32, position: {x: f32, y: f32, z: f32}, radius: f32, shine: f32}}"
"t\8321\8320" ~ "{lights: []{colour: u32, position: {x: f32, y: f32, z: f32}}}"
"t\8322\8326" ~ "u32"
"t\8322\8327" ~ "{x: f32, y: f32, z: f32}"
"(orig_dir: {x: f32, y: f32, z: f32}) -> u32" ~ "a\8326\8320 -> x\8326\8321"
"(as: []a\8326\8320) -> *[]x\8326\8321" ~ "a\8325\8328 -> x\8325\8329"
"t\8325\8327" ~ "[]a\8325\8328"
## typarams
mempty
## tyvars
[("t\8322",(12,TyVarFree NoLoc Lifted)),("t\8325",(14,TyVarFree NoLoc Lifted)),("et\8326",(15,TyVarFree NoLoc Unlifted)),("float\8327",(15,TyVarPrim NoLoc [FloatType Float16,FloatType Float32,FloatType Float64])),("float\8328",(15,TyVarPrim NoLoc [FloatType Float16,FloatType Float32,FloatType Float64])),("float\8329",(15,TyVarPrim NoLoc [FloatType Float16,FloatType Float32,FloatType Float64])),("t\8321\8320",(16,TyVarFree NoLoc Lifted)),("t\8321\8323",(18,TyVarFree NoLoc Lifted)),("float\8321\8324",(19,TyVarPrim NoLoc [FloatType Float16,FloatType Float32,FloatType Float64])),("float\8321\8325",(19,TyVarPrim NoLoc [FloatType Float16,FloatType Float32,FloatType Float64])),("float\8321\8326",(19,TyVarPrim NoLoc [FloatType Float16,FloatType Float32,FloatType Float64])),("float\8321\8327",(19,TyVarPrim NoLoc [FloatType Float16,FloatType Float32,FloatType Float64])),("t\8322\8326",(20,TyVarFree NoLoc Lifted)),("t\8322\8327",(22,TyVarFree NoLoc Lifted)),("t\8322\8328",(23,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8323\8329",(23,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8324\8328",(24,TyVarFree NoLoc Lifted)),("t\8325\8327",(26,TyVarFree NoLoc Lifted)),("a\8325\8328",(27,TyVarFree NoLoc Unlifted)),("x\8325\8329",(27,TyVarFree NoLoc Unlifted)),("a\8326\8320",(27,TyVarFree NoLoc Unlifted)),("x\8326\8321",(27,TyVarFree NoLoc Unlifted)),("t\8325\8327\8327\8328",(26,TyVarFree NoLoc Lifted)),("a\8325\8328\8327\8329",(27,TyVarFree NoLoc Unlifted)),("x\8325\8329\8328\8320",(27,TyVarFree NoLoc Unlifted))]
## solution
([],[("t\8322",Right "i64"),("t\8325",Right "i64"),("et\8326",Right "{colour: u32, position: {x: f32, y: f32, z: f32}}"),("float\8327",Right "f32"),("float\8328",Right "f32"),("float\8329",Right "f32"),("t\8321\8320",Right "{lights: []{colour: u32, position: {x: f32, y: f32, z: f32}}}"),("t\8321\8323",Right "{planes: []{colour: u32, normal: {x: f32, y: f32, z: f32}, position: {x: f32, y: f32, z: f32}, shine: f32}, spheres: []{colour: u32, position: {x: f32, y: f32, z: f32}, radius: f32, shine: f32}}"),("float\8321\8324",Right "f32"),("float\8321\8325",Right "f32"),("float\8321\8326",Right "f32"),("float\8321\8327",Right "f32"),("t\8322\8326",Right "u32"),("t\8322\8327",Right "{x: f32, y: f32, z: f32}"),("t\8322\8328",Right "f32"),("t\8323\8329",Right "f32"),("t\8324\8328",Right "{x: f32, y: f32, z: f32}"),("t\8325\8327",Right "[][]{x: f32, y: f32, z: f32}"),("a\8325\8328",Right "[]{x: f32, y: f32, z: f32}"),("x\8325\8329",Right "[]u32"),("a\8326\8320",Right "{x: f32, y: f32, z: f32}"),("x\8326\8321",Right "u32"),("t\8325\8327\8327\8328",Right "{x: f32, y: f32, z: f32}"),("a\8325\8328\8327\8329",Right "{x: f32, y: f32, z: f32}"),("x\8325\8329\8328\8320",Right "u32")])

# TySolve.solve
## constraints
"t\8327" ~ "num\8326"
"t\8329" ~ "num\8328"
"f32" ~ "t\8321\8320"
"num\8321\8321" ~ "t\8321\8320"
"{eye: {a: f32, b: f32, pos: {x: f32, y: f32, z: f32}}, forward_sgn: i32, fov: i32, height: i64, limit: i32, sideway_sgn: i32, time: f32, width: i64}" ~ "{eye: {a: t\8321\8320, b: num\8321\8326, pos: {x: num\8325, y: num\8326, z: num\8328}}, forward_sgn: num\8321\8327, fov: num\8323, height: t\8321, limit: num\8324, sideway_sgn: num\8321\8328, time: num\8321\8329, width: t\8322}"
## typarams
mempty
## tyvars
[("t\8320",(1,TyVarFree NoLoc Lifted)),("t\8321",(2,TyVarFree NoLoc Lifted)),("t\8322",(3,TyVarFree NoLoc Lifted)),("num\8323",(4,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("num\8324",(4,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("num\8325",(4,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("num\8326",(4,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8327",(4,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("num\8328",(4,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8329",(4,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8321\8320",(4,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("num\8321\8321",(4,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("num\8321\8326",(4,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("num\8321\8327",(4,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("num\8321\8328",(4,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("num\8321\8329",(4,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([("t\8320",Lifted)],[("t\8321",Right "i64"),("t\8322",Right "i64"),("num\8323",Right "i32"),("num\8324",Right "i32"),("num\8325",Right "f32"),("num\8326",Right "f32"),("t\8327",Right "f32"),("num\8328",Right "f32"),("t\8329",Right "f32"),("t\8321\8320",Right "f32"),("num\8321\8321",Right "f32"),("num\8321\8326",Right "f32"),("num\8321\8327",Right "i32"),("num\8321\8328",Right "i32"),("num\8321\8329",Right "f32")])

# TySolve.solve
## constraints
"{eye: {a: f32, b: f32, pos: {x: f32, y: f32, z: f32}}, forward_sgn: i32, fov: i32, height: i64, limit: i32, sideway_sgn: i32, time: f32, width: i64}" ~ "ft\8322"
"{eye: {a: f32, b: f32, pos: {x: f32, y: f32, z: f32}}, forward_sgn: i32, fov: i32, height: i64, limit: i32, sideway_sgn: i32, time: f32, width: i64}" ~ "ft\8323"
## typarams
mempty
## tyvars
[("t\8320",(1,TyVarFree NoLoc Lifted)),("t\8321",(2,TyVarFree NoLoc Lifted)),("ft\8322",(4,TyVarRecord NoLoc (fromList [(Name "height",Scalar (TypeVar NoUniqueness (QualName {qualQuals = [], qualLeaf = VName (Name "t\8320") 15144}) []))]))),("ft\8323",(4,TyVarRecord NoLoc (fromList [(Name "width",Scalar (TypeVar NoUniqueness (QualName {qualQuals = [], qualLeaf = VName (Name "t\8321") 15145}) []))])))]
## solution
([],[("t\8320",Right "i64"),("t\8321",Right "i64"),("ft\8322",Right "{eye: {a: f32, b: f32, pos: {x: f32, y: f32, z: f32}}, forward_sgn: i32, fov: i32, height: i64, limit: i32, sideway_sgn: i32, time: f32, width: i64}"),("ft\8323",Right "{eye: {a: f32, b: f32, pos: {x: f32, y: f32, z: f32}}, forward_sgn: i32, fov: i32, height: i64, limit: i32, sideway_sgn: i32, time: f32, width: i64}")])

# TySolve.solve
## constraints
"i32" ~ "t\8320"
"num\8321" ~ "t\8320"
"{eye: {a: f32, b: f32, pos: {x: f32, y: f32, z: f32}}, forward_sgn: i32, fov: i32, height: i64, limit: i32, sideway_sgn: i32, time: f32, width: i64}" ~ "ft\8327"
"i32" ~ "t\8328"
"num\8329" ~ "t\8328"
"t\8321\8325" ~ "num\8321\8324"
"{eye: {a: f32, b: f32, pos: {x: f32, y: f32, z: f32}}, forward_sgn: i32, fov: i32, height: i64, limit: i32, sideway_sgn: i32, time: f32, width: i64}" ~ "ft\8321\8326"
"i32" ~ "t\8321\8327"
"num\8321\8328" ~ "t\8321\8327"
"t\8322\8324" ~ "num\8322\8323"
"{eye: {a: f32, b: f32, pos: {x: f32, y: f32, z: f32}}, forward_sgn: i32, fov: i32, height: i64, limit: i32, sideway_sgn: i32, time: f32, width: i64}" ~ "ft\8322\8325"
"i32" ~ "t\8322\8326"
"num\8322\8327" ~ "t\8322\8326"
"{eye: {a: f32, b: f32, pos: {x: f32, y: f32, z: f32}}, forward_sgn: i32, fov: i32, height: i64, limit: i32, sideway_sgn: i32, time: f32, width: i64}" ~ "ft\8323\8323"
"i32" ~ "t\8323\8324"
"num\8323\8325" ~ "t\8323\8324"
"{eye: {a: f32, b: f32, pos: {x: f32, y: f32, z: f32}}, forward_sgn: i32, fov: i32, height: i64, limit: i32, sideway_sgn: i32, time: f32, width: i64}" ~ "t\8324\8322"
"kt\8324\8321" ~ "t\8324\8320"
"num\8324\8323" ~ "t\8324\8320"
"t\8324\8320" ~ "i32"
"num\8324\8328" ~ "i32"
"{eye: {a: f32, b: f32, pos: {x: f32, y: f32, z: f32}}, forward_sgn: i32, fov: i32, height: i64, limit: i32, sideway_sgn: i32, time: f32, width: i64}" ~ "ft\8325\8323"
"i32" ~ "t\8325\8324"
"num\8325\8325" ~ "t\8325\8324"
"{eye: {a: f32, b: f32, pos: {x: f32, y: f32, z: f32}}, forward_sgn: i32, fov: i32, height: i64, limit: i32, sideway_sgn: i32, time: f32, width: i64}" ~ "t\8326\8322"
"kt\8326\8321" ~ "t\8326\8320"
"num\8326\8323" ~ "t\8326\8320"
"{eye: {a: f32, b: f32, pos: {x: f32, y: f32, z: f32}}, forward_sgn: i32, fov: i32, height: i64, limit: i32, sideway_sgn: i32, time: f32, width: i64}" ~ "ft\8326\8328"
"bool" ~ "bool"
"{eye: {a: f32, b: f32, pos: {x: f32, y: f32, z: f32}}, forward_sgn: i32, fov: i32, height: i64, limit: i32, sideway_sgn: i32, time: f32, width: i64}" ~ "if_t\8326\8329"
"{eye: {a: f32, b: f32, pos: {x: f32, y: f32, z: f32}}, forward_sgn: i32, fov: i32, height: i64, limit: i32, sideway_sgn: i32, time: f32, width: i64}" ~ "if_t\8326\8329"
"bool" ~ "bool"
"{eye: {a: f32, b: f32, pos: {x: f32, y: f32, z: f32}}, forward_sgn: i32, fov: i32, height: i64, limit: i32, sideway_sgn: i32, time: f32, width: i64}" ~ "if_t\8327\8320"
"if_t\8326\8329" ~ "if_t\8327\8320"
"bool" ~ "bool"
"{eye: {a: f32, b: f32, pos: {x: f32, y: f32, z: f32}}, forward_sgn: i32, fov: i32, height: i64, limit: i32, sideway_sgn: i32, time: f32, width: i64}" ~ "if_t\8327\8321"
"if_t\8327\8320" ~ "if_t\8327\8321"
"bool" ~ "bool"
"{eye: {a: f32, b: f32, pos: {x: f32, y: f32, z: f32}}, forward_sgn: i32, fov: i32, height: i64, limit: i32, sideway_sgn: i32, time: f32, width: i64}" ~ "if_t\8327\8322"
"if_t\8327\8321" ~ "if_t\8327\8322"
"bool" ~ "bool"
"{eye: {a: f32, b: f32, pos: {x: f32, y: f32, z: f32}}, forward_sgn: i32, fov: i32, height: i64, limit: i32, sideway_sgn: i32, time: f32, width: i64}" ~ "if_t\8327\8323"
"if_t\8327\8322" ~ "if_t\8327\8323"
"bool" ~ "bool"
"{eye: {a: f32, b: f32, pos: {x: f32, y: f32, z: f32}}, forward_sgn: i32, fov: i32, height: i64, limit: i32, sideway_sgn: i32, time: f32, width: i64}" ~ "if_t\8327\8324"
"if_t\8327\8323" ~ "if_t\8327\8324"
## typarams
mempty
## tyvars
[("t\8320",(3,TyVarFree NoLoc Unlifted)),("num\8321",(3,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("num\8326",(3,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("ft\8327",(3,TyVarRecord NoLoc (fromList [(Name "forward_sgn",Scalar (TypeVar NoUniqueness (QualName {qualQuals = [], qualLeaf = VName (Name "num\8326") 15158}) []))]))),("t\8328",(3,TyVarFree NoLoc Unlifted)),("num\8329",(3,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("num\8321\8324",(3,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8321\8325",(3,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("ft\8321\8326",(3,TyVarRecord NoLoc (fromList [(Name "forward_sgn",Scalar (TypeVar NoUniqueness (QualName {qualQuals = [], qualLeaf = VName (Name "num\8321\8324") 15167}) []))]))),("t\8321\8327",(3,TyVarFree NoLoc Unlifted)),("num\8321\8328",(3,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("num\8322\8323",(3,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8322\8324",(3,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("ft\8322\8325",(3,TyVarRecord NoLoc (fromList [(Name "sideway_sgn",Scalar (TypeVar NoUniqueness (QualName {qualQuals = [], qualLeaf = VName (Name "num\8322\8323") 15177}) []))]))),("t\8322\8326",(3,TyVarFree NoLoc Unlifted)),("num\8322\8327",(3,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("num\8323\8322",(3,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("ft\8323\8323",(3,TyVarRecord NoLoc (fromList [(Name "sideway_sgn",Scalar (TypeVar NoUniqueness (QualName {qualQuals = [], qualLeaf = VName (Name "num\8323\8322") 15187}) []))]))),("t\8323\8324",(3,TyVarFree NoLoc Unlifted)),("num\8323\8325",(3,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8324\8320",(3,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("kt\8324\8321",(3,TyVarFree NoLoc Lifted)),("t\8324\8322",(3,TyVarRecord NoLoc (fromList [(Name "limit",Scalar (TypeVar NoUniqueness (QualName {qualQuals = [], qualLeaf = VName (Name "kt\8324\8321") 15197}) []))]))),("num\8324\8323",(3,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("num\8324\8328",(3,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("ft\8325\8323",(3,TyVarRecord NoLoc (fromList [(Name "limit",Scalar (Prim (Signed Int32)))]))),("t\8325\8324",(3,TyVarFree NoLoc Unlifted)),("num\8325\8325",(3,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8326\8320",(3,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("kt\8326\8321",(3,TyVarFree NoLoc Lifted)),("t\8326\8322",(3,TyVarRecord NoLoc (fromList [(Name "limit",Scalar (TypeVar NoUniqueness (QualName {qualQuals = [], qualLeaf = VName (Name "kt\8326\8321") 15220}) []))]))),("num\8326\8323",(3,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("ft\8326\8328",(3,TyVarRecord NoLoc (fromList [(Name "limit",Scalar (TypeVar NoUniqueness (QualName {qualQuals = [], qualLeaf = VName (Name "t\8326\8320") 15219}) []))]))),("if_t\8326\8329",(3,TyVarFree NoLoc SizeLifted)),("if_t\8327\8320",(3,TyVarFree NoLoc SizeLifted)),("if_t\8327\8321",(3,TyVarFree NoLoc SizeLifted)),("if_t\8327\8322",(3,TyVarFree NoLoc SizeLifted)),("if_t\8327\8323",(3,TyVarFree NoLoc SizeLifted)),("if_t\8327\8324",(3,TyVarFree NoLoc SizeLifted))]
## solution
([],[("t\8320",Right "i32"),("num\8321",Right "i32"),("num\8326",Right "i32"),("ft\8327",Right "{eye: {a: f32, b: f32, pos: {x: f32, y: f32, z: f32}}, forward_sgn: i32, fov: i32, height: i64, limit: i32, sideway_sgn: i32, time: f32, width: i64}"),("t\8328",Right "i32"),("num\8329",Right "i32"),("num\8321\8324",Right "i32"),("t\8321\8325",Right "i32"),("ft\8321\8326",Right "{eye: {a: f32, b: f32, pos: {x: f32, y: f32, z: f32}}, forward_sgn: i32, fov: i32, height: i64, limit: i32, sideway_sgn: i32, time: f32, width: i64}"),("t\8321\8327",Right "i32"),("num\8321\8328",Right "i32"),("num\8322\8323",Right "i32"),("t\8322\8324",Right "i32"),("ft\8322\8325",Right "{eye: {a: f32, b: f32, pos: {x: f32, y: f32, z: f32}}, forward_sgn: i32, fov: i32, height: i64, limit: i32, sideway_sgn: i32, time: f32, width: i64}"),("t\8322\8326",Right "i32"),("num\8322\8327",Right "i32"),("num\8323\8322",Right "i32"),("ft\8323\8323",Right "{eye: {a: f32, b: f32, pos: {x: f32, y: f32, z: f32}}, forward_sgn: i32, fov: i32, height: i64, limit: i32, sideway_sgn: i32, time: f32, width: i64}"),("t\8323\8324",Right "i32"),("num\8323\8325",Right "i32"),("t\8324\8320",Right "i32"),("kt\8324\8321",Right "i32"),("t\8324\8322",Right "{eye: {a: f32, b: f32, pos: {x: f32, y: f32, z: f32}}, forward_sgn: i32, fov: i32, height: i64, limit: i32, sideway_sgn: i32, time: f32, width: i64}"),("num\8324\8323",Right "i32"),("num\8324\8328",Right "i32"),("ft\8325\8323",Right "{eye: {a: f32, b: f32, pos: {x: f32, y: f32, z: f32}}, forward_sgn: i32, fov: i32, height: i64, limit: i32, sideway_sgn: i32, time: f32, width: i64}"),("t\8325\8324",Right "i32"),("num\8325\8325",Right "i32"),("t\8326\8320",Right "i32"),("kt\8326\8321",Right "i32"),("t\8326\8322",Right "{eye: {a: f32, b: f32, pos: {x: f32, y: f32, z: f32}}, forward_sgn: i32, fov: i32, height: i64, limit: i32, sideway_sgn: i32, time: f32, width: i64}"),("num\8326\8323",Right "i32"),("ft\8326\8328",Right "{eye: {a: f32, b: f32, pos: {x: f32, y: f32, z: f32}}, forward_sgn: i32, fov: i32, height: i64, limit: i32, sideway_sgn: i32, time: f32, width: i64}"),("if_t\8326\8329",Right "{eye: {a: f32, b: f32, pos: {x: f32, y: f32, z: f32}}, forward_sgn: i32, fov: i32, height: i64, limit: i32, sideway_sgn: i32, time: f32, width: i64}"),("if_t\8327\8320",Right "{eye: {a: f32, b: f32, pos: {x: f32, y: f32, z: f32}}, forward_sgn: i32, fov: i32, height: i64, limit: i32, sideway_sgn: i32, time: f32, width: i64}"),("if_t\8327\8321",Right "{eye: {a: f32, b: f32, pos: {x: f32, y: f32, z: f32}}, forward_sgn: i32, fov: i32, height: i64, limit: i32, sideway_sgn: i32, time: f32, width: i64}"),("if_t\8327\8322",Right "{eye: {a: f32, b: f32, pos: {x: f32, y: f32, z: f32}}, forward_sgn: i32, fov: i32, height: i64, limit: i32, sideway_sgn: i32, time: f32, width: i64}"),("if_t\8327\8323",Right "{eye: {a: f32, b: f32, pos: {x: f32, y: f32, z: f32}}, forward_sgn: i32, fov: i32, height: i64, limit: i32, sideway_sgn: i32, time: f32, width: i64}"),("if_t\8327\8324",Right "{eye: {a: f32, b: f32, pos: {x: f32, y: f32, z: f32}}, forward_sgn: i32, fov: i32, height: i64, limit: i32, sideway_sgn: i32, time: f32, width: i64}")])

# TySolve.solve
## constraints
"i32" ~ "t\8320"
"num\8321" ~ "t\8320"
"{eye: {a: f32, b: f32, pos: {x: f32, y: f32, z: f32}}, forward_sgn: i32, fov: i32, height: i64, limit: i32, sideway_sgn: i32, time: f32, width: i64}" ~ "ft\8327"
"i32" ~ "t\8328"
"num\8329" ~ "t\8328"
"{eye: {a: f32, b: f32, pos: {x: f32, y: f32, z: f32}}, forward_sgn: i32, fov: i32, height: i64, limit: i32, sideway_sgn: i32, time: f32, width: i64}" ~ "ft\8321\8325"
"i32" ~ "t\8321\8326"
"num\8321\8327" ~ "t\8321\8326"
"{eye: {a: f32, b: f32, pos: {x: f32, y: f32, z: f32}}, forward_sgn: i32, fov: i32, height: i64, limit: i32, sideway_sgn: i32, time: f32, width: i64}" ~ "ft\8322\8323"
"i32" ~ "t\8322\8324"
"num\8322\8325" ~ "t\8322\8324"
"{eye: {a: f32, b: f32, pos: {x: f32, y: f32, z: f32}}, forward_sgn: i32, fov: i32, height: i64, limit: i32, sideway_sgn: i32, time: f32, width: i64}" ~ "ft\8323\8321"
"bool" ~ "bool"
"{eye: {a: f32, b: f32, pos: {x: f32, y: f32, z: f32}}, forward_sgn: i32, fov: i32, height: i64, limit: i32, sideway_sgn: i32, time: f32, width: i64}" ~ "if_t\8323\8322"
"{eye: {a: f32, b: f32, pos: {x: f32, y: f32, z: f32}}, forward_sgn: i32, fov: i32, height: i64, limit: i32, sideway_sgn: i32, time: f32, width: i64}" ~ "if_t\8323\8322"
"bool" ~ "bool"
"{eye: {a: f32, b: f32, pos: {x: f32, y: f32, z: f32}}, forward_sgn: i32, fov: i32, height: i64, limit: i32, sideway_sgn: i32, time: f32, width: i64}" ~ "if_t\8323\8323"
"if_t\8323\8322" ~ "if_t\8323\8323"
"bool" ~ "bool"
"{eye: {a: f32, b: f32, pos: {x: f32, y: f32, z: f32}}, forward_sgn: i32, fov: i32, height: i64, limit: i32, sideway_sgn: i32, time: f32, width: i64}" ~ "if_t\8323\8324"
"if_t\8323\8323" ~ "if_t\8323\8324"
"bool" ~ "bool"
"{eye: {a: f32, b: f32, pos: {x: f32, y: f32, z: f32}}, forward_sgn: i32, fov: i32, height: i64, limit: i32, sideway_sgn: i32, time: f32, width: i64}" ~ "if_t\8323\8325"
"if_t\8323\8324" ~ "if_t\8323\8325"
## typarams
mempty
## tyvars
[("t\8320",(3,TyVarFree NoLoc Unlifted)),("num\8321",(3,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("num\8326",(3,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("ft\8327",(3,TyVarRecord NoLoc (fromList [(Name "forward_sgn",Scalar (TypeVar NoUniqueness (QualName {qualQuals = [], qualLeaf = VName (Name "num\8326") 15245}) []))]))),("t\8328",(3,TyVarFree NoLoc Unlifted)),("num\8329",(3,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("num\8321\8324",(3,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("ft\8321\8325",(3,TyVarRecord NoLoc (fromList [(Name "forward_sgn",Scalar (TypeVar NoUniqueness (QualName {qualQuals = [], qualLeaf = VName (Name "num\8321\8324") 15254}) []))]))),("t\8321\8326",(3,TyVarFree NoLoc Unlifted)),("num\8321\8327",(3,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("num\8322\8322",(3,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("ft\8322\8323",(3,TyVarRecord NoLoc (fromList [(Name "sideway_sgn",Scalar (TypeVar NoUniqueness (QualName {qualQuals = [], qualLeaf = VName (Name "num\8322\8322") 15263}) []))]))),("t\8322\8324",(3,TyVarFree NoLoc Unlifted)),("num\8322\8325",(3,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("num\8323\8320",(3,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("ft\8323\8321",(3,TyVarRecord NoLoc (fromList [(Name "sideway_sgn",Scalar (TypeVar NoUniqueness (QualName {qualQuals = [], qualLeaf = VName (Name "num\8323\8320") 15272}) []))]))),("if_t\8323\8322",(3,TyVarFree NoLoc SizeLifted)),("if_t\8323\8323",(3,TyVarFree NoLoc SizeLifted)),("if_t\8323\8324",(3,TyVarFree NoLoc SizeLifted)),("if_t\8323\8325",(3,TyVarFree NoLoc SizeLifted))]
## solution
([],[("t\8320",Right "i32"),("num\8321",Right "i32"),("num\8326",Right "i32"),("ft\8327",Right "{eye: {a: f32, b: f32, pos: {x: f32, y: f32, z: f32}}, forward_sgn: i32, fov: i32, height: i64, limit: i32, sideway_sgn: i32, time: f32, width: i64}"),("t\8328",Right "i32"),("num\8329",Right "i32"),("num\8321\8324",Right "i32"),("ft\8321\8325",Right "{eye: {a: f32, b: f32, pos: {x: f32, y: f32, z: f32}}, forward_sgn: i32, fov: i32, height: i64, limit: i32, sideway_sgn: i32, time: f32, width: i64}"),("t\8321\8326",Right "i32"),("num\8321\8327",Right "i32"),("num\8322\8322",Right "i32"),("ft\8322\8323",Right "{eye: {a: f32, b: f32, pos: {x: f32, y: f32, z: f32}}, forward_sgn: i32, fov: i32, height: i64, limit: i32, sideway_sgn: i32, time: f32, width: i64}"),("t\8322\8324",Right "i32"),("num\8322\8325",Right "i32"),("num\8323\8320",Right "i32"),("ft\8323\8321",Right "{eye: {a: f32, b: f32, pos: {x: f32, y: f32, z: f32}}, forward_sgn: i32, fov: i32, height: i64, limit: i32, sideway_sgn: i32, time: f32, width: i64}"),("if_t\8323\8322",Right "{eye: {a: f32, b: f32, pos: {x: f32, y: f32, z: f32}}, forward_sgn: i32, fov: i32, height: i64, limit: i32, sideway_sgn: i32, time: f32, width: i64}"),("if_t\8323\8323",Right "{eye: {a: f32, b: f32, pos: {x: f32, y: f32, z: f32}}, forward_sgn: i32, fov: i32, height: i64, limit: i32, sideway_sgn: i32, time: f32, width: i64}"),("if_t\8323\8324",Right "{eye: {a: f32, b: f32, pos: {x: f32, y: f32, z: f32}}, forward_sgn: i32, fov: i32, height: i64, limit: i32, sideway_sgn: i32, time: f32, width: i64}"),("if_t\8323\8325",Right "{eye: {a: f32, b: f32, pos: {x: f32, y: f32, z: f32}}, forward_sgn: i32, fov: i32, height: i64, limit: i32, sideway_sgn: i32, time: f32, width: i64}")])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f32" ~ "num\8320"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "f32")])

# TySolve.solve
## constraints
"i32" ~ "i32"
"f32" ~ "t\8322"
"f32" ~ "t\8322"
"t\8322" ~ "t\8321"
"t\8320" ~ "t\8321"
"t\8321\8323" ~ "t\8321"
"f32" ~ "f32"
"t\8321\8323" ~ "t\8321\8325"
"f32" ~ "t\8321\8325"
"f32" ~ "f32"
"t\8321\8325" ~ "t\8321\8324"
"f32" ~ "t\8321\8324"
"f32" ~ "f32"
"t\8321\8323" ~ "t\8322\8328"
"f32" ~ "t\8322\8328"
"f32" ~ "f32"
"t\8321\8323" ~ "t\8323\8326"
"f32" ~ "t\8323\8326"
"f32" ~ "f32"
"t\8323\8326" ~ "t\8323\8325"
"f32" ~ "t\8323\8325"
## typarams
mempty
## tyvars
[("t\8320",(1,TyVarFree NoLoc Lifted)),("t\8321",(4,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8322",(4,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8321\8323",(5,TyVarFree NoLoc Lifted)),("t\8321\8324",(6,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8321\8325",(6,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8322\8328",(6,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8323\8325",(6,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8323\8326",(6,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("t\8320",Right "f32"),("t\8321",Right "f32"),("t\8322",Right "f32"),("t\8321\8323",Right "f32"),("t\8321\8324",Right "f32"),("t\8321\8325",Right "f32"),("t\8322\8328",Right "f32"),("t\8323\8325",Right "f32"),("t\8323\8326",Right "f32")])

# TySolve.solve
## constraints
"i32" ~ "i32"
"f32" ~ "t\8322"
"f32" ~ "t\8322"
"t\8322" ~ "t\8321"
"t\8320" ~ "t\8321"
"t\8321\8323" ~ "t\8321"
"f32" ~ "t\8321\8326"
"num\8321\8327" ~ "t\8321\8326"
"f32" ~ "t\8321\8325"
"t\8321\8326" ~ "t\8321\8325"
"t\8321\8325" ~ "f32"
"t\8321\8323" ~ "t\8321\8324"
"f32" ~ "t\8321\8324"
"num\8323\8322" ~ "f32"
"f32" ~ "t\8323\8325"
"num\8323\8326" ~ "t\8323\8325"
"f32" ~ "t\8323\8324"
"t\8323\8325" ~ "t\8323\8324"
"t\8323\8324" ~ "f32"
"t\8321\8323" ~ "t\8323\8323"
"f32" ~ "t\8323\8323"
## typarams
mempty
## tyvars
[("t\8320",(1,TyVarFree NoLoc Lifted)),("t\8321",(4,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8322",(4,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8321\8323",(5,TyVarFree NoLoc Lifted)),("t\8321\8324",(6,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8321\8325",(6,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8321\8326",(6,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("num\8321\8327",(6,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("num\8323\8322",(6,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8323\8323",(6,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8323\8324",(6,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8323\8325",(6,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("num\8323\8326",(6,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("t\8320",Right "f32"),("t\8321",Right "f32"),("t\8322",Right "f32"),("t\8321\8323",Right "f32"),("t\8321\8324",Right "f32"),("t\8321\8325",Right "f32"),("t\8321\8326",Right "f32"),("num\8321\8327",Right "f32"),("num\8323\8322",Right "f32"),("t\8323\8323",Right "f32"),("t\8323\8324",Right "f32"),("t\8323\8325",Right "f32"),("num\8323\8326",Right "f32")])

# TySolve.solve
## constraints
"t\8321" ~ "#keydown {key: i32} | #keyup {key: i32} | #mouse {buttons: i32, x: i32, y: i32} | #step f32 | #wheel {dx: i32, dy: i32}"
"t\8320" ~ "i32"
"{eye: {a: f32, b: f32, pos: {x: f32, y: f32, z: f32}}, forward_sgn: i32, fov: i32, height: i64, limit: i32, sideway_sgn: i32, time: f32, width: i64}" ~ "{eye: {a: f32, b: f32, pos: {x: f32, y: f32, z: f32}}, forward_sgn: i32, fov: i32, height: i64, limit: i32, sideway_sgn: i32, time: f32, width: i64}"
"t\8327" ~ "#keydown {key: i32} | #keyup {key: i32} | #mouse {buttons: i32, x: i32, y: i32} | #step f32 | #wheel {dx: i32, dy: i32}"
"t\8326" ~ "i32"
"{eye: {a: f32, b: f32, pos: {x: f32, y: f32, z: f32}}, forward_sgn: i32, fov: i32, height: i64, limit: i32, sideway_sgn: i32, time: f32, width: i64}" ~ "{eye: {a: f32, b: f32, pos: {x: f32, y: f32, z: f32}}, forward_sgn: i32, fov: i32, height: i64, limit: i32, sideway_sgn: i32, time: f32, width: i64}"
"t\8321\8323" ~ "#keydown {key: i32} | #keyup {key: i32} | #mouse {buttons: i32, x: i32, y: i32} | #step f32 | #wheel {dx: i32, dy: i32}"
"{eye: {a: f32, b: f32, pos: {x: f32, y: f32, z: f32}}, forward_sgn: i32, fov: i32, height: i64, limit: i32, sideway_sgn: i32, time: f32, width: i64}" ~ "t\8321\8326"
"kt\8321\8325" ~ "t\8321\8324"
"t\8321\8322" ~ "t\8321\8324"
"{eye: {a: f32, b: f32, pos: {x: f32, y: f32, z: f32}}, forward_sgn: i32, fov: i32, height: i64, limit: i32, sideway_sgn: i32, time: f32, width: i64}" ~ "ft\8322\8321"
"{eye: {a: f32, b: f32, pos: {x: f32, y: f32, z: f32}}, forward_sgn: i32, fov: i32, height: i64, limit: i32, sideway_sgn: i32, time: f32, width: i64}" ~ "t\8322\8327"
"kt\8322\8326" ~ "t\8322\8329"
"{eye: {a: f32, b: f32, pos: {x: f32, y: f32, z: f32}}, forward_sgn: i32, fov: i32, height: i64, limit: i32, sideway_sgn: i32, time: f32, width: i64}" ~ "t\8323\8321"
"{eye: {a: f32, b: f32, pos: {x: f32, y: f32, z: f32}}, forward_sgn: i32, fov: i32, height: i64, limit: i32, sideway_sgn: i32, time: f32, width: i64}" ~ "t\8323\8323"
"t\8321\8322" ~ "f32"
"kt\8323\8320" ~ "{a: f32, b: f32, pos: {x: f32, y: f32, z: f32}}"
"kt\8323\8322" ~ "i32"
"t\8324\8320" ~ "{x: f32, y: f32, z: f32}"
"{x: f32, y: f32, z: f32}" ~ "{x: f32, y: f32, z: f32}"
"kt\8322\8328" ~ "a\8322\8324"
"t\8324\8320 -> {x: f32, y: f32, z: f32}" ~ "a\8322\8324 -> b\8322\8325"
"{eye: {a: f32, b: f32, pos: {x: f32, y: f32, z: f32}}, forward_sgn: i32, fov: i32, height: i64, limit: i32, sideway_sgn: i32, time: f32, width: i64}" ~ "t\8325\8320"
"{eye: {a: f32, b: f32, pos: {x: f32, y: f32, z: f32}}, forward_sgn: i32, fov: i32, height: i64, limit: i32, sideway_sgn: i32, time: f32, width: i64}" ~ "t\8325\8322"
"t\8321\8322" ~ "f32"
"kt\8324\8329" ~ "{a: f32, b: f32, pos: {x: f32, y: f32, z: f32}}"
"kt\8325\8321" ~ "i32"
"t\8325\8329" ~ "{x: f32, y: f32, z: f32}"
"{x: f32, y: f32, z: f32}" ~ "{x: f32, y: f32, z: f32}"
"b\8322\8325" ~ "a\8322\8322"
"t\8325\8329 -> {x: f32, y: f32, z: f32}" ~ "a\8322\8322 -> b\8322\8323"
"ft\8326\8328" ~ "ft\8327\8320"
"{eye: {a: f32, b: f32, pos: {x: f32, y: f32, z: f32}}, forward_sgn: i32, fov: i32, height: i64, limit: i32, sideway_sgn: i32, time: f32, width: i64}" ~ "rt\8326\8329"
"t\8327\8324" ~ "#keydown {key: i32} | #keyup {key: i32} | #mouse {buttons: i32, x: i32, y: i32} | #step f32 | #wheel {dx: i32, dy: i32}"
"t\8327\8321" ~ "t\8327\8325"
"num\8327\8326" ~ "t\8327\8325"
"{eye: {a: f32, b: f32, pos: {x: f32, y: f32, z: f32}}, forward_sgn: i32, fov: i32, height: i64, limit: i32, sideway_sgn: i32, time: f32, width: i64}" ~ "t\8328\8323"
"kt\8328\8322" ~ "t\8328\8325"
"t\8327\8322" ~ "i32"
"{eye: {a: f32, b: f32, pos: {x: f32, y: f32, z: f32}}, forward_sgn: i32, fov: i32, height: i64, limit: i32, sideway_sgn: i32, time: f32, width: i64}" ~ "t\8329\8320"
"kt\8328\8329" ~ "i64"
"f32" ~ "t\8328\8326"
"f32" ~ "t\8328\8326"
"kt\8328\8324" ~ "t\8328\8321"
"t\8328\8326" ~ "t\8328\8321"
"ft\8321\8320\8321" ~ "ft\8321\8320\8323"
"{eye: {a: f32, b: f32, pos: {x: f32, y: f32, z: f32}}, forward_sgn: i32, fov: i32, height: i64, limit: i32, sideway_sgn: i32, time: f32, width: i64}" ~ "rt\8321\8320\8322"
"{eye: {a: f32, b: f32, pos: {x: f32, y: f32, z: f32}}, forward_sgn: i32, fov: i32, height: i64, limit: i32, sideway_sgn: i32, time: f32, width: i64}" ~ "t\8321\8320\8326"
"kt\8321\8320\8325" ~ "t\8321\8320\8328"
"t\8327\8323" ~ "i32"
"{eye: {a: f32, b: f32, pos: {x: f32, y: f32, z: f32}}, forward_sgn: i32, fov: i32, height: i64, limit: i32, sideway_sgn: i32, time: f32, width: i64}" ~ "t\8321\8321\8323"
"kt\8321\8321\8322" ~ "i64"
"f32" ~ "t\8321\8320\8329"
"f32" ~ "t\8321\8320\8329"
"kt\8321\8320\8327" ~ "t\8321\8320\8324"
"t\8321\8320\8329" ~ "t\8321\8320\8324"
"t\8321\8322\8326" ~ "f32"
"f32" ~ "t\8321\8322\8325"
"num\8321\8322\8327" ~ "t\8321\8322\8325"
"t\8321\8322\8325" ~ "t\8321\8322\8324"
"float\8321\8323\8322" ~ "t\8321\8322\8324"
"t\8321\8320\8324" ~ "f32"
"t\8321\8322\8324" ~ "f32"
"f32" ~ "t\8321\8324\8322"
"num\8321\8324\8323" ~ "t\8321\8324\8322"
"t\8321\8324\8322" ~ "t\8321\8324\8321"
"float\8321\8324\8328" ~ "t\8321\8324\8321"
"f32" ~ "f32"
"t\8321\8324\8321" ~ "f32"
"ft\8321\8325\8327" ~ "ft\8321\8325\8329"
"{eye: {a: f32, b: f32, pos: {x: f32, y: f32, z: f32}}, forward_sgn: i32, fov: i32, height: i64, limit: i32, sideway_sgn: i32, time: f32, width: i64}" ~ "rt\8321\8325\8328"
"bool" ~ "bool"
"{eye: {a: f32, b: f32, pos: {x: f32, y: f32, z: f32}}, forward_sgn: i32, fov: i32, height: i64, limit: i32, sideway_sgn: i32, time: f32, width: i64}" ~ "if_t\8321\8326\8320"
"{eye: {a: f32, b: f32, pos: {x: f32, y: f32, z: f32}}, forward_sgn: i32, fov: i32, height: i64, limit: i32, sideway_sgn: i32, time: f32, width: i64}" ~ "if_t\8321\8326\8320"
"t\8321\8326\8321" ~ "#keydown {key: i32} | #keyup {key: i32} | #mouse {buttons: i32, x: i32, y: i32} | #step f32 | #wheel {dx: i32, dy: i32}"
"if_t\8321\8326\8320" ~ "{eye: {a: f32, b: f32, pos: {x: f32, y: f32, z: f32}}, forward_sgn: i32, fov: i32, height: i64, limit: i32, sideway_sgn: i32, time: f32, width: i64}"
"{eye: {a: f32, b: f32, pos: {x: f32, y: f32, z: f32}}, forward_sgn: i32, fov: i32, height: i64, limit: i32, sideway_sgn: i32, time: f32, width: i64}" ~ "if_t\8321\8326\8320"
"{eye: {a: f32, b: f32, pos: {x: f32, y: f32, z: f32}}, forward_sgn: i32, fov: i32, height: i64, limit: i32, sideway_sgn: i32, time: f32, width: i64}" ~ "{eye: {a: f32, b: f32, pos: {x: f32, y: f32, z: f32}}, forward_sgn: i32, fov: i32, height: i64, limit: i32, sideway_sgn: i32, time: f32, width: i64}"
"{eye: {a: f32, b: f32, pos: {x: f32, y: f32, z: f32}}, forward_sgn: i32, fov: i32, height: i64, limit: i32, sideway_sgn: i32, time: f32, width: i64}" ~ "{eye: {a: f32, b: f32, pos: {x: f32, y: f32, z: f32}}, forward_sgn: i32, fov: i32, height: i64, limit: i32, sideway_sgn: i32, time: f32, width: i64}"
"match_t\8321\8326\8322" ~ "{eye: {a: f32, b: f32, pos: {x: f32, y: f32, z: f32}}, forward_sgn: i32, fov: i32, height: i64, limit: i32, sideway_sgn: i32, time: f32, width: i64}"
## typarams
mempty
## tyvars
[("t\8320",(3,TyVarFree NoLoc Lifted)),("t\8321",(3,TyVarSum NoLoc (fromList [(Name "keydown",[Scalar (Record (fromList [(Name "key",Scalar (TypeVar NoUniqueness (QualName {qualQuals = [], qualLeaf = VName (Name "t\8320") 15430}) []))]))])]))),("t\8326",(3,TyVarFree NoLoc Lifted)),("t\8327",(3,TyVarSum NoLoc (fromList [(Name "keyup",[Scalar (Record (fromList [(Name "key",Scalar (TypeVar NoUniqueness (QualName {qualQuals = [], qualLeaf = VName (Name "t\8326") 15437}) []))]))])]))),("t\8321\8322",(3,TyVarFree NoLoc Lifted)),("t\8321\8323",(3,TyVarSum NoLoc (fromList [(Name "step",[Scalar (TypeVar NoUniqueness (QualName {qualQuals = [], qualLeaf = VName (Name "t\8321\8322") 15444}) [])])]))),("t\8321\8324",(3,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("kt\8321\8325",(3,TyVarFree NoLoc Lifted)),("t\8321\8326",(3,TyVarRecord NoLoc (fromList [(Name "time",Scalar (TypeVar NoUniqueness (QualName {qualQuals = [], qualLeaf = VName (Name "kt\8321\8325") 15447}) []))]))),("ft\8322\8321",(3,TyVarRecord NoLoc (fromList [(Name "time",Scalar (TypeVar NoUniqueness (QualName {qualQuals = [], qualLeaf = VName (Name "t\8321\8324") 15446}) []))]))),("a\8322\8322",(3,TyVarFree NoLoc Lifted)),("b\8322\8323",(3,TyVarFree NoLoc Lifted)),("a\8322\8324",(3,TyVarFree NoLoc Lifted)),("b\8322\8325",(3,TyVarFree NoLoc Lifted)),("kt\8322\8326",(3,TyVarFree NoLoc Lifted)),("t\8322\8327",(3,TyVarRecord NoLoc (fromList [(Name "eye",Scalar (TypeVar NoUniqueness (QualName {qualQuals = [], qualLeaf = VName (Name "kt\8322\8326") 15459}) []))]))),("kt\8322\8328",(3,TyVarFree NoLoc Lifted)),("t\8322\8329",(3,TyVarRecord NoLoc (fromList [(Name "pos",Scalar (TypeVar NoUniqueness (QualName {qualQuals = [], qualLeaf = VName (Name "kt\8322\8328") 15461}) []))]))),("kt\8323\8320",(3,TyVarFree NoLoc Lifted)),("t\8323\8321",(3,TyVarRecord NoLoc (fromList [(Name "eye",Scalar (TypeVar NoUniqueness (QualName {qualQuals = [], qualLeaf = VName (Name "kt\8323\8320") 15463}) []))]))),("kt\8323\8322",(3,TyVarFree NoLoc Lifted)),("t\8323\8323",(3,TyVarRecord NoLoc (fromList [(Name "forward_sgn",Scalar (TypeVar NoUniqueness (QualName {qualQuals = [], qualLeaf = VName (Name "kt\8323\8322") 15465}) []))]))),("t\8324\8320",(3,TyVarFree NoLoc Lifted)),("kt\8324\8329",(3,TyVarFree NoLoc Lifted)),("t\8325\8320",(3,TyVarRecord NoLoc (fromList [(Name "eye",Scalar (TypeVar NoUniqueness (QualName {qualQuals = [], qualLeaf = VName (Name "kt\8324\8329") 15486}) []))]))),("kt\8325\8321",(3,TyVarFree NoLoc Lifted)),("t\8325\8322",(3,TyVarRecord NoLoc (fromList [(Name "sideway_sgn",Scalar (TypeVar NoUniqueness (QualName {qualQuals = [], qualLeaf = VName (Name "kt\8325\8321") 15488}) []))]))),("t\8325\8329",(3,TyVarFree NoLoc Lifted)),("ft\8326\8328",(3,TyVarFree NoLoc Lifted)),("rt\8326\8329",(3,TyVarRecord NoLoc (fromList [(Name "eye",Scalar (TypeVar NoUniqueness (QualName {qualQuals = [], qualLeaf = VName (Name "ft\8326\8328") 15509}) []))]))),("ft\8327\8320",(3,TyVarRecord NoLoc (fromList [(Name "pos",Scalar (TypeVar NoUniqueness (QualName {qualQuals = [], qualLeaf = VName (Name "b\8322\8323") 15456}) []))]))),("t\8327\8321",(3,TyVarFree NoLoc Lifted)),("t\8327\8322",(3,TyVarFree NoLoc Lifted)),("t\8327\8323",(3,TyVarFree NoLoc Lifted)),("t\8327\8324",(3,TyVarSum NoLoc (fromList [(Name "mouse",[Scalar (Record (fromList [(Name "buttons",Scalar (TypeVar NoUniqueness (QualName {qualQuals = [], qualLeaf = VName (Name "t\8327\8321") 15512}) [])),(Name "x",Scalar (TypeVar NoUniqueness (QualName {qualQuals = [], qualLeaf = VName (Name "t\8327\8322") 15513}) [])),(Name "y",Scalar (TypeVar NoUniqueness (QualName {qualQuals = [], qualLeaf = VName (Name "t\8327\8323") 15514}) []))]))])]))),("t\8327\8325",(3,TyVarFree NoLoc Unlifted)),("num\8327\8326",(3,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8328\8321",(3,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("kt\8328\8322",(3,TyVarFree NoLoc Lifted)),("t\8328\8323",(3,TyVarRecord NoLoc (fromList [(Name "eye",Scalar (TypeVar NoUniqueness (QualName {qualQuals = [], qualLeaf = VName (Name "kt\8328\8322") 15524}) []))]))),("kt\8328\8324",(3,TyVarFree NoLoc Lifted)),("t\8328\8325",(3,TyVarRecord NoLoc (fromList [(Name "a",Scalar (TypeVar NoUniqueness (QualName {qualQuals = [], qualLeaf = VName (Name "kt\8328\8324") 15526}) []))]))),("t\8328\8326",(3,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("kt\8328\8329",(3,TyVarFree NoLoc Lifted)),("t\8329\8320",(3,TyVarRecord NoLoc (fromList [(Name "width",Scalar (TypeVar NoUniqueness (QualName {qualQuals = [], qualLeaf = VName (Name "kt\8328\8329") 15532}) []))]))),("ft\8321\8320\8321",(3,TyVarFree NoLoc Lifted)),("rt\8321\8320\8322",(3,TyVarRecord NoLoc (fromList [(Name "eye",Scalar (TypeVar NoUniqueness (QualName {qualQuals = [], qualLeaf = VName (Name "ft\8321\8320\8321") 15547}) []))]))),("ft\8321\8320\8323",(3,TyVarRecord NoLoc (fromList [(Name "a",Scalar (TypeVar NoUniqueness (QualName {qualQuals = [], qualLeaf = VName (Name "t\8328\8321") 15523}) []))]))),("t\8321\8320\8324",(3,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("kt\8321\8320\8325",(3,TyVarFree NoLoc Lifted)),("t\8321\8320\8326",(3,TyVarRecord NoLoc (fromList [(Name "eye",Scalar (TypeVar NoUniqueness (QualName {qualQuals = [], qualLeaf = VName (Name "kt\8321\8320\8325") 15551}) []))]))),("kt\8321\8320\8327",(3,TyVarFree NoLoc Lifted)),("t\8321\8320\8328",(3,TyVarRecord NoLoc (fromList [(Name "b",Scalar (TypeVar NoUniqueness (QualName {qualQuals = [], qualLeaf = VName (Name "kt\8321\8320\8327") 15553}) []))]))),("t\8321\8320\8329",(3,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("kt\8321\8321\8322",(3,TyVarFree NoLoc Lifted)),("t\8321\8321\8323",(3,TyVarRecord NoLoc (fromList [(Name "height",Scalar (TypeVar NoUniqueness (QualName {qualQuals = [], qualLeaf = VName (Name "kt\8321\8321\8322") 15559}) []))]))),("t\8321\8322\8324",(3,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8321\8322\8325",(3,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8321\8322\8326",(3,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("num\8321\8322\8327",(3,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("float\8321\8323\8322",(3,TyVarPrim NoLoc [FloatType Float16,FloatType Float32,FloatType Float64])),("t\8321\8324\8321",(3,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8321\8324\8322",(3,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("num\8321\8324\8323",(3,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("float\8321\8324\8328",(3,TyVarPrim NoLoc [FloatType Float16,FloatType Float32,FloatType Float64])),("ft\8321\8325\8327",(3,TyVarFree NoLoc Lifted)),("rt\8321\8325\8328",(3,TyVarRecord NoLoc (fromList [(Name "eye",Scalar (TypeVar NoUniqueness (QualName {qualQuals = [], qualLeaf = VName (Name "ft\8321\8325\8327") 15613}) []))]))),("ft\8321\8325\8329",(3,TyVarRecord NoLoc (fromList [(Name "b",Scalar (Prim (FloatType Float32)))]))),("if_t\8321\8326\8320",(3,TyVarFree NoLoc SizeLifted)),("t\8321\8326\8321",(3,TyVarFree NoLoc Lifted)),("match_t\8321\8326\8322",(3,TyVarFree NoLoc SizeLifted))]
## solution
([],[("t\8320",Right "i32"),("t\8321",Right "#keydown {key: i32} | #keyup {key: i32} | #mouse {buttons: i32, x: i32, y: i32} | #step f32 | #wheel {dx: i32, dy: i32}"),("t\8326",Right "i32"),("t\8327",Right "#keydown {key: i32} | #keyup {key: i32} | #mouse {buttons: i32, x: i32, y: i32} | #step f32 | #wheel {dx: i32, dy: i32}"),("t\8321\8322",Right "f32"),("t\8321\8323",Right "#keydown {key: i32} | #keyup {key: i32} | #mouse {buttons: i32, x: i32, y: i32} | #step f32 | #wheel {dx: i32, dy: i32}"),("t\8321\8324",Right "f32"),("kt\8321\8325",Right "f32"),("t\8321\8326",Right "{eye: {a: f32, b: f32, pos: {x: f32, y: f32, z: f32}}, forward_sgn: i32, fov: i32, height: i64, limit: i32, sideway_sgn: i32, time: f32, width: i64}"),("ft\8322\8321",Right "{eye: {a: f32, b: f32, pos: {x: f32, y: f32, z: f32}}, forward_sgn: i32, fov: i32, height: i64, limit: i32, sideway_sgn: i32, time: f32, width: i64}"),("a\8322\8322",Right "{x: f32, y: f32, z: f32}"),("b\8322\8323",Right "{x: f32, y: f32, z: f32}"),("a\8322\8324",Right "{x: f32, y: f32, z: f32}"),("b\8322\8325",Right "{x: f32, y: f32, z: f32}"),("kt\8322\8326",Right "{a: f32, b: f32, pos: {x: f32, y: f32, z: f32}}"),("t\8322\8327",Right "{eye: {a: f32, b: f32, pos: {x: f32, y: f32, z: f32}}, forward_sgn: i32, fov: i32, height: i64, limit: i32, sideway_sgn: i32, time: f32, width: i64}"),("kt\8322\8328",Right "{x: f32, y: f32, z: f32}"),("t\8322\8329",Right "{a: f32, b: f32, pos: {x: f32, y: f32, z: f32}}"),("kt\8323\8320",Right "{a: f32, b: f32, pos: {x: f32, y: f32, z: f32}}"),("t\8323\8321",Right "{eye: {a: f32, b: f32, pos: {x: f32, y: f32, z: f32}}, forward_sgn: i32, fov: i32, height: i64, limit: i32, sideway_sgn: i32, time: f32, width: i64}"),("kt\8323\8322",Right "i32"),("t\8323\8323",Right "{eye: {a: f32, b: f32, pos: {x: f32, y: f32, z: f32}}, forward_sgn: i32, fov: i32, height: i64, limit: i32, sideway_sgn: i32, time: f32, width: i64}"),("t\8324\8320",Right "{x: f32, y: f32, z: f32}"),("kt\8324\8329",Right "{a: f32, b: f32, pos: {x: f32, y: f32, z: f32}}"),("t\8325\8320",Right "{eye: {a: f32, b: f32, pos: {x: f32, y: f32, z: f32}}, forward_sgn: i32, fov: i32, height: i64, limit: i32, sideway_sgn: i32, time: f32, width: i64}"),("kt\8325\8321",Right "i32"),("t\8325\8322",Right "{eye: {a: f32, b: f32, pos: {x: f32, y: f32, z: f32}}, forward_sgn: i32, fov: i32, height: i64, limit: i32, sideway_sgn: i32, time: f32, width: i64}"),("t\8325\8329",Right "{x: f32, y: f32, z: f32}"),("ft\8326\8328",Right "{a: f32, b: f32, pos: {x: f32, y: f32, z: f32}}"),("rt\8326\8329",Right "{eye: {a: f32, b: f32, pos: {x: f32, y: f32, z: f32}}, forward_sgn: i32, fov: i32, height: i64, limit: i32, sideway_sgn: i32, time: f32, width: i64}"),("ft\8327\8320",Right "{a: f32, b: f32, pos: {x: f32, y: f32, z: f32}}"),("t\8327\8321",Right "i32"),("t\8327\8322",Right "i32"),("t\8327\8323",Right "i32"),("t\8327\8324",Right "#keydown {key: i32} | #keyup {key: i32} | #mouse {buttons: i32, x: i32, y: i32} | #step f32 | #wheel {dx: i32, dy: i32}"),("t\8327\8325",Right "i32"),("num\8327\8326",Right "i32"),("t\8328\8321",Right "f32"),("kt\8328\8322",Right "{a: f32, b: f32, pos: {x: f32, y: f32, z: f32}}"),("t\8328\8323",Right "{eye: {a: f32, b: f32, pos: {x: f32, y: f32, z: f32}}, forward_sgn: i32, fov: i32, height: i64, limit: i32, sideway_sgn: i32, time: f32, width: i64}"),("kt\8328\8324",Right "f32"),("t\8328\8325",Right "{a: f32, b: f32, pos: {x: f32, y: f32, z: f32}}"),("t\8328\8326",Right "f32"),("kt\8328\8329",Right "i64"),("t\8329\8320",Right "{eye: {a: f32, b: f32, pos: {x: f32, y: f32, z: f32}}, forward_sgn: i32, fov: i32, height: i64, limit: i32, sideway_sgn: i32, time: f32, width: i64}"),("ft\8321\8320\8321",Right "{a: f32, b: f32, pos: {x: f32, y: f32, z: f32}}"),("rt\8321\8320\8322",Right "{eye: {a: f32, b: f32, pos: {x: f32, y: f32, z: f32}}, forward_sgn: i32, fov: i32, height: i64, limit: i32, sideway_sgn: i32, time: f32, width: i64}"),("ft\8321\8320\8323",Right "{a: f32, b: f32, pos: {x: f32, y: f32, z: f32}}"),("t\8321\8320\8324",Right "f32"),("kt\8321\8320\8325",Right "{a: f32, b: f32, pos: {x: f32, y: f32, z: f32}}"),("t\8321\8320\8326",Right "{eye: {a: f32, b: f32, pos: {x: f32, y: f32, z: f32}}, forward_sgn: i32, fov: i32, height: i64, limit: i32, sideway_sgn: i32, time: f32, width: i64}"),("kt\8321\8320\8327",Right "f32"),("t\8321\8320\8328",Right "{a: f32, b: f32, pos: {x: f32, y: f32, z: f32}}"),("t\8321\8320\8329",Right "f32"),("kt\8321\8321\8322",Right "i64"),("t\8321\8321\8323",Right "{eye: {a: f32, b: f32, pos: {x: f32, y: f32, z: f32}}, forward_sgn: i32, fov: i32, height: i64, limit: i32, sideway_sgn: i32, time: f32, width: i64}"),("t\8321\8322\8324",Right "f32"),("t\8321\8322\8325",Right "f32"),("t\8321\8322\8326",Right "f32"),("num\8321\8322\8327",Right "f32"),("float\8321\8323\8322",Right "f32"),("t\8321\8324\8321",Right "f32"),("t\8321\8324\8322",Right "f32"),("num\8321\8324\8323",Right "f32"),("float\8321\8324\8328",Right "f32"),("ft\8321\8325\8327",Right "{a: f32, b: f32, pos: {x: f32, y: f32, z: f32}}"),("rt\8321\8325\8328",Right "{eye: {a: f32, b: f32, pos: {x: f32, y: f32, z: f32}}, forward_sgn: i32, fov: i32, height: i64, limit: i32, sideway_sgn: i32, time: f32, width: i64}"),("ft\8321\8325\8329",Right "{a: f32, b: f32, pos: {x: f32, y: f32, z: f32}}"),("if_t\8321\8326\8320",Right "{eye: {a: f32, b: f32, pos: {x: f32, y: f32, z: f32}}, forward_sgn: i32, fov: i32, height: i64, limit: i32, sideway_sgn: i32, time: f32, width: i64}"),("t\8321\8326\8321",Right "#keydown {key: i32} | #keyup {key: i32} | #mouse {buttons: i32, x: i32, y: i32} | #step f32 | #wheel {dx: i32, dy: i32}"),("match_t\8321\8326\8322",Right "{eye: {a: f32, b: f32, pos: {x: f32, y: f32, z: f32}}, forward_sgn: i32, fov: i32, height: i64, limit: i32, sideway_sgn: i32, time: f32, width: i64}")])

# TySolve.solve
## constraints
"{eye: {a: f32, b: f32, pos: {x: f32, y: f32, z: f32}}, forward_sgn: i32, fov: i32, height: i64, limit: i32, sideway_sgn: i32, time: f32, width: i64}" ~ "t\8321"
"kt\8320" ~ "i64"
"{eye: {a: f32, b: f32, pos: {x: f32, y: f32, z: f32}}, forward_sgn: i32, fov: i32, height: i64, limit: i32, sideway_sgn: i32, time: f32, width: i64}" ~ "t\8325"
"kt\8324" ~ "i64"
"{eye: {a: f32, b: f32, pos: {x: f32, y: f32, z: f32}}, forward_sgn: i32, fov: i32, height: i64, limit: i32, sideway_sgn: i32, time: f32, width: i64}" ~ "t\8329"
"{eye: {a: f32, b: f32, pos: {x: f32, y: f32, z: f32}}, forward_sgn: i32, fov: i32, height: i64, limit: i32, sideway_sgn: i32, time: f32, width: i64}" ~ "t\8321\8321"
"kt\8321\8320" ~ "t\8321\8323"
"kt\8321\8322" ~ "t\8321\8325"
"{eye: {a: f32, b: f32, pos: {x: f32, y: f32, z: f32}}, forward_sgn: i32, fov: i32, height: i64, limit: i32, sideway_sgn: i32, time: f32, width: i64}" ~ "t\8321\8327"
"kt\8321\8326" ~ "t\8321\8329"
"kt\8321\8328" ~ "t\8322\8321"
"{eye: {a: f32, b: f32, pos: {x: f32, y: f32, z: f32}}, forward_sgn: i32, fov: i32, height: i64, limit: i32, sideway_sgn: i32, time: f32, width: i64}" ~ "t\8322\8323"
"kt\8322\8322" ~ "t\8322\8325"
"kt\8322\8324" ~ "t\8322\8327"
"{eye: {a: f32, b: f32, pos: {x: f32, y: f32, z: f32}}, forward_sgn: i32, fov: i32, height: i64, limit: i32, sideway_sgn: i32, time: f32, width: i64}" ~ "t\8322\8329"
"kt\8322\8328" ~ "t\8323\8321"
"{eye: {a: f32, b: f32, pos: {x: f32, y: f32, z: f32}}, forward_sgn: i32, fov: i32, height: i64, limit: i32, sideway_sgn: i32, time: f32, width: i64}" ~ "t\8323\8323"
"kt\8323\8322" ~ "t\8323\8325"
"{eye: {a: f32, b: f32, pos: {x: f32, y: f32, z: f32}}, forward_sgn: i32, fov: i32, height: i64, limit: i32, sideway_sgn: i32, time: f32, width: i64}" ~ "t\8323\8327"
"{eye: {a: f32, b: f32, pos: {x: f32, y: f32, z: f32}}, forward_sgn: i32, fov: i32, height: i64, limit: i32, sideway_sgn: i32, time: f32, width: i64}" ~ "t\8323\8329"
"i32" ~ "i32"
"i32" ~ "i32"
"kt\8328" ~ "i32"
"kt\8321\8324" ~ "f32"
"kt\8322\8320" ~ "f32"
"kt\8322\8326" ~ "f32"
"kt\8323\8320" ~ "f32"
"kt\8323\8324" ~ "f32"
"kt\8323\8326" ~ "i32"
"kt\8323\8328" ~ "f32"
"[][]u32" ~ "[][]u32"
## typarams
mempty
## tyvars
[("kt\8320",(2,TyVarFree NoLoc Lifted)),("t\8321",(2,TyVarRecord NoLoc (fromList [(Name "width",Scalar (TypeVar NoUniqueness (QualName {qualQuals = [], qualLeaf = VName (Name "kt\8320") 15626}) []))]))),("kt\8324",(2,TyVarFree NoLoc Lifted)),("t\8325",(2,TyVarRecord NoLoc (fromList [(Name "height",Scalar (TypeVar NoUniqueness (QualName {qualQuals = [], qualLeaf = VName (Name "kt\8324") 15631}) []))]))),("kt\8328",(2,TyVarFree NoLoc Lifted)),("t\8329",(2,TyVarRecord NoLoc (fromList [(Name "fov",Scalar (TypeVar NoUniqueness (QualName {qualQuals = [], qualLeaf = VName (Name "kt\8328") 15636}) []))]))),("kt\8321\8320",(2,TyVarFree NoLoc Lifted)),("t\8321\8321",(2,TyVarRecord NoLoc (fromList [(Name "eye",Scalar (TypeVar NoUniqueness (QualName {qualQuals = [], qualLeaf = VName (Name "kt\8321\8320") 15638}) []))]))),("kt\8321\8322",(2,TyVarFree NoLoc Lifted)),("t\8321\8323",(2,TyVarRecord NoLoc (fromList [(Name "pos",Scalar (TypeVar NoUniqueness (QualName {qualQuals = [], qualLeaf = VName (Name "kt\8321\8322") 15640}) []))]))),("kt\8321\8324",(2,TyVarFree NoLoc Lifted)),("t\8321\8325",(2,TyVarRecord NoLoc (fromList [(Name "x",Scalar (TypeVar NoUniqueness (QualName {qualQuals = [], qualLeaf = VName (Name "kt\8321\8324") 15642}) []))]))),("kt\8321\8326",(2,TyVarFree NoLoc Lifted)),("t\8321\8327",(2,TyVarRecord NoLoc (fromList [(Name "eye",Scalar (TypeVar NoUniqueness (QualName {qualQuals = [], qualLeaf = VName (Name "kt\8321\8326") 15644}) []))]))),("kt\8321\8328",(2,TyVarFree NoLoc Lifted)),("t\8321\8329",(2,TyVarRecord NoLoc (fromList [(Name "pos",Scalar (TypeVar NoUniqueness (QualName {qualQuals = [], qualLeaf = VName (Name "kt\8321\8328") 15646}) []))]))),("kt\8322\8320",(2,TyVarFree NoLoc Lifted)),("t\8322\8321",(2,TyVarRecord NoLoc (fromList [(Name "y",Scalar (TypeVar NoUniqueness (QualName {qualQuals = [], qualLeaf = VName (Name "kt\8322\8320") 15648}) []))]))),("kt\8322\8322",(2,TyVarFree NoLoc Lifted)),("t\8322\8323",(2,TyVarRecord NoLoc (fromList [(Name "eye",Scalar (TypeVar NoUniqueness (QualName {qualQuals = [], qualLeaf = VName (Name "kt\8322\8322") 15650}) []))]))),("kt\8322\8324",(2,TyVarFree NoLoc Lifted)),("t\8322\8325",(2,TyVarRecord NoLoc (fromList [(Name "pos",Scalar (TypeVar NoUniqueness (QualName {qualQuals = [], qualLeaf = VName (Name "kt\8322\8324") 15652}) []))]))),("kt\8322\8326",(2,TyVarFree NoLoc Lifted)),("t\8322\8327",(2,TyVarRecord NoLoc (fromList [(Name "z",Scalar (TypeVar NoUniqueness (QualName {qualQuals = [], qualLeaf = VName (Name "kt\8322\8326") 15654}) []))]))),("kt\8322\8328",(2,TyVarFree NoLoc Lifted)),("t\8322\8329",(2,TyVarRecord NoLoc (fromList [(Name "eye",Scalar (TypeVar NoUniqueness (QualName {qualQuals = [], qualLeaf = VName (Name "kt\8322\8328") 15656}) []))]))),("kt\8323\8320",(2,TyVarFree NoLoc Lifted)),("t\8323\8321",(2,TyVarRecord NoLoc (fromList [(Name "a",Scalar (TypeVar NoUniqueness (QualName {qualQuals = [], qualLeaf = VName (Name "kt\8323\8320") 15658}) []))]))),("kt\8323\8322",(2,TyVarFree NoLoc Lifted)),("t\8323\8323",(2,TyVarRecord NoLoc (fromList [(Name "eye",Scalar (TypeVar NoUniqueness (QualName {qualQuals = [], qualLeaf = VName (Name "kt\8323\8322") 15660}) []))]))),("kt\8323\8324",(2,TyVarFree NoLoc Lifted)),("t\8323\8325",(2,TyVarRecord NoLoc (fromList [(Name "b",Scalar (TypeVar NoUniqueness (QualName {qualQuals = [], qualLeaf = VName (Name "kt\8323\8324") 15662}) []))]))),("kt\8323\8326",(2,TyVarFree NoLoc Lifted)),("t\8323\8327",(2,TyVarRecord NoLoc (fromList [(Name "limit",Scalar (TypeVar NoUniqueness (QualName {qualQuals = [], qualLeaf = VName (Name "kt\8323\8326") 15664}) []))]))),("kt\8323\8328",(2,TyVarFree NoLoc Lifted)),("t\8323\8329",(2,TyVarRecord NoLoc (fromList [(Name "time",Scalar (TypeVar NoUniqueness (QualName {qualQuals = [], qualLeaf = VName (Name "kt\8323\8328") 15666}) []))])))]
## solution
([],[("kt\8320",Right "i64"),("t\8321",Right "{eye: {a: f32, b: f32, pos: {x: f32, y: f32, z: f32}}, forward_sgn: i32, fov: i32, height: i64, limit: i32, sideway_sgn: i32, time: f32, width: i64}"),("kt\8324",Right "i64"),("t\8325",Right "{eye: {a: f32, b: f32, pos: {x: f32, y: f32, z: f32}}, forward_sgn: i32, fov: i32, height: i64, limit: i32, sideway_sgn: i32, time: f32, width: i64}"),("kt\8328",Right "i32"),("t\8329",Right "{eye: {a: f32, b: f32, pos: {x: f32, y: f32, z: f32}}, forward_sgn: i32, fov: i32, height: i64, limit: i32, sideway_sgn: i32, time: f32, width: i64}"),("kt\8321\8320",Right "{a: f32, b: f32, pos: {x: f32, y: f32, z: f32}}"),("t\8321\8321",Right "{eye: {a: f32, b: f32, pos: {x: f32, y: f32, z: f32}}, forward_sgn: i32, fov: i32, height: i64, limit: i32, sideway_sgn: i32, time: f32, width: i64}"),("kt\8321\8322",Right "{x: f32, y: f32, z: f32}"),("t\8321\8323",Right "{a: f32, b: f32, pos: {x: f32, y: f32, z: f32}}"),("kt\8321\8324",Right "f32"),("t\8321\8325",Right "{x: f32, y: f32, z: f32}"),("kt\8321\8326",Right "{a: f32, b: f32, pos: {x: f32, y: f32, z: f32}}"),("t\8321\8327",Right "{eye: {a: f32, b: f32, pos: {x: f32, y: f32, z: f32}}, forward_sgn: i32, fov: i32, height: i64, limit: i32, sideway_sgn: i32, time: f32, width: i64}"),("kt\8321\8328",Right "{x: f32, y: f32, z: f32}"),("t\8321\8329",Right "{a: f32, b: f32, pos: {x: f32, y: f32, z: f32}}"),("kt\8322\8320",Right "f32"),("t\8322\8321",Right "{x: f32, y: f32, z: f32}"),("kt\8322\8322",Right "{a: f32, b: f32, pos: {x: f32, y: f32, z: f32}}"),("t\8322\8323",Right "{eye: {a: f32, b: f32, pos: {x: f32, y: f32, z: f32}}, forward_sgn: i32, fov: i32, height: i64, limit: i32, sideway_sgn: i32, time: f32, width: i64}"),("kt\8322\8324",Right "{x: f32, y: f32, z: f32}"),("t\8322\8325",Right "{a: f32, b: f32, pos: {x: f32, y: f32, z: f32}}"),("kt\8322\8326",Right "f32"),("t\8322\8327",Right "{x: f32, y: f32, z: f32}"),("kt\8322\8328",Right "{a: f32, b: f32, pos: {x: f32, y: f32, z: f32}}"),("t\8322\8329",Right "{eye: {a: f32, b: f32, pos: {x: f32, y: f32, z: f32}}, forward_sgn: i32, fov: i32, height: i64, limit: i32, sideway_sgn: i32, time: f32, width: i64}"),("kt\8323\8320",Right "f32"),("t\8323\8321",Right "{a: f32, b: f32, pos: {x: f32, y: f32, z: f32}}"),("kt\8323\8322",Right "{a: f32, b: f32, pos: {x: f32, y: f32, z: f32}}"),("t\8323\8323",Right "{eye: {a: f32, b: f32, pos: {x: f32, y: f32, z: f32}}, forward_sgn: i32, fov: i32, height: i64, limit: i32, sideway_sgn: i32, time: f32, width: i64}"),("kt\8323\8324",Right "f32"),("t\8323\8325",Right "{a: f32, b: f32, pos: {x: f32, y: f32, z: f32}}"),("kt\8323\8326",Right "i32"),("t\8323\8327",Right "{eye: {a: f32, b: f32, pos: {x: f32, y: f32, z: f32}}, forward_sgn: i32, fov: i32, height: i64, limit: i32, sideway_sgn: i32, time: f32, width: i64}"),("kt\8323\8328",Right "f32"),("t\8323\8329",Right "{eye: {a: f32, b: f32, pos: {x: f32, y: f32, z: f32}}, forward_sgn: i32, fov: i32, height: i64, limit: i32, sideway_sgn: i32, time: f32, width: i64}")])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f32" ~ "f32"
"{eye: {a: f32, b: f32, pos: {x: f32, y: f32, z: f32}}, forward_sgn: i32, fov: i32, height: i64, limit: i32, sideway_sgn: i32, time: f32, width: i64}" ~ "t\8323"
"(i32, i32)" ~ "(i32, kt\8322)"
## typarams
mempty
## tyvars
[("kt\8322",(3,TyVarFree NoLoc Lifted)),("t\8323",(3,TyVarRecord NoLoc (fromList [(Name "limit",Scalar (TypeVar NoUniqueness (QualName {qualQuals = [], qualLeaf = VName (Name "kt\8322") 15703}) []))])))]
## solution
([],[("kt\8322",Right "i32"),("t\8323",Right "{eye: {a: f32, b: f32, pos: {x: f32, y: f32, z: f32}}, forward_sgn: i32, fov: i32, height: i64, limit: i32, sideway_sgn: i32, time: f32, width: i64}")])

# TySolve.solve
## constraints
"u32" ~ "a\8320"
## typarams
mempty
## tyvars
[("a\8320",(1,TyVarFree NoLoc Lifted)),("b\8321",(1,TyVarFree NoLoc Lifted))]
## solution
([("b\8321",Lifted)],[("a\8320",Right "u32")])

