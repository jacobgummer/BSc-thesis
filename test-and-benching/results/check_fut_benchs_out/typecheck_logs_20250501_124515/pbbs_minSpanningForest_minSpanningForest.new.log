# TySolve.solve
## constraints
"[]a" ~ "[]a\8320"
"[]b" ~ "[]b\8321"
"[](a, b)" ~ "[](a\8320, b\8321)"
## typarams
["(\"a\",(0,Unlifted,NoLoc))","(\"b\",(0,Unlifted,NoLoc))"]
## tyvars
[("a\8320",(3,TyVarFree NoLoc Unlifted)),("b\8321",(3,TyVarFree NoLoc Unlifted))]
## solution
([],[("a\8320",Right "a"),("b\8321",Right "b")])

# TySolve.solve
## constraints
"[]a" ~ "[]a\8320"
"[]b" ~ "[]b\8321"
"[](a, b)" ~ "[](a\8320, b\8321)"
## typarams
["(\"a\",(0,Unlifted,NoLoc))","(\"b\",(0,Unlifted,NoLoc))"]
## tyvars
[("a\8320",(3,TyVarFree NoLoc Unlifted)),("b\8321",(3,TyVarFree NoLoc Unlifted))]
## solution
([],[("a\8320",Right "a"),("b\8321",Right "b")])

# TySolve.solve
## constraints
"[]b" ~ "[]a\8325"
"[]c" ~ "[]b\8326"
"[]a" ~ "[]a\8323"
"[](a\8325, b\8326)" ~ "[]b\8324"
"[](a\8323, b\8324)" ~ "[](t\8320, (t\8321, t\8322))"
"[](a, b, c)" ~ "[](t\8320, t\8321, t\8322)"
## typarams
["(\"a\",(0,Unlifted,NoLoc))","(\"b\",(0,Unlifted,NoLoc))","(\"c\",(0,Unlifted,NoLoc))"]
## tyvars
[("t\8320",(5,TyVarFree NoLoc Lifted)),("t\8321",(5,TyVarFree NoLoc Lifted)),("t\8322",(5,TyVarFree NoLoc Lifted)),("a\8323",(4,TyVarFree NoLoc Unlifted)),("b\8324",(4,TyVarFree NoLoc Unlifted)),("a\8325",(4,TyVarFree NoLoc Unlifted)),("b\8326",(4,TyVarFree NoLoc Unlifted))]
## solution
([],[("t\8320",Right "a"),("t\8321",Right "b"),("t\8322",Right "c"),("a\8323",Right "a"),("b\8324",Right "(b, c)"),("a\8325",Right "b"),("b\8326",Right "c")])

# TySolve.solve
## constraints
"[]b" ~ "[]a\8326"
"[]c" ~ "[]b\8327"
"[]d" ~ "[]c\8328"
"[]a" ~ "[]a\8324"
"[](a\8326, b\8327, c\8328)" ~ "[]b\8325"
"[](a\8324, b\8325)" ~ "[](t\8320, (t\8321, t\8322, t\8323))"
"[](a, b, c, d)" ~ "[](t\8320, t\8321, t\8322, t\8323)"
## typarams
["(\"a\",(0,Unlifted,NoLoc))","(\"b\",(0,Unlifted,NoLoc))","(\"c\",(0,Unlifted,NoLoc))","(\"d\",(0,Unlifted,NoLoc))"]
## tyvars
[("t\8320",(6,TyVarFree NoLoc Lifted)),("t\8321",(6,TyVarFree NoLoc Lifted)),("t\8322",(6,TyVarFree NoLoc Lifted)),("t\8323",(6,TyVarFree NoLoc Lifted)),("a\8324",(5,TyVarFree NoLoc Unlifted)),("b\8325",(5,TyVarFree NoLoc Unlifted)),("a\8326",(5,TyVarFree NoLoc Unlifted)),("b\8327",(5,TyVarFree NoLoc Unlifted)),("c\8328",(5,TyVarFree NoLoc Unlifted))]
## solution
([],[("t\8320",Right "a"),("t\8321",Right "b"),("t\8322",Right "c"),("t\8323",Right "d"),("a\8324",Right "a"),("b\8325",Right "(b, c, d)"),("a\8326",Right "b"),("b\8327",Right "c"),("c\8328",Right "d")])

# TySolve.solve
## constraints
"[]b" ~ "[]a\8327"
"[]c" ~ "[]b\8328"
"[]d" ~ "[]c\8329"
"[]e" ~ "[]d\8321\8320"
"[]a" ~ "[]a\8325"
"[](a\8327, b\8328, c\8329, d\8321\8320)" ~ "[]b\8326"
"[](a\8325, b\8326)" ~ "[](t\8320, (t\8321, t\8322, t\8323, t\8324))"
"[](a, b, c, d, e)" ~ "[](t\8320, t\8321, t\8322, t\8323, t\8324)"
## typarams
["(\"a\",(0,Unlifted,NoLoc))","(\"b\",(0,Unlifted,NoLoc))","(\"c\",(0,Unlifted,NoLoc))","(\"d\",(0,Unlifted,NoLoc))","(\"e\",(0,Unlifted,NoLoc))"]
## tyvars
[("t\8320",(7,TyVarFree NoLoc Lifted)),("t\8321",(7,TyVarFree NoLoc Lifted)),("t\8322",(7,TyVarFree NoLoc Lifted)),("t\8323",(7,TyVarFree NoLoc Lifted)),("t\8324",(7,TyVarFree NoLoc Lifted)),("a\8325",(6,TyVarFree NoLoc Unlifted)),("b\8326",(6,TyVarFree NoLoc Unlifted)),("a\8327",(6,TyVarFree NoLoc Unlifted)),("b\8328",(6,TyVarFree NoLoc Unlifted)),("c\8329",(6,TyVarFree NoLoc Unlifted)),("d\8321\8320",(6,TyVarFree NoLoc Unlifted))]
## solution
([],[("t\8320",Right "a"),("t\8321",Right "b"),("t\8322",Right "c"),("t\8323",Right "d"),("t\8324",Right "e"),("a\8325",Right "a"),("b\8326",Right "(b, c, d, e)"),("a\8327",Right "b"),("b\8328",Right "c"),("c\8329",Right "d"),("d\8321\8320",Right "e")])

# TySolve.solve
## constraints
"[](a, b)" ~ "[](a\8320, b\8321)"
"([]a, []b)" ~ "([]a\8320, []b\8321)"
## typarams
["(\"a\",(0,Unlifted,NoLoc))","(\"b\",(0,Unlifted,NoLoc))"]
## tyvars
[("a\8320",(2,TyVarFree NoLoc Unlifted)),("b\8321",(2,TyVarFree NoLoc Unlifted))]
## solution
([],[("a\8320",Right "a"),("b\8321",Right "b")])

# TySolve.solve
## constraints
"[](a, b)" ~ "[](a\8320, b\8321)"
"([]a, []b)" ~ "([]a\8320, []b\8321)"
## typarams
["(\"a\",(0,Unlifted,NoLoc))","(\"b\",(0,Unlifted,NoLoc))"]
## tyvars
[("a\8320",(2,TyVarFree NoLoc Unlifted)),("b\8321",(2,TyVarFree NoLoc Unlifted))]
## solution
([],[("a\8320",Right "a"),("b\8321",Right "b")])

# TySolve.solve
## constraints
"t\8329" ~ "[]t\8329\8321\8327"
"t\8321\8325" ~ "[]t\8321\8325\8321\8328"
"t\8321\8326" ~ "[]t\8321\8326\8321\8329"
"t\8321\8320" ~ "[]t\8321\8320\8322\8320"
"[](a, b, c)" ~ "[](t\8322, t\8323, t\8324)"
"[](t\8322, (t\8323, t\8324))" ~ "[](a\8320, b\8321)"
"(t\8329, t\8321\8320)" ~ "([]a\8320, []b\8321)"
"t\8321\8320" ~ "[](a\8321\8321, b\8321\8322)"
"(t\8321\8325, t\8321\8326)" ~ "([]a\8321\8321, []b\8321\8322)"
"([]a, []b, []c)" ~ "(t\8329, t\8321\8325, t\8321\8326)"
## typarams
["(\"a\",(0,Unlifted,NoLoc))","(\"b\",(0,Unlifted,NoLoc))","(\"c\",(0,Unlifted,NoLoc))"]
## tyvars
[("a\8320",(2,TyVarFree NoLoc Unlifted)),("b\8321",(2,TyVarFree NoLoc Unlifted)),("t\8322",(3,TyVarFree NoLoc Lifted)),("t\8323",(3,TyVarFree NoLoc Lifted)),("t\8324",(3,TyVarFree NoLoc Lifted)),("t\8329",(3,TyVarFree NoLoc Lifted)),("t\8321\8320",(3,TyVarFree NoLoc Lifted)),("a\8321\8321",(4,TyVarFree NoLoc Unlifted)),("b\8321\8322",(4,TyVarFree NoLoc Unlifted)),("t\8321\8325",(5,TyVarFree NoLoc Lifted)),("t\8321\8326",(5,TyVarFree NoLoc Lifted)),("t\8329\8321\8327",(3,TyVarFree NoLoc Lifted)),("t\8321\8325\8321\8328",(5,TyVarFree NoLoc Lifted)),("t\8321\8326\8321\8329",(5,TyVarFree NoLoc Lifted)),("t\8321\8320\8322\8320",(3,TyVarFree NoLoc Lifted))]
## solution
([],[("a\8320",Right "a"),("b\8321",Right "(b, c)"),("t\8322",Right "a"),("t\8323",Right "b"),("t\8324",Right "c"),("t\8329",Right "[]a"),("t\8321\8320",Right "[](b, c)"),("a\8321\8321",Right "b"),("b\8321\8322",Right "c"),("t\8321\8325",Right "[]b"),("t\8321\8326",Right "[]c"),("t\8329\8321\8327",Right "a"),("t\8321\8325\8321\8328",Right "b"),("t\8321\8326\8321\8329",Right "c"),("t\8321\8320\8322\8320",Right "(b, c)")])

# TySolve.solve
## constraints
"t\8321\8321" ~ "[]t\8321\8321\8322\8320"
"t\8321\8322" ~ "[]t\8321\8322\8322\8321"
"t\8321\8328" ~ "[]t\8321\8328\8322\8322"
"t\8321\8329" ~ "[]t\8321\8329\8322\8323"
"t\8321\8323" ~ "[]t\8321\8323\8322\8324"
"[](a, b, c, d)" ~ "[](t\8323, t\8324, t\8325, t\8326)"
"[](t\8323, t\8324, (t\8325, t\8326))" ~ "[](a\8320, b\8321, c\8322)"
"(t\8321\8321, t\8321\8322, t\8321\8323)" ~ "([]a\8320, []b\8321, []c\8322)"
"t\8321\8323" ~ "[](a\8321\8324, b\8321\8325)"
"(t\8321\8328, t\8321\8329)" ~ "([]a\8321\8324, []b\8321\8325)"
"([]a, []b, []c, []d)" ~ "(t\8321\8321, t\8321\8322, t\8321\8328, t\8321\8329)"
## typarams
["(\"a\",(0,Unlifted,NoLoc))","(\"b\",(0,Unlifted,NoLoc))","(\"c\",(0,Unlifted,NoLoc))","(\"d\",(0,Unlifted,NoLoc))"]
## tyvars
[("a\8320",(2,TyVarFree NoLoc Unlifted)),("b\8321",(2,TyVarFree NoLoc Unlifted)),("c\8322",(2,TyVarFree NoLoc Unlifted)),("t\8323",(3,TyVarFree NoLoc Lifted)),("t\8324",(3,TyVarFree NoLoc Lifted)),("t\8325",(3,TyVarFree NoLoc Lifted)),("t\8326",(3,TyVarFree NoLoc Lifted)),("t\8321\8321",(3,TyVarFree NoLoc Lifted)),("t\8321\8322",(3,TyVarFree NoLoc Lifted)),("t\8321\8323",(3,TyVarFree NoLoc Lifted)),("a\8321\8324",(4,TyVarFree NoLoc Unlifted)),("b\8321\8325",(4,TyVarFree NoLoc Unlifted)),("t\8321\8328",(5,TyVarFree NoLoc Lifted)),("t\8321\8329",(5,TyVarFree NoLoc Lifted)),("t\8321\8321\8322\8320",(3,TyVarFree NoLoc Lifted)),("t\8321\8322\8322\8321",(3,TyVarFree NoLoc Lifted)),("t\8321\8328\8322\8322",(5,TyVarFree NoLoc Lifted)),("t\8321\8329\8322\8323",(5,TyVarFree NoLoc Lifted)),("t\8321\8323\8322\8324",(3,TyVarFree NoLoc Lifted))]
## solution
([],[("a\8320",Right "a"),("b\8321",Right "b"),("c\8322",Right "(c, d)"),("t\8323",Right "a"),("t\8324",Right "b"),("t\8325",Right "c"),("t\8326",Right "d"),("t\8321\8321",Right "[]a"),("t\8321\8322",Right "[]b"),("t\8321\8323",Right "[](c, d)"),("a\8321\8324",Right "c"),("b\8321\8325",Right "d"),("t\8321\8328",Right "[]c"),("t\8321\8329",Right "[]d"),("t\8321\8321\8322\8320",Right "a"),("t\8321\8322\8322\8321",Right "b"),("t\8321\8328\8322\8322",Right "c"),("t\8321\8329\8322\8323",Right "d"),("t\8321\8323\8322\8324",Right "(c, d)")])

# TySolve.solve
## constraints
"t\8321\8323" ~ "[]t\8321\8323\8322\8323"
"t\8321\8324" ~ "[]t\8321\8324\8322\8324"
"t\8321\8325" ~ "[]t\8321\8325\8322\8325"
"t\8322\8321" ~ "[]t\8322\8321\8322\8326"
"t\8322\8322" ~ "[]t\8322\8322\8322\8327"
"t\8321\8326" ~ "[]t\8321\8326\8322\8328"
"[](a, b, c, d, e)" ~ "[](t\8324, t\8325, t\8326, t\8327, t\8328)"
"[](t\8324, t\8325, t\8326, (t\8327, t\8328))" ~ "[](a\8320, b\8321, c\8322, d\8323)"
"(t\8321\8323, t\8321\8324, t\8321\8325, t\8321\8326)" ~ "([]a\8320, []b\8321, []c\8322, []d\8323)"
"t\8321\8326" ~ "[](a\8321\8327, b\8321\8328)"
"(t\8322\8321, t\8322\8322)" ~ "([]a\8321\8327, []b\8321\8328)"
"([]a, []b, []c, []d, []e)" ~ "(t\8321\8323, t\8321\8324, t\8321\8325, t\8322\8321, t\8322\8322)"
## typarams
["(\"a\",(0,Unlifted,NoLoc))","(\"b\",(0,Unlifted,NoLoc))","(\"c\",(0,Unlifted,NoLoc))","(\"d\",(0,Unlifted,NoLoc))","(\"e\",(0,Unlifted,NoLoc))"]
## tyvars
[("a\8320",(2,TyVarFree NoLoc Unlifted)),("b\8321",(2,TyVarFree NoLoc Unlifted)),("c\8322",(2,TyVarFree NoLoc Unlifted)),("d\8323",(2,TyVarFree NoLoc Unlifted)),("t\8324",(3,TyVarFree NoLoc Lifted)),("t\8325",(3,TyVarFree NoLoc Lifted)),("t\8326",(3,TyVarFree NoLoc Lifted)),("t\8327",(3,TyVarFree NoLoc Lifted)),("t\8328",(3,TyVarFree NoLoc Lifted)),("t\8321\8323",(3,TyVarFree NoLoc Lifted)),("t\8321\8324",(3,TyVarFree NoLoc Lifted)),("t\8321\8325",(3,TyVarFree NoLoc Lifted)),("t\8321\8326",(3,TyVarFree NoLoc Lifted)),("a\8321\8327",(4,TyVarFree NoLoc Unlifted)),("b\8321\8328",(4,TyVarFree NoLoc Unlifted)),("t\8322\8321",(5,TyVarFree NoLoc Lifted)),("t\8322\8322",(5,TyVarFree NoLoc Lifted)),("t\8321\8323\8322\8323",(3,TyVarFree NoLoc Lifted)),("t\8321\8324\8322\8324",(3,TyVarFree NoLoc Lifted)),("t\8321\8325\8322\8325",(3,TyVarFree NoLoc Lifted)),("t\8322\8321\8322\8326",(5,TyVarFree NoLoc Lifted)),("t\8322\8322\8322\8327",(5,TyVarFree NoLoc Lifted)),("t\8321\8326\8322\8328",(3,TyVarFree NoLoc Lifted))]
## solution
([],[("a\8320",Right "a"),("b\8321",Right "b"),("c\8322",Right "c"),("d\8323",Right "(d, e)"),("t\8324",Right "a"),("t\8325",Right "b"),("t\8326",Right "c"),("t\8327",Right "d"),("t\8328",Right "e"),("t\8321\8323",Right "[]a"),("t\8321\8324",Right "[]b"),("t\8321\8325",Right "[]c"),("t\8321\8326",Right "[](d, e)"),("a\8321\8327",Right "d"),("b\8321\8328",Right "e"),("t\8322\8321",Right "[]d"),("t\8322\8322",Right "[]e"),("t\8321\8323\8322\8323",Right "a"),("t\8321\8324\8322\8324",Right "b"),("t\8321\8325\8322\8325",Right "c"),("t\8322\8321\8322\8326",Right "d"),("t\8322\8322\8322\8327",Right "e"),("t\8321\8326\8322\8328",Right "(d, e)")])

# TySolve.solve
## constraints
"[]a" ~ "[]a"
"[]x" ~ "[]x"
## typarams
["(\"a\",(0,Unlifted,NoLoc))","(\"x\",(0,Unlifted,NoLoc))"]
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"a -> x" ~ "a\8320 -> x\8321"
"[]a" ~ "[]a\8320"
"[]x" ~ "[]x\8321"
## typarams
["(\"a\",(0,Unlifted,NoLoc))","(\"x\",(0,Unlifted,NoLoc))"]
## tyvars
[("a\8320",(3,TyVarFree NoLoc Unlifted)),("x\8321",(3,TyVarFree NoLoc Unlifted))]
## solution
([],[("a\8320",Right "a"),("x\8321",Right "x")])

# TySolve.solve
## constraints
"t\8322" ~ "a"
"t\8323" ~ "b"
"[]a" ~ "[]a\8328"
"[]b" ~ "[]b\8329"
"(t\8322, t\8323) -> x" ~ "a\8320 -> x\8321"
"[](a\8328, b\8329)" ~ "[]a\8320"
"[]x" ~ "[]x\8321"
## typarams
["(\"a\",(0,Unlifted,NoLoc))","(\"b\",(0,Unlifted,NoLoc))","(\"x\",(0,Unlifted,NoLoc))"]
## tyvars
[("a\8320",(4,TyVarFree NoLoc Unlifted)),("x\8321",(4,TyVarFree NoLoc Unlifted)),("t\8322",(5,TyVarFree NoLoc Lifted)),("t\8323",(5,TyVarFree NoLoc Lifted)),("a\8328",(4,TyVarFree NoLoc Unlifted)),("b\8329",(4,TyVarFree NoLoc Unlifted))]
## solution
([],[("a\8320",Right "(a, b)"),("x\8321",Right "x"),("t\8322",Right "a"),("t\8323",Right "b"),("a\8328",Right "a"),("b\8329",Right "b")])

# TySolve.solve
## constraints
"t\8322" ~ "a"
"t\8323" ~ "b"
"t\8324" ~ "c"
"[]a" ~ "[]a\8321\8321"
"[]b" ~ "[]b\8321\8322"
"[]c" ~ "[]c\8321\8323"
"(t\8322, t\8323, t\8324) -> x" ~ "a\8320 -> x\8321"
"[](a\8321\8321, b\8321\8322, c\8321\8323)" ~ "[]a\8320"
"[]x" ~ "[]x\8321"
## typarams
["(\"a\",(0,Unlifted,NoLoc))","(\"b\",(0,Unlifted,NoLoc))","(\"c\",(0,Unlifted,NoLoc))","(\"x\",(0,Unlifted,NoLoc))"]
## tyvars
[("a\8320",(5,TyVarFree NoLoc Unlifted)),("x\8321",(5,TyVarFree NoLoc Unlifted)),("t\8322",(6,TyVarFree NoLoc Lifted)),("t\8323",(6,TyVarFree NoLoc Lifted)),("t\8324",(6,TyVarFree NoLoc Lifted)),("a\8321\8321",(5,TyVarFree NoLoc Unlifted)),("b\8321\8322",(5,TyVarFree NoLoc Unlifted)),("c\8321\8323",(5,TyVarFree NoLoc Unlifted))]
## solution
([],[("a\8320",Right "(a, b, c)"),("x\8321",Right "x"),("t\8322",Right "a"),("t\8323",Right "b"),("t\8324",Right "c"),("a\8321\8321",Right "a"),("b\8321\8322",Right "b"),("c\8321\8323",Right "c")])

# TySolve.solve
## constraints
"t\8322" ~ "a"
"t\8323" ~ "b"
"t\8324" ~ "c"
"t\8325" ~ "d"
"[]a" ~ "[]a\8321\8324"
"[]b" ~ "[]b\8321\8325"
"[]c" ~ "[]c\8321\8326"
"[]d" ~ "[]d\8321\8327"
"(t\8322, t\8323, t\8324, t\8325) -> x" ~ "a\8320 -> x\8321"
"[](a\8321\8324, b\8321\8325, c\8321\8326, d\8321\8327)" ~ "[]a\8320"
"[]x" ~ "[]x\8321"
## typarams
["(\"a\",(0,Unlifted,NoLoc))","(\"b\",(0,Unlifted,NoLoc))","(\"c\",(0,Unlifted,NoLoc))","(\"d\",(0,Unlifted,NoLoc))","(\"x\",(0,Unlifted,NoLoc))"]
## tyvars
[("a\8320",(6,TyVarFree NoLoc Unlifted)),("x\8321",(6,TyVarFree NoLoc Unlifted)),("t\8322",(7,TyVarFree NoLoc Lifted)),("t\8323",(7,TyVarFree NoLoc Lifted)),("t\8324",(7,TyVarFree NoLoc Lifted)),("t\8325",(7,TyVarFree NoLoc Lifted)),("a\8321\8324",(6,TyVarFree NoLoc Unlifted)),("b\8321\8325",(6,TyVarFree NoLoc Unlifted)),("c\8321\8326",(6,TyVarFree NoLoc Unlifted)),("d\8321\8327",(6,TyVarFree NoLoc Unlifted))]
## solution
([],[("a\8320",Right "(a, b, c, d)"),("x\8321",Right "x"),("t\8322",Right "a"),("t\8323",Right "b"),("t\8324",Right "c"),("t\8325",Right "d"),("a\8321\8324",Right "a"),("b\8321\8325",Right "b"),("c\8321\8326",Right "c"),("d\8321\8327",Right "d")])

# TySolve.solve
## constraints
"t\8322" ~ "a"
"t\8323" ~ "b"
"t\8324" ~ "c"
"t\8325" ~ "d"
"t\8326" ~ "e"
"[]a" ~ "[]a\8321\8327"
"[]b" ~ "[]b\8321\8328"
"[]c" ~ "[]c\8321\8329"
"[]d" ~ "[]d\8322\8320"
"[]e" ~ "[]e\8322\8321"
"(t\8322, t\8323, t\8324, t\8325, t\8326) -> x" ~ "a\8320 -> x\8321"
"[](a\8321\8327, b\8321\8328, c\8321\8329, d\8322\8320, e\8322\8321)" ~ "[]a\8320"
"[]x" ~ "[]x\8321"
## typarams
["(\"a\",(0,Unlifted,NoLoc))","(\"b\",(0,Unlifted,NoLoc))","(\"c\",(0,Unlifted,NoLoc))","(\"d\",(0,Unlifted,NoLoc))","(\"e\",(0,Unlifted,NoLoc))","(\"x\",(0,Unlifted,NoLoc))"]
## tyvars
[("a\8320",(7,TyVarFree NoLoc Unlifted)),("x\8321",(7,TyVarFree NoLoc Unlifted)),("t\8322",(8,TyVarFree NoLoc Lifted)),("t\8323",(8,TyVarFree NoLoc Lifted)),("t\8324",(8,TyVarFree NoLoc Lifted)),("t\8325",(8,TyVarFree NoLoc Lifted)),("t\8326",(8,TyVarFree NoLoc Lifted)),("a\8321\8327",(7,TyVarFree NoLoc Unlifted)),("b\8321\8328",(7,TyVarFree NoLoc Unlifted)),("c\8321\8329",(7,TyVarFree NoLoc Unlifted)),("d\8322\8320",(7,TyVarFree NoLoc Unlifted)),("e\8322\8321",(7,TyVarFree NoLoc Unlifted))]
## solution
([],[("a\8320",Right "(a, b, c, d, e)"),("x\8321",Right "x"),("t\8322",Right "a"),("t\8323",Right "b"),("t\8324",Right "c"),("t\8325",Right "d"),("t\8326",Right "e"),("a\8321\8327",Right "a"),("b\8321\8328",Right "b"),("c\8321\8329",Right "c"),("d\8322\8320",Right "d"),("e\8322\8321",Right "e")])

# TySolve.solve
## constraints
"a -> a -> a" ~ "a\8320 -> a\8320 -> a\8320"
"a" ~ "a\8320"
"[]a" ~ "[]a\8320"
"a" ~ "a\8320"
## typarams
["(\"a\",(0,Unlifted,NoLoc))"]
## tyvars
[("a\8320",(4,TyVarFree NoLoc Unlifted))]
## solution
([],[("a\8320",Right "a")])

# TySolve.solve
## constraints
"a -> a -> a" ~ "a\8320 -> a\8320 -> a\8320"
"a" ~ "a\8320"
"[]a" ~ "[]a\8320"
"a" ~ "a\8320"
## typarams
["(\"a\",(0,Unlifted,NoLoc))"]
## tyvars
[("a\8320",(4,TyVarFree NoLoc Unlifted))]
## solution
([],[("a\8320",Right "a")])

# TySolve.solve
## constraints
"range\8328" ~ "[]range\8328\8322\8325"
"t\8326" ~ "num\8325"
"num\8325" ~ "num\8327"
"num\8325" ~ "i64"
"range\8328" ~ "[]num\8325"
"t\8324 -> a" ~ "a\8322 -> x\8323"
"range\8328" ~ "[]a\8322"
"num\8321" ~ "i64"
"[]x\8323" ~ "[]a\8320"
"a -> a -> a" ~ "a\8320 -> a\8320 -> a\8320"
"a" ~ "a\8320"
"[]i64" ~ "[]i64"
"[]a" ~ "[]a\8320"
"[]a" ~ "[]a\8320"
## typarams
["(\"a\",(0,Unlifted,NoLoc))"]
## tyvars
[("a\8320",(6,TyVarFree NoLoc Unlifted)),("num\8321",(6,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("a\8322",(6,TyVarFree NoLoc Unlifted)),("x\8323",(6,TyVarFree NoLoc Unlifted)),("t\8324",(7,TyVarFree NoLoc Lifted)),("num\8325",(6,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8326",(6,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64])),("num\8327",(6,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("range\8328",(6,TyVarFree NoLoc Unlifted)),("range\8328\8322\8325",(6,TyVarFree NoLoc Unlifted))]
## solution
([],[("a\8320",Right "a"),("num\8321",Right "i64"),("a\8322",Right "i64"),("x\8323",Right "a"),("t\8324",Right "i64"),("num\8325",Right "i64"),("t\8326",Right "i64"),("num\8327",Right "i64"),("range\8328",Right "[]i64"),("range\8328\8322\8325",Right "i64")])

# TySolve.solve
## constraints
"num\8321" ~ "i64"
"[]a" ~ "[]a\8320"
"a -> a -> a" ~ "a\8320 -> a\8320 -> a\8320"
"a" ~ "a\8320"
"[]i64" ~ "[]i64"
"[]a" ~ "[]a\8320"
"[]a" ~ "[]a\8320"
## typarams
["(\"a\",(0,Unlifted,NoLoc))"]
## tyvars
[("a\8320",(6,TyVarFree NoLoc Unlifted)),("num\8321",(6,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("a\8320",Right "a"),("num\8321",Right "i64")])

# TySolve.solve
## constraints
"num\8321" ~ "i64"
"[][]a" ~ "[][]a\8320"
"a -> a -> a" ~ "a\8320 -> a\8320 -> a\8320"
"a" ~ "a\8320"
"[](i64, i64)" ~ "[](i64, i64)"
"[]a" ~ "[]a\8320"
"[][]a" ~ "[][]a\8320"
## typarams
["(\"a\",(0,Unlifted,NoLoc))"]
## tyvars
[("a\8320",(6,TyVarFree NoLoc Unlifted)),("num\8321",(6,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("a\8320",Right "a"),("num\8321",Right "i64")])

# TySolve.solve
## constraints
"num\8321" ~ "i64"
"[][][]a" ~ "[][][]a\8320"
"a -> a -> a" ~ "a\8320 -> a\8320 -> a\8320"
"a" ~ "a\8320"
"[](i64, i64, i64)" ~ "[](i64, i64, i64)"
"[]a" ~ "[]a\8320"
"[][][]a" ~ "[][][]a\8320"
## typarams
["(\"a\",(0,Unlifted,NoLoc))"]
## tyvars
[("a\8320",(6,TyVarFree NoLoc Unlifted)),("num\8321",(6,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("a\8320",Right "a"),("num\8321",Right "i64")])

# TySolve.solve
## constraints
"a -> a -> a" ~ "a\8320 -> a\8320 -> a\8320"
"a" ~ "a\8320"
"[]a" ~ "[]a\8320"
"[]a" ~ "[]a\8320"
## typarams
["(\"a\",(0,Unlifted,NoLoc))"]
## tyvars
[("a\8320",(4,TyVarFree NoLoc Unlifted))]
## solution
([],[("a\8320",Right "a")])

# TySolve.solve
## constraints
"index\8322\8321" ~ "[]index\8322\8321\8323\8324"
"index\8322\8327" ~ "[]index\8322\8327\8323\8325"
"t\8321\8324" ~ "[]t\8321\8324\8323\8326"
"t\8321\8325" ~ "[]t\8321\8325\8323\8327"
"t\8320" ~ "a"
"bool" ~ "bool"
"num\8323" ~ "if_t\8325"
"num\8324" ~ "if_t\8325"
"num\8327" ~ "i32"
"(x: t\8320) -> if_t\8325" ~ "a\8326 -> i64"
"[]a" ~ "[]a\8326"
"(t\8321\8324, t\8321\8325)" ~ "([]a\8326, []i64)"
"i64" ~ "num\8321\8326"
"t\8321\8328" ~ "num\8321\8327"
"index\8321\8329" ~ "index_elem\8322\8320"
"t\8321\8325" ~ "[]index_elem\8322\8320"
"i64" ~ "index\8321\8329"
"index\8322\8321" ~ "[]index_elem\8322\8322"
"t\8321\8324" ~ "[]index_elem\8322\8322"
"t\8322\8324" ~ "num\8322\8323"
"index\8322\8325" ~ "index_elem\8322\8326"
"t\8321\8325" ~ "[]index_elem\8322\8326"
"i64" ~ "index\8322\8325"
"index\8322\8327" ~ "[]index_elem\8322\8328"
"t\8321\8324" ~ "[]index_elem\8322\8328"
"i64" ~ "t\8322\8329"
"i64" ~ "t\8322\8329"
"t\8322\8329" ~ "i64"
"([]a, []a)" ~ "(index\8322\8321, index\8322\8327)"
## typarams
["(\"a\",(0,Unlifted,NoLoc))"]
## tyvars
[("t\8320",(4,TyVarFree NoLoc Lifted)),("num\8323",(5,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("num\8324",(5,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("if_t\8325",(5,TyVarFree NoLoc SizeLifted)),("a\8326",(3,TyVarFree NoLoc Unlifted)),("num\8327",(3,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8321\8324",(4,TyVarFree NoLoc Lifted)),("t\8321\8325",(4,TyVarFree NoLoc Lifted)),("num\8321\8326",(5,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("num\8321\8327",(5,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8321\8328",(5,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64])),("index\8321\8329",(5,TyVarFree NoLoc Unlifted)),("index_elem\8322\8320",(5,TyVarFree NoLoc Unlifted)),("index\8322\8321",(5,TyVarFree NoLoc Unlifted)),("index_elem\8322\8322",(5,TyVarFree NoLoc Unlifted)),("num\8322\8323",(5,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8322\8324",(5,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64])),("index\8322\8325",(5,TyVarFree NoLoc Unlifted)),("index_elem\8322\8326",(5,TyVarFree NoLoc Unlifted)),("index\8322\8327",(5,TyVarFree NoLoc Unlifted)),("index_elem\8322\8328",(5,TyVarFree NoLoc Unlifted)),("t\8322\8329",(3,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("index\8322\8321\8323\8324",(5,TyVarFree NoLoc Unlifted)),("index\8322\8327\8323\8325",(5,TyVarFree NoLoc Unlifted)),("t\8321\8324\8323\8326",(4,TyVarFree NoLoc Lifted)),("t\8321\8325\8323\8327",(4,TyVarFree NoLoc Lifted))]
## solution
([],[("t\8320",Right "a"),("num\8323",Right "i64"),("num\8324",Right "i64"),("if_t\8325",Right "i64"),("a\8326",Right "a"),("num\8327",Right "i32"),("t\8321\8324",Right "[]a"),("t\8321\8325",Right "[]i64"),("num\8321\8326",Right "i64"),("num\8321\8327",Left "[i8, i16, i32, i64]"),("t\8321\8328",Left "[i8, i16, i32, i64]"),("index\8321\8329",Right "i64"),("index_elem\8322\8320",Right "i64"),("index\8322\8321",Right "[]a"),("index_elem\8322\8322",Right "a"),("num\8322\8323",Left "[i8, i16, i32, i64]"),("t\8322\8324",Left "[i8, i16, i32, i64]"),("index\8322\8325",Right "i64"),("index_elem\8322\8326",Right "i64"),("index\8322\8327",Right "[]a"),("index_elem\8322\8328",Right "a"),("t\8322\8329",Right "i64"),("index\8322\8321\8323\8324",Right "a"),("index\8322\8327\8323\8325",Right "a"),("t\8321\8324\8323\8326",Right "a"),("t\8321\8325\8323\8327",Right "i64")])

# TySolve.solve
## constraints
"index\8322\8325" ~ "[]index\8322\8325\8329\8323"
"index\8326\8323" ~ "[]index\8326\8323\8329\8324"
"t\8321\8329" ~ "[]t\8321\8329\8329\8325"
"t\8321\8328" ~ "[]t\8321\8328\8329\8326"
"index\8324\8324" ~ "[]index\8324\8324\8329\8327"
"t\8320" ~ "a"
"t\8320" ~ "a"
"bool" ~ "bool"
"num\8326" ~ "if_t\8328"
"num\8327" ~ "if_t\8328"
"bool" ~ "bool"
"num\8323" ~ "if_t\8329"
"if_t\8328" ~ "if_t\8329"
"num\8321\8321" ~ "i32"
"(x: t\8320) -> if_t\8329" ~ "a\8321\8320 -> i64"
"[]a" ~ "[]a\8321\8320"
"(t\8321\8328, t\8321\8329)" ~ "([]a\8321\8320, []i64)"
"i64" ~ "num\8322\8320"
"t\8322\8322" ~ "num\8322\8321"
"index\8322\8323" ~ "index_elem\8322\8324"
"t\8321\8329" ~ "[]index_elem\8322\8324"
"i64" ~ "index\8322\8323"
"index\8322\8325" ~ "[]index_elem\8322\8326"
"t\8321\8328" ~ "[]index_elem\8322\8326"
"t\8322\8328" ~ "num\8322\8327"
"index\8322\8329" ~ "index_elem\8323\8320"
"t\8321\8329" ~ "[]index_elem\8323\8320"
"i64" ~ "index\8322\8329"
"t\8323\8323" ~ "num\8323\8322"
"index\8323\8324" ~ "index_elem\8323\8325"
"t\8321\8329" ~ "[]index_elem\8323\8325"
"t\8323\8327" ~ "num\8323\8326"
"index\8323\8328" ~ "index_elem\8323\8329"
"t\8321\8329" ~ "[]index_elem\8323\8329"
"index\8323\8324" ~ "t\8323\8321"
"index\8323\8328" ~ "t\8323\8321"
"i64" ~ "t\8323\8321"
"index\8324\8324" ~ "[]index_elem\8324\8325"
"t\8321\8328" ~ "[]index_elem\8324\8325"
"t\8324\8327" ~ "num\8324\8326"
"index\8324\8328" ~ "index_elem\8324\8329"
"t\8321\8329" ~ "[]index_elem\8324\8329"
"index\8324\8328" ~ "i64"
"index\8324\8324" ~ "[]a"
"t\8325\8322" ~ "num\8325\8321"
"index\8325\8323" ~ "index_elem\8325\8324"
"t\8321\8329" ~ "[]index_elem\8325\8324"
"t\8325\8326" ~ "num\8325\8325"
"index\8325\8327" ~ "index_elem\8325\8328"
"t\8321\8329" ~ "[]index_elem\8325\8328"
"index\8325\8323" ~ "t\8325\8320"
"index\8325\8327" ~ "t\8325\8320"
"i64" ~ "t\8325\8320"
"index\8326\8323" ~ "[]index_elem\8326\8324"
"t\8321\8328" ~ "[]index_elem\8326\8324"
"t\8326\8328" ~ "num\8326\8327"
"index\8326\8329" ~ "index_elem\8327\8320"
"t\8321\8329" ~ "[]index_elem\8327\8320"
"i64" ~ "t\8326\8326"
"index\8326\8329" ~ "t\8326\8326"
"t\8327\8326" ~ "num\8327\8325"
"index\8327\8327" ~ "index_elem\8327\8328"
"t\8321\8329" ~ "[]index_elem\8327\8328"
"t\8326\8326" ~ "t\8326\8325"
"index\8327\8327" ~ "t\8326\8325"
"t\8326\8325" ~ "i64"
"index\8326\8323" ~ "[]a"
"i64" ~ "t\8328\8324"
"i64" ~ "t\8328\8324"
"t\8328\8324" ~ "t\8328\8323"
"i64" ~ "t\8328\8323"
"t\8328\8323" ~ "i64"
"([]a, []a, []a)" ~ "(index\8322\8325, []a, []a)"
## typarams
["(\"a\",(0,Unlifted,NoLoc))"]
## tyvars
[("t\8320",(5,TyVarFree NoLoc Lifted)),("num\8323",(6,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("num\8326",(6,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("num\8327",(6,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("if_t\8328",(6,TyVarFree NoLoc SizeLifted)),("if_t\8329",(6,TyVarFree NoLoc SizeLifted)),("a\8321\8320",(4,TyVarFree NoLoc Unlifted)),("num\8321\8321",(4,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8321\8328",(5,TyVarFree NoLoc Lifted)),("t\8321\8329",(5,TyVarFree NoLoc Lifted)),("num\8322\8320",(6,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("num\8322\8321",(6,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8322\8322",(6,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64])),("index\8322\8323",(6,TyVarFree NoLoc Unlifted)),("index_elem\8322\8324",(6,TyVarFree NoLoc Unlifted)),("index\8322\8325",(6,TyVarFree NoLoc Unlifted)),("index_elem\8322\8326",(6,TyVarFree NoLoc Unlifted)),("num\8322\8327",(6,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8322\8328",(6,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64])),("index\8322\8329",(6,TyVarFree NoLoc Unlifted)),("index_elem\8323\8320",(6,TyVarFree NoLoc Unlifted)),("t\8323\8321",(6,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("num\8323\8322",(6,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8323\8323",(6,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64])),("index\8323\8324",(6,TyVarFree NoLoc Unlifted)),("index_elem\8323\8325",(6,TyVarFree NoLoc Unlifted)),("num\8323\8326",(6,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8323\8327",(6,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64])),("index\8323\8328",(6,TyVarFree NoLoc Unlifted)),("index_elem\8323\8329",(6,TyVarFree NoLoc Unlifted)),("index\8324\8324",(6,TyVarFree NoLoc Unlifted)),("index_elem\8324\8325",(6,TyVarFree NoLoc Unlifted)),("num\8324\8326",(6,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8324\8327",(6,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64])),("index\8324\8328",(6,TyVarFree NoLoc Unlifted)),("index_elem\8324\8329",(6,TyVarFree NoLoc Unlifted)),("t\8325\8320",(6,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("num\8325\8321",(6,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8325\8322",(6,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64])),("index\8325\8323",(6,TyVarFree NoLoc Unlifted)),("index_elem\8325\8324",(6,TyVarFree NoLoc Unlifted)),("num\8325\8325",(6,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8325\8326",(6,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64])),("index\8325\8327",(6,TyVarFree NoLoc Unlifted)),("index_elem\8325\8328",(6,TyVarFree NoLoc Unlifted)),("index\8326\8323",(6,TyVarFree NoLoc Unlifted)),("index_elem\8326\8324",(6,TyVarFree NoLoc Unlifted)),("t\8326\8325",(6,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8326\8326",(6,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("num\8326\8327",(6,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8326\8328",(6,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64])),("index\8326\8329",(6,TyVarFree NoLoc Unlifted)),("index_elem\8327\8320",(6,TyVarFree NoLoc Unlifted)),("num\8327\8325",(6,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8327\8326",(6,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64])),("index\8327\8327",(6,TyVarFree NoLoc Unlifted)),("index_elem\8327\8328",(6,TyVarFree NoLoc Unlifted)),("t\8328\8323",(4,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8328\8324",(4,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("index\8322\8325\8329\8323",(6,TyVarFree NoLoc Unlifted)),("index\8326\8323\8329\8324",(6,TyVarFree NoLoc Unlifted)),("t\8321\8329\8329\8325",(5,TyVarFree NoLoc Lifted)),("t\8321\8328\8329\8326",(5,TyVarFree NoLoc Lifted)),("index\8324\8324\8329\8327",(6,TyVarFree NoLoc Unlifted))]
## solution
([],[("t\8320",Right "a"),("num\8323",Right "i64"),("num\8326",Right "i64"),("num\8327",Right "i64"),("if_t\8328",Right "i64"),("if_t\8329",Right "i64"),("a\8321\8320",Right "a"),("num\8321\8321",Right "i32"),("t\8321\8328",Right "[]a"),("t\8321\8329",Right "[]i64"),("num\8322\8320",Right "i64"),("num\8322\8321",Left "[i8, i16, i32, i64]"),("t\8322\8322",Left "[i8, i16, i32, i64]"),("index\8322\8323",Right "i64"),("index_elem\8322\8324",Right "i64"),("index\8322\8325",Right "[]a"),("index_elem\8322\8326",Right "a"),("num\8322\8327",Left "[i8, i16, i32, i64]"),("t\8322\8328",Left "[i8, i16, i32, i64]"),("index\8322\8329",Right "i64"),("index_elem\8323\8320",Right "i64"),("t\8323\8321",Right "i64"),("num\8323\8322",Left "[i8, i16, i32, i64]"),("t\8323\8323",Left "[i8, i16, i32, i64]"),("index\8323\8324",Right "i64"),("index_elem\8323\8325",Right "i64"),("num\8323\8326",Left "[i8, i16, i32, i64]"),("t\8323\8327",Left "[i8, i16, i32, i64]"),("index\8323\8328",Right "i64"),("index_elem\8323\8329",Right "i64"),("index\8324\8324",Right "[]a"),("index_elem\8324\8325",Right "a"),("num\8324\8326",Left "[i8, i16, i32, i64]"),("t\8324\8327",Left "[i8, i16, i32, i64]"),("index\8324\8328",Right "i64"),("index_elem\8324\8329",Right "i64"),("t\8325\8320",Right "i64"),("num\8325\8321",Left "[i8, i16, i32, i64]"),("t\8325\8322",Left "[i8, i16, i32, i64]"),("index\8325\8323",Right "i64"),("index_elem\8325\8324",Right "i64"),("num\8325\8325",Left "[i8, i16, i32, i64]"),("t\8325\8326",Left "[i8, i16, i32, i64]"),("index\8325\8327",Right "i64"),("index_elem\8325\8328",Right "i64"),("index\8326\8323",Right "[]a"),("index_elem\8326\8324",Right "a"),("t\8326\8325",Right "i64"),("t\8326\8326",Right "i64"),("num\8326\8327",Left "[i8, i16, i32, i64]"),("t\8326\8328",Left "[i8, i16, i32, i64]"),("index\8326\8329",Right "i64"),("index_elem\8327\8320",Right "i64"),("num\8327\8325",Left "[i8, i16, i32, i64]"),("t\8327\8326",Left "[i8, i16, i32, i64]"),("index\8327\8327",Right "i64"),("index_elem\8327\8328",Right "i64"),("t\8328\8323",Right "i64"),("t\8328\8324",Right "i64"),("index\8322\8325\8329\8323",Right "a"),("index\8326\8323\8329\8324",Right "a"),("t\8321\8329\8329\8325",Right "i64"),("t\8321\8328\8329\8326",Right "a"),("index\8324\8324\8329\8327",Right "a")])

# TySolve.solve
## constraints
"a -> bool" ~ "a\8322 -> x\8323"
"[]a" ~ "[]a\8322"
"t\8321 -> t\8321 -> t\8321" ~ "a\8320 -> a\8320 -> a\8320"
"bool" ~ "a\8320"
"[]x\8323" ~ "[]a\8320"
"bool" ~ "a\8320"
## typarams
["(\"a\",(0,Unlifted,NoLoc))"]
## tyvars
[("a\8320",(3,TyVarFree NoLoc Unlifted)),("t\8321",(3,TyVarPrim NoLoc [Bool])),("a\8322",(3,TyVarFree NoLoc Unlifted)),("x\8323",(3,TyVarFree NoLoc Unlifted))]
## solution
([],[("a\8320",Right "bool"),("t\8321",Right "bool"),("a\8322",Right "a"),("x\8323",Right "bool")])

# TySolve.solve
## constraints
"a -> bool" ~ "a\8322 -> x\8323"
"[]a" ~ "[]a\8322"
"t\8321 -> t\8321 -> t\8321" ~ "a\8320 -> a\8320 -> a\8320"
"bool" ~ "a\8320"
"[]x\8323" ~ "[]a\8320"
"bool" ~ "a\8320"
## typarams
["(\"a\",(0,Unlifted,NoLoc))"]
## tyvars
[("a\8320",(3,TyVarFree NoLoc Unlifted)),("t\8321",(3,TyVarPrim NoLoc [Bool])),("a\8322",(3,TyVarFree NoLoc Unlifted)),("x\8323",(3,TyVarFree NoLoc Unlifted))]
## solution
([],[("a\8320",Right "bool"),("t\8321",Right "bool"),("a\8322",Right "a"),("x\8323",Right "bool")])

# TySolve.solve
## constraints
"range\8327" ~ "[]range\8327\8321\8328"
"t\8325" ~ "num\8324"
"num\8324" ~ "num\8326"
"num\8324" ~ "i64"
"range\8327" ~ "[]num\8324"
"t\8323 -> t" ~ "a\8321 -> x\8322"
"range\8327" ~ "[]a\8321"
"[]x\8322" ~ "[]a\8320"
"[]i64" ~ "[]i64"
"[]t" ~ "[]a\8320"
"[]t" ~ "[]a\8320"
## typarams
["(\"t\",(0,Unlifted,NoLoc))"]
## tyvars
[("a\8320",(5,TyVarFree NoLoc Unlifted)),("a\8321",(5,TyVarFree NoLoc Unlifted)),("x\8322",(5,TyVarFree NoLoc Unlifted)),("t\8323",(6,TyVarFree NoLoc Lifted)),("num\8324",(5,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8325",(5,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64])),("num\8326",(5,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("range\8327",(5,TyVarFree NoLoc Unlifted)),("range\8327\8321\8328",(5,TyVarFree NoLoc Unlifted))]
## solution
([],[("a\8320",Right "t"),("a\8321",Right "i64"),("x\8322",Right "t"),("t\8323",Right "i64"),("num\8324",Right "i64"),("t\8325",Right "i64"),("num\8326",Right "i64"),("range\8327",Right "[]i64"),("range\8327\8321\8328",Right "i64")])

# TySolve.solve
## constraints
"[]t" ~ "[]a\8320"
"[]i64" ~ "[]i64"
"[]t" ~ "[]a\8320"
"[]t" ~ "[]a\8320"
## typarams
["(\"t\",(0,Unlifted,NoLoc))"]
## tyvars
[("a\8320",(4,TyVarFree NoLoc Unlifted))]
## solution
([],[("a\8320",Right "t")])

# TySolve.solve
## constraints
"[][]t" ~ "[][]a\8320"
"[](i64, i64)" ~ "[](i64, i64)"
"[]t" ~ "[]a\8320"
"[][]t" ~ "[][]a\8320"
## typarams
["(\"t\",(0,Unlifted,NoLoc))"]
## tyvars
[("a\8320",(4,TyVarFree NoLoc Unlifted))]
## solution
([],[("a\8320",Right "t")])

# TySolve.solve
## constraints
"[][][]t" ~ "[][][]a\8320"
"[](i64, i64, i64)" ~ "[](i64, i64, i64)"
"[]t" ~ "[]a\8320"
"[][][]t" ~ "[][][]a\8320"
## typarams
["(\"t\",(0,Unlifted,NoLoc))"]
## tyvars
[("a\8320",(4,TyVarFree NoLoc Unlifted))]
## solution
([],[("a\8320",Right "t")])

# TySolve.solve
## constraints
"t\8322\8322" ~ "[]t\8322\8322\8328\8324"
"t\8321\8322" ~ "[]t\8321\8322\8328\8325"
"index\8324\8325" ~ "[]index\8324\8325\8328\8326"
"t\8322" ~ "a"
"bool" ~ "bool"
"num\8325" ~ "if_t\8327"
"num\8326" ~ "if_t\8327"
"(x: t\8322) -> if_t\8327" ~ "a\8320 -> x\8321"
"[]a" ~ "[]a\8320"
"t\8321\8322" ~ "[]x\8321"
"t\8321\8324 -> t\8321\8324 -> t\8321\8324" ~ "a\8321\8323 -> a\8321\8323 -> a\8321\8323"
"num\8321\8325" ~ "a\8321\8323"
"t\8321\8322" ~ "[]a\8321\8323"
"t\8322\8322" ~ "[]a\8321\8323"
"i64" ~ "t\8322\8323"
"num\8322\8324" ~ "t\8322\8323"
"i64" ~ "t\8323\8320"
"num\8323\8321" ~ "t\8323\8320"
"t\8323\8326" ~ "t\8323\8320"
"index\8323\8327" ~ "index_elem\8323\8328"
"t\8322\8322" ~ "[]index_elem\8323\8328"
"bool" ~ "bool"
"num\8322\8329" ~ "if_t\8323\8329"
"index\8323\8327" ~ "if_t\8323\8329"
"t\8324\8320" ~ "if_t\8323\8329"
"i64" ~ "t\8324\8320"
"index\8324\8325" ~ "[]index_elem\8324\8326"
"[]a" ~ "[]index_elem\8324\8326"
"(x: t\8324\8324) -> t\8324\8324" ~ "a\8324\8322 -> x\8324\8323"
"index\8324\8325" ~ "[]a\8324\8322"
"t\8325\8324" ~ "t\8325\8326"
"num\8325\8327" ~ "t\8325\8326"
"t\8325\8325" ~ "t\8326\8322"
"num\8326\8323" ~ "t\8326\8322"
"t\8326\8329" ~ "num\8326\8328"
"bool" ~ "bool"
"t\8326\8322" ~ "if_t\8327\8320"
"num\8326\8328" ~ "if_t\8327\8320"
"(f: t\8325\8324) -> (o: t\8325\8325) -> if_t\8327\8320" ~ "a\8325\8321 -> b\8325\8322 -> x\8325\8323"
"t\8321\8322" ~ "[]a\8325\8321"
"t\8322\8322" ~ "[]b\8325\8322"
"[]x\8324\8323" ~ "[]t\8324\8321"
"[]x\8325\8323" ~ "[]i64"
"[]a" ~ "[]t\8324\8321"
"[]a" ~ "[]t\8324\8321"
## typarams
["(\"a\",(0,Unlifted,NoLoc))"]
## tyvars
[("a\8320",(3,TyVarFree NoLoc Unlifted)),("x\8321",(3,TyVarFree NoLoc Unlifted)),("t\8322",(4,TyVarFree NoLoc Lifted)),("num\8325",(5,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("num\8326",(5,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("if_t\8327",(5,TyVarFree NoLoc SizeLifted)),("t\8321\8322",(4,TyVarFree NoLoc Lifted)),("a\8321\8323",(5,TyVarFree NoLoc Unlifted)),("t\8321\8324",(5,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("num\8321\8325",(5,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8322\8322",(6,TyVarFree NoLoc Lifted)),("t\8322\8323",(7,TyVarFree NoLoc Unlifted)),("num\8322\8324",(7,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("num\8322\8329",(7,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8323\8320",(7,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("num\8323\8321",(7,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8323\8326",(7,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64])),("index\8323\8327",(7,TyVarFree NoLoc Unlifted)),("index_elem\8323\8328",(7,TyVarFree NoLoc Unlifted)),("if_t\8323\8329",(7,TyVarFree NoLoc SizeLifted)),("t\8324\8320",(8,TyVarFree NoLoc Lifted)),("t\8324\8321",(9,TyVarFree NoLoc Unlifted)),("a\8324\8322",(9,TyVarFree NoLoc Unlifted)),("x\8324\8323",(9,TyVarFree NoLoc Unlifted)),("t\8324\8324",(10,TyVarFree NoLoc Lifted)),("index\8324\8325",(9,TyVarFree NoLoc Unlifted)),("index_elem\8324\8326",(9,TyVarFree NoLoc Unlifted)),("a\8325\8321",(9,TyVarFree NoLoc Unlifted)),("b\8325\8322",(9,TyVarFree NoLoc Unlifted)),("x\8325\8323",(9,TyVarFree NoLoc Unlifted)),("t\8325\8324",(10,TyVarFree NoLoc Lifted)),("t\8325\8325",(11,TyVarFree NoLoc Lifted)),("t\8325\8326",(12,TyVarFree NoLoc Unlifted)),("num\8325\8327",(12,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8326\8322",(12,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("num\8326\8323",(12,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("num\8326\8328",(12,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8326\8329",(12,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("if_t\8327\8320",(12,TyVarFree NoLoc SizeLifted)),("t\8322\8322\8328\8324",(6,TyVarFree NoLoc Lifted)),("t\8321\8322\8328\8325",(4,TyVarFree NoLoc Lifted)),("index\8324\8325\8328\8326",(9,TyVarFree NoLoc Unlifted))]
## solution
([],[("a\8320",Right "a"),("x\8321",Right "i64"),("t\8322",Right "a"),("num\8325",Right "i64"),("num\8326",Right "i64"),("if_t\8327",Right "i64"),("t\8321\8322",Right "[]i64"),("a\8321\8323",Right "i64"),("t\8321\8324",Right "i64"),("num\8321\8325",Right "i64"),("t\8322\8322",Right "[]i64"),("t\8322\8323",Right "i64"),("num\8322\8324",Right "i64"),("num\8322\8329",Right "i64"),("t\8323\8320",Right "i64"),("num\8323\8321",Right "i64"),("t\8323\8326",Right "i64"),("index\8323\8327",Right "i64"),("index_elem\8323\8328",Right "i64"),("if_t\8323\8329",Right "i64"),("t\8324\8320",Right "i64"),("t\8324\8321",Right "a"),("a\8324\8322",Right "a"),("x\8324\8323",Right "a"),("t\8324\8324",Right "a"),("index\8324\8325",Right "[]a"),("index_elem\8324\8326",Right "a"),("a\8325\8321",Right "i64"),("b\8325\8322",Right "i64"),("x\8325\8323",Right "i64"),("t\8325\8324",Right "i64"),("t\8325\8325",Right "i64"),("t\8325\8326",Right "i64"),("num\8325\8327",Right "i64"),("t\8326\8322",Right "i64"),("num\8326\8323",Right "i64"),("num\8326\8328",Right "i64"),("t\8326\8329",Right "i64"),("if_t\8327\8320",Right "i64"),("t\8322\8322\8328\8324",Right "i64"),("t\8321\8322\8328\8325",Right "i64"),("index\8324\8325\8328\8326",Right "a")])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u8" ~ "u8"
"i8" ~ "i8"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u16" ~ "u16"
"i16" ~ "i16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u32" ~ "u32"
"i32" ~ "i32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u64" ~ "u64"
"i64" ~ "i64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f16" ~ "f16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f32" ~ "f32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f64" ~ "f64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(i8, i8)" ~ "(i8, i8)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(i8, i8)" ~ "(i8, i8)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(i8, i8)" ~ "(i8, i8)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(i8, i8)" ~ "(i8, i8)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(i8, i8)" ~ "(i8, i8)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(i8, i8)" ~ "(i8, i8)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(i8, i8)" ~ "(i8, i8)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(i8, i8)" ~ "(i8, i8)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(i8, i8)" ~ "(i8, i8)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(i8, i8)" ~ "(i8, i8)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(i8, i8)" ~ "(i8, i8)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i8" ~ "i8"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(i8, i8)" ~ "(i8, i8)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(i8, i8)" ~ "(i8, i8)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(i8, i8)" ~ "(i8, i8)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i8" ~ "i8"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i16" ~ "i16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i32" ~ "i32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i64" ~ "i64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u8" ~ "u8"
"i8" ~ "i8"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u16" ~ "u16"
"i16" ~ "i16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u32" ~ "u32"
"i32" ~ "i32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u64" ~ "u64"
"i64" ~ "i64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f16" ~ "f16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f32" ~ "f32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f64" ~ "f64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i8" ~ "i8"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i8" ~ "i8"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(i8, i8)" ~ "(i8, i8)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(i8, i8)" ~ "(i8, i8)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(i8, i8)" ~ "(i8, i8)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(i8, i8)" ~ "(i8, i8)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(i8, i8)" ~ "(i8, i8)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i8" ~ "i8"
"i8" ~ "i8"
"t\8324" ~ "bool"
## typarams
mempty
## tyvars
[("t\8324",(3,TyVarPrim NoLoc [Bool,Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64]))]
## solution
([],[("t\8324",Right "bool")])

# TySolve.solve
## constraints
"i8" ~ "i8"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i8" ~ "i8"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"t\8320" ~ "i8"
## typarams
mempty
## tyvars
[("t\8320",(2,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("t\8320",Right "i8")])

# TySolve.solve
## constraints
"(i8, i8)" ~ "(i8, i8)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(i8, i8)" ~ "(i8, i8)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i8" ~ "i8"
"i8" ~ "i8"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i32" ~ "i32"
"i8" ~ "i8"
"i8" ~ "i8"
"num\8326" ~ "i32"
"i8" ~ "i8"
"i8" ~ "i8"
"i8" ~ "i8"
## typarams
mempty
## tyvars
[("num\8326",(3,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8326",Right "i32")])

# TySolve.solve
## constraints
"num\8321" ~ "t\8320"
"i32" ~ "t\8320"
"t\8326" ~ "t\8320"
"t\8320" ~ "i32"
"i8" ~ "i8"
"i8" ~ "i8"
"i32" ~ "t\8321\8323"
"i32" ~ "t\8321\8323"
"t\8321\8323" ~ "i32"
"i8" ~ "i8"
"i8" ~ "i8"
## typarams
mempty
## tyvars
[("t\8320",(4,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64])),("num\8321",(4,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8326",(4,TyVarPrim NoLoc [Bool,Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64])),("t\8321\8323",(4,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64]))]
## solution
([],[("t\8320",Right "i32"),("num\8321",Right "i32"),("t\8326",Right "i32"),("t\8321\8323",Right "i32")])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"t\8320" ~ "i8"
"t\8321" ~ "i8"
"(i8, i8)" ~ "(i8, i8)"
## typarams
mempty
## tyvars
[("t\8320",(1,TyVarFree NoLoc Lifted)),("t\8321",(2,TyVarFree NoLoc Lifted))]
## solution
([],[("t\8320",Right "i8"),("t\8321",Right "i8")])

# TySolve.solve
## constraints
"t\8320" ~ "i8"
"t\8321" ~ "i8"
"t\8322" ~ "i8"
"(i8, i8, i8)" ~ "(i8, i8, i8)"
## typarams
mempty
## tyvars
[("t\8320",(1,TyVarFree NoLoc Lifted)),("t\8321",(2,TyVarFree NoLoc Lifted)),("t\8322",(3,TyVarFree NoLoc Lifted))]
## solution
([],[("t\8320",Right "i8"),("t\8321",Right "i8"),("t\8322",Right "i8")])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"num\8321" ~ "i32"
"(x: i8) -> (y: i8) -> i8" ~ "a\8320 -> a\8320 -> a\8320"
"i8" ~ "a\8320"
## typarams
mempty
## tyvars
[("a\8320",(1,TyVarFree NoLoc Unlifted)),("num\8321",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("a\8320",Right "i8"),("num\8321",Right "i32")])

# TySolve.solve
## constraints
"num\8321" ~ "i32"
"(x: i8) -> (y: i8) -> i8" ~ "a\8320 -> a\8320 -> a\8320"
"i8" ~ "a\8320"
## typarams
mempty
## tyvars
[("a\8320",(1,TyVarFree NoLoc Unlifted)),("num\8321",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("a\8320",Right "i8"),("num\8321",Right "i32")])

# TySolve.solve
## constraints
"(x: i8) -> (y: i8) -> i8" ~ "a\8320 -> a\8320 -> a\8320"
"i8" ~ "a\8320"
## typarams
mempty
## tyvars
[("a\8320",(1,TyVarFree NoLoc Unlifted))]
## solution
([],[("a\8320",Right "i8")])

# TySolve.solve
## constraints
"(x: i8) -> (y: i8) -> i8" ~ "a\8320 -> a\8320 -> a\8320"
"i8" ~ "a\8320"
## typarams
mempty
## tyvars
[("a\8320",(1,TyVarFree NoLoc Unlifted))]
## solution
([],[("a\8320",Right "i8")])

# TySolve.solve
## constraints
"(i16, i16)" ~ "(i16, i16)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(i16, i16)" ~ "(i16, i16)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(i16, i16)" ~ "(i16, i16)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(i16, i16)" ~ "(i16, i16)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(i16, i16)" ~ "(i16, i16)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(i16, i16)" ~ "(i16, i16)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(i16, i16)" ~ "(i16, i16)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(i16, i16)" ~ "(i16, i16)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(i16, i16)" ~ "(i16, i16)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(i16, i16)" ~ "(i16, i16)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(i16, i16)" ~ "(i16, i16)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i16" ~ "i16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(i16, i16)" ~ "(i16, i16)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(i16, i16)" ~ "(i16, i16)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(i16, i16)" ~ "(i16, i16)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i8" ~ "i8"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i16" ~ "i16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i32" ~ "i32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i64" ~ "i64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u8" ~ "u8"
"i8" ~ "i8"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u16" ~ "u16"
"i16" ~ "i16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u32" ~ "u32"
"i32" ~ "i32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u64" ~ "u64"
"i64" ~ "i64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f16" ~ "f16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f32" ~ "f32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f64" ~ "f64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i16" ~ "i16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i16" ~ "i16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(i16, i16)" ~ "(i16, i16)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(i16, i16)" ~ "(i16, i16)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(i16, i16)" ~ "(i16, i16)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(i16, i16)" ~ "(i16, i16)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(i16, i16)" ~ "(i16, i16)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i16" ~ "i16"
"i16" ~ "i16"
"t\8324" ~ "bool"
## typarams
mempty
## tyvars
[("t\8324",(3,TyVarPrim NoLoc [Bool,Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64]))]
## solution
([],[("t\8324",Right "bool")])

# TySolve.solve
## constraints
"i16" ~ "i16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i16" ~ "i16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"t\8320" ~ "i16"
## typarams
mempty
## tyvars
[("t\8320",(2,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("t\8320",Right "i16")])

# TySolve.solve
## constraints
"(i16, i16)" ~ "(i16, i16)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(i16, i16)" ~ "(i16, i16)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i16" ~ "i16"
"i16" ~ "i16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i32" ~ "i32"
"i16" ~ "i16"
"i16" ~ "i16"
"num\8326" ~ "i32"
"i16" ~ "i16"
"i16" ~ "i16"
"i16" ~ "i16"
## typarams
mempty
## tyvars
[("num\8326",(3,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8326",Right "i32")])

# TySolve.solve
## constraints
"num\8321" ~ "t\8320"
"i32" ~ "t\8320"
"t\8326" ~ "t\8320"
"t\8320" ~ "i32"
"i16" ~ "i16"
"i16" ~ "i16"
"i32" ~ "t\8321\8323"
"i32" ~ "t\8321\8323"
"t\8321\8323" ~ "i32"
"i16" ~ "i16"
"i16" ~ "i16"
## typarams
mempty
## tyvars
[("t\8320",(4,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64])),("num\8321",(4,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8326",(4,TyVarPrim NoLoc [Bool,Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64])),("t\8321\8323",(4,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64]))]
## solution
([],[("t\8320",Right "i32"),("num\8321",Right "i32"),("t\8326",Right "i32"),("t\8321\8323",Right "i32")])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"t\8320" ~ "i16"
"t\8321" ~ "i16"
"(i16, i16)" ~ "(i16, i16)"
## typarams
mempty
## tyvars
[("t\8320",(1,TyVarFree NoLoc Lifted)),("t\8321",(2,TyVarFree NoLoc Lifted))]
## solution
([],[("t\8320",Right "i16"),("t\8321",Right "i16")])

# TySolve.solve
## constraints
"t\8320" ~ "i16"
"t\8321" ~ "i16"
"t\8322" ~ "i16"
"(i16, i16, i16)" ~ "(i16, i16, i16)"
## typarams
mempty
## tyvars
[("t\8320",(1,TyVarFree NoLoc Lifted)),("t\8321",(2,TyVarFree NoLoc Lifted)),("t\8322",(3,TyVarFree NoLoc Lifted))]
## solution
([],[("t\8320",Right "i16"),("t\8321",Right "i16"),("t\8322",Right "i16")])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"num\8321" ~ "i32"
"(x: i16) -> (y: i16) -> i16" ~ "a\8320 -> a\8320 -> a\8320"
"i16" ~ "a\8320"
## typarams
mempty
## tyvars
[("a\8320",(1,TyVarFree NoLoc Unlifted)),("num\8321",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("a\8320",Right "i16"),("num\8321",Right "i32")])

# TySolve.solve
## constraints
"num\8321" ~ "i32"
"(x: i16) -> (y: i16) -> i16" ~ "a\8320 -> a\8320 -> a\8320"
"i16" ~ "a\8320"
## typarams
mempty
## tyvars
[("a\8320",(1,TyVarFree NoLoc Unlifted)),("num\8321",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("a\8320",Right "i16"),("num\8321",Right "i32")])

# TySolve.solve
## constraints
"(x: i16) -> (y: i16) -> i16" ~ "a\8320 -> a\8320 -> a\8320"
"i16" ~ "a\8320"
## typarams
mempty
## tyvars
[("a\8320",(1,TyVarFree NoLoc Unlifted))]
## solution
([],[("a\8320",Right "i16")])

# TySolve.solve
## constraints
"(x: i16) -> (y: i16) -> i16" ~ "a\8320 -> a\8320 -> a\8320"
"i16" ~ "a\8320"
## typarams
mempty
## tyvars
[("a\8320",(1,TyVarFree NoLoc Unlifted))]
## solution
([],[("a\8320",Right "i16")])

# TySolve.solve
## constraints
"u32" ~ "u32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i32" ~ "i32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(i32, i32)" ~ "(i32, i32)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(i32, i32)" ~ "(i32, i32)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(i32, i32)" ~ "(i32, i32)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(i32, i32)" ~ "(i32, i32)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(i32, i32)" ~ "(i32, i32)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(i32, i32)" ~ "(i32, i32)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(i32, i32)" ~ "(i32, i32)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(i32, i32)" ~ "(i32, i32)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(i32, i32)" ~ "(i32, i32)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(i32, i32)" ~ "(i32, i32)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(i32, i32)" ~ "(i32, i32)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i32" ~ "i32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(i32, i32)" ~ "(i32, i32)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(i32, i32)" ~ "(i32, i32)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(i32, i32)" ~ "(i32, i32)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i8" ~ "i8"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i16" ~ "i16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i32" ~ "i32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i64" ~ "i64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u8" ~ "u8"
"i8" ~ "i8"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u16" ~ "u16"
"i16" ~ "i16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u32" ~ "u32"
"i32" ~ "i32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u64" ~ "u64"
"i64" ~ "i64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f16" ~ "f16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f32" ~ "f32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f64" ~ "f64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i32" ~ "i32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i32" ~ "i32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(i32, i32)" ~ "(i32, i32)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(i32, i32)" ~ "(i32, i32)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(i32, i32)" ~ "(i32, i32)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(i32, i32)" ~ "(i32, i32)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(i32, i32)" ~ "(i32, i32)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i32" ~ "i32"
"i32" ~ "i32"
"t\8324" ~ "bool"
## typarams
mempty
## tyvars
[("t\8324",(3,TyVarPrim NoLoc [Bool,Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64]))]
## solution
([],[("t\8324",Right "bool")])

# TySolve.solve
## constraints
"i32" ~ "i32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i32" ~ "i32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"t\8320" ~ "i32"
## typarams
mempty
## tyvars
[("t\8320",(2,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("t\8320",Right "i32")])

# TySolve.solve
## constraints
"(i32, i32)" ~ "(i32, i32)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(i32, i32)" ~ "(i32, i32)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i32" ~ "i32"
"num\8320" ~ "i32"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "i32")])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i32" ~ "i32"
"i32" ~ "i32"
"i32" ~ "i32"
"num\8326" ~ "i32"
"i32" ~ "i32"
"i32" ~ "i32"
"i32" ~ "i32"
## typarams
mempty
## tyvars
[("num\8326",(3,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8326",Right "i32")])

# TySolve.solve
## constraints
"num\8321" ~ "t\8320"
"i32" ~ "t\8320"
"t\8326" ~ "t\8320"
"t\8320" ~ "i32"
"i32" ~ "i32"
"i32" ~ "i32"
"i32" ~ "t\8321\8323"
"i32" ~ "t\8321\8323"
"t\8321\8323" ~ "i32"
"i32" ~ "i32"
"i32" ~ "i32"
## typarams
mempty
## tyvars
[("t\8320",(4,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64])),("num\8321",(4,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8326",(4,TyVarPrim NoLoc [Bool,Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64])),("t\8321\8323",(4,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64]))]
## solution
([],[("t\8320",Right "i32"),("num\8321",Right "i32"),("t\8326",Right "i32"),("t\8321\8323",Right "i32")])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"t\8320" ~ "i32"
"t\8321" ~ "i32"
"(i32, i32)" ~ "(i32, i32)"
## typarams
mempty
## tyvars
[("t\8320",(1,TyVarFree NoLoc Lifted)),("t\8321",(2,TyVarFree NoLoc Lifted))]
## solution
([],[("t\8320",Right "i32"),("t\8321",Right "i32")])

# TySolve.solve
## constraints
"t\8320" ~ "i32"
"t\8321" ~ "i32"
"t\8322" ~ "i32"
"(i32, i32, i32)" ~ "(i32, i32, i32)"
## typarams
mempty
## tyvars
[("t\8320",(1,TyVarFree NoLoc Lifted)),("t\8321",(2,TyVarFree NoLoc Lifted)),("t\8322",(3,TyVarFree NoLoc Lifted))]
## solution
([],[("t\8320",Right "i32"),("t\8321",Right "i32"),("t\8322",Right "i32")])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"num\8321" ~ "i32"
"(x: i32) -> (y: i32) -> i32" ~ "a\8320 -> a\8320 -> a\8320"
"i32" ~ "a\8320"
## typarams
mempty
## tyvars
[("a\8320",(1,TyVarFree NoLoc Unlifted)),("num\8321",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("a\8320",Right "i32"),("num\8321",Right "i32")])

# TySolve.solve
## constraints
"num\8321" ~ "i32"
"(x: i32) -> (y: i32) -> i32" ~ "a\8320 -> a\8320 -> a\8320"
"i32" ~ "a\8320"
## typarams
mempty
## tyvars
[("a\8320",(1,TyVarFree NoLoc Unlifted)),("num\8321",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("a\8320",Right "i32"),("num\8321",Right "i32")])

# TySolve.solve
## constraints
"(x: i32) -> (y: i32) -> i32" ~ "a\8320 -> a\8320 -> a\8320"
"i32" ~ "a\8320"
## typarams
mempty
## tyvars
[("a\8320",(1,TyVarFree NoLoc Unlifted))]
## solution
([],[("a\8320",Right "i32")])

# TySolve.solve
## constraints
"(x: i32) -> (y: i32) -> i32" ~ "a\8320 -> a\8320 -> a\8320"
"i32" ~ "a\8320"
## typarams
mempty
## tyvars
[("a\8320",(1,TyVarFree NoLoc Unlifted))]
## solution
([],[("a\8320",Right "i32")])

# TySolve.solve
## constraints
"u64" ~ "u64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i64" ~ "i64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(i64, i64)" ~ "(i64, i64)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(i64, i64)" ~ "(i64, i64)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(i64, i64)" ~ "(i64, i64)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(i64, i64)" ~ "(i64, i64)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(i64, i64)" ~ "(i64, i64)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(i64, i64)" ~ "(i64, i64)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(i64, i64)" ~ "(i64, i64)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(i64, i64)" ~ "(i64, i64)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(i64, i64)" ~ "(i64, i64)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(i64, i64)" ~ "(i64, i64)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(i64, i64)" ~ "(i64, i64)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i64" ~ "i64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(i64, i64)" ~ "(i64, i64)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(i64, i64)" ~ "(i64, i64)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(i64, i64)" ~ "(i64, i64)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i8" ~ "i8"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i16" ~ "i16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i32" ~ "i32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i64" ~ "i64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u8" ~ "u8"
"i8" ~ "i8"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u16" ~ "u16"
"i16" ~ "i16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u32" ~ "u32"
"i32" ~ "i32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u64" ~ "u64"
"i64" ~ "i64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f16" ~ "f16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f32" ~ "f32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f64" ~ "f64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i64" ~ "i64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i64" ~ "i64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(i64, i64)" ~ "(i64, i64)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(i64, i64)" ~ "(i64, i64)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(i64, i64)" ~ "(i64, i64)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(i64, i64)" ~ "(i64, i64)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(i64, i64)" ~ "(i64, i64)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i64" ~ "i64"
"i64" ~ "i64"
"t\8324" ~ "bool"
## typarams
mempty
## tyvars
[("t\8324",(3,TyVarPrim NoLoc [Bool,Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64]))]
## solution
([],[("t\8324",Right "bool")])

# TySolve.solve
## constraints
"i64" ~ "i64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i64" ~ "i64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"t\8320" ~ "i64"
## typarams
mempty
## tyvars
[("t\8320",(2,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("t\8320",Right "i64")])

# TySolve.solve
## constraints
"(i64, i64)" ~ "(i64, i64)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(i64, i64)" ~ "(i64, i64)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i64" ~ "i64"
"i64" ~ "i64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i32" ~ "i32"
"i64" ~ "i64"
"i64" ~ "i64"
"num\8326" ~ "i32"
"i64" ~ "i64"
"i64" ~ "i64"
"i64" ~ "i64"
## typarams
mempty
## tyvars
[("num\8326",(3,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8326",Right "i32")])

# TySolve.solve
## constraints
"num\8321" ~ "t\8320"
"i32" ~ "t\8320"
"t\8326" ~ "t\8320"
"t\8320" ~ "i32"
"i64" ~ "i64"
"i64" ~ "i64"
"i32" ~ "t\8321\8323"
"i32" ~ "t\8321\8323"
"t\8321\8323" ~ "i32"
"i64" ~ "i64"
"i64" ~ "i64"
## typarams
mempty
## tyvars
[("t\8320",(4,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64])),("num\8321",(4,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8326",(4,TyVarPrim NoLoc [Bool,Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64])),("t\8321\8323",(4,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64]))]
## solution
([],[("t\8320",Right "i32"),("num\8321",Right "i32"),("t\8326",Right "i32"),("t\8321\8323",Right "i32")])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"t\8320" ~ "i64"
"t\8321" ~ "i64"
"(i64, i64)" ~ "(i64, i64)"
## typarams
mempty
## tyvars
[("t\8320",(1,TyVarFree NoLoc Lifted)),("t\8321",(2,TyVarFree NoLoc Lifted))]
## solution
([],[("t\8320",Right "i64"),("t\8321",Right "i64")])

# TySolve.solve
## constraints
"t\8320" ~ "i64"
"t\8321" ~ "i64"
"t\8322" ~ "i64"
"(i64, i64, i64)" ~ "(i64, i64, i64)"
## typarams
mempty
## tyvars
[("t\8320",(1,TyVarFree NoLoc Lifted)),("t\8321",(2,TyVarFree NoLoc Lifted)),("t\8322",(3,TyVarFree NoLoc Lifted))]
## solution
([],[("t\8320",Right "i64"),("t\8321",Right "i64"),("t\8322",Right "i64")])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"num\8321" ~ "i32"
"(x: i64) -> (y: i64) -> i64" ~ "a\8320 -> a\8320 -> a\8320"
"i64" ~ "a\8320"
## typarams
mempty
## tyvars
[("a\8320",(1,TyVarFree NoLoc Unlifted)),("num\8321",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("a\8320",Right "i64"),("num\8321",Right "i32")])

# TySolve.solve
## constraints
"num\8321" ~ "i32"
"(x: i64) -> (y: i64) -> i64" ~ "a\8320 -> a\8320 -> a\8320"
"i64" ~ "a\8320"
## typarams
mempty
## tyvars
[("a\8320",(1,TyVarFree NoLoc Unlifted)),("num\8321",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("a\8320",Right "i64"),("num\8321",Right "i32")])

# TySolve.solve
## constraints
"(x: i64) -> (y: i64) -> i64" ~ "a\8320 -> a\8320 -> a\8320"
"i64" ~ "a\8320"
## typarams
mempty
## tyvars
[("a\8320",(1,TyVarFree NoLoc Unlifted))]
## solution
([],[("a\8320",Right "i64")])

# TySolve.solve
## constraints
"(x: i64) -> (y: i64) -> i64" ~ "a\8320 -> a\8320 -> a\8320"
"i64" ~ "a\8320"
## typarams
mempty
## tyvars
[("a\8320",(1,TyVarFree NoLoc Unlifted))]
## solution
([],[("a\8320",Right "i64")])

# TySolve.solve
## constraints
"u8" ~ "u8"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i8" ~ "i8"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u8" ~ "u8"
"u8" ~ "u8"
"(i8, i8)" ~ "(i8, i8)"
"i8" ~ "i8"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u8" ~ "u8"
"u8" ~ "u8"
"(i8, i8)" ~ "(i8, i8)"
"i8" ~ "i8"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u8" ~ "u8"
"u8" ~ "u8"
"(i8, i8)" ~ "(i8, i8)"
"i8" ~ "i8"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u8" ~ "u8"
"u8" ~ "u8"
"(i8, i8)" ~ "(i8, i8)"
"i8" ~ "i8"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u8" ~ "u8"
"u8" ~ "u8"
"(i8, i8)" ~ "(i8, i8)"
"i8" ~ "i8"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u8" ~ "u8"
"u8" ~ "u8"
"(i8, i8)" ~ "(i8, i8)"
"i8" ~ "i8"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u8" ~ "u8"
"u8" ~ "u8"
"(i8, i8)" ~ "(i8, i8)"
"i8" ~ "i8"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u8" ~ "u8"
"u8" ~ "u8"
"(i8, i8)" ~ "(i8, i8)"
"i8" ~ "i8"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u8" ~ "u8"
"u8" ~ "u8"
"(i8, i8)" ~ "(i8, i8)"
"i8" ~ "i8"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u8" ~ "u8"
"u8" ~ "u8"
"(i8, i8)" ~ "(i8, i8)"
"i8" ~ "i8"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u8" ~ "u8"
"u8" ~ "u8"
"(i8, i8)" ~ "(i8, i8)"
"i8" ~ "i8"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u8" ~ "u8"
"i8" ~ "i8"
"i8" ~ "i8"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u8" ~ "u8"
"u8" ~ "u8"
"(i8, i8)" ~ "(i8, i8)"
"i8" ~ "i8"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u8" ~ "u8"
"u8" ~ "u8"
"(i8, i8)" ~ "(i8, i8)"
"i8" ~ "i8"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u8" ~ "u8"
"u8" ~ "u8"
"(i8, i8)" ~ "(i8, i8)"
"i8" ~ "i8"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u8" ~ "u8"
"i8" ~ "i8"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u16" ~ "u16"
"i8" ~ "i8"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u32" ~ "u32"
"i8" ~ "i8"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u64" ~ "u64"
"i8" ~ "i8"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i8" ~ "i8"
"i8" ~ "i8"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i16" ~ "i16"
"i8" ~ "i8"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i32" ~ "i32"
"i8" ~ "i8"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i64" ~ "i64"
"i8" ~ "i8"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f16" ~ "f16"
"i8" ~ "i8"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f32" ~ "f32"
"i8" ~ "i8"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f64" ~ "f64"
"i8" ~ "i8"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"t\8320" ~ "bool"
"i8" ~ "i8"
## typarams
mempty
## tyvars
[("t\8320",(1,TyVarFree NoLoc Lifted))]
## solution
([],[("t\8320",Right "bool")])

# TySolve.solve
## constraints
"u8" ~ "u8"
"i8" ~ "i8"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u8" ~ "u8"
"i8" ~ "i8"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u8" ~ "u8"
"u8" ~ "u8"
"(i8, i8)" ~ "(i8, i8)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u8" ~ "u8"
"u8" ~ "u8"
"(i8, i8)" ~ "(i8, i8)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u8" ~ "u8"
"u8" ~ "u8"
"(i8, i8)" ~ "(i8, i8)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u8" ~ "u8"
"u8" ~ "u8"
"(i8, i8)" ~ "(i8, i8)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u8" ~ "u8"
"u8" ~ "u8"
"(i8, i8)" ~ "(i8, i8)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u8" ~ "u8"
"u8" ~ "u8"
"t\8324" ~ "bool"
## typarams
mempty
## tyvars
[("t\8324",(3,TyVarPrim NoLoc [Bool,Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64]))]
## solution
([],[("t\8324",Right "bool")])

# TySolve.solve
## constraints
"u8" ~ "u8"
"i8" ~ "i8"
"i8" ~ "i8"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"t\8320" ~ "u8"
## typarams
mempty
## tyvars
[("t\8320",(2,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("t\8320",Right "u8")])

# TySolve.solve
## constraints
"u8" ~ "u8"
"u8" ~ "u8"
"(i8, i8)" ~ "(i8, i8)"
"i8" ~ "i8"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u8" ~ "u8"
"u8" ~ "u8"
"(i8, i8)" ~ "(i8, i8)"
"i8" ~ "i8"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i32" ~ "i32"
"u8" ~ "u8"
"u8" ~ "u8"
"num\8326" ~ "i32"
"u8" ~ "u8"
"u8" ~ "u8"
"u8" ~ "u8"
## typarams
mempty
## tyvars
[("num\8326",(3,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8326",Right "i32")])

# TySolve.solve
## constraints
"num\8321" ~ "t\8320"
"i32" ~ "t\8320"
"t\8326" ~ "t\8320"
"t\8320" ~ "i32"
"u8" ~ "u8"
"u8" ~ "u8"
"i32" ~ "t\8321\8323"
"i32" ~ "t\8321\8323"
"t\8321\8323" ~ "i32"
"u8" ~ "u8"
"u8" ~ "u8"
## typarams
mempty
## tyvars
[("t\8320",(4,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64])),("num\8321",(4,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8326",(4,TyVarPrim NoLoc [Bool,Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64])),("t\8321\8323",(4,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64]))]
## solution
([],[("t\8320",Right "i32"),("num\8321",Right "i32"),("t\8326",Right "i32"),("t\8321\8323",Right "i32")])

# TySolve.solve
## constraints
"t\8320" ~ "u8"
"i8" ~ "i8"
## typarams
mempty
## tyvars
[("t\8320",(1,TyVarFree NoLoc Lifted))]
## solution
([],[("t\8320",Right "u8")])

# TySolve.solve
## constraints
"t\8320" ~ "u8"
"t\8321" ~ "u8"
"(i8, i8)" ~ "(i8, i8)"
"i8" ~ "i8"
## typarams
mempty
## tyvars
[("t\8320",(1,TyVarFree NoLoc Lifted)),("t\8321",(2,TyVarFree NoLoc Lifted))]
## solution
([],[("t\8320",Right "u8"),("t\8321",Right "u8")])

# TySolve.solve
## constraints
"t\8320" ~ "u8"
"t\8321" ~ "u8"
"t\8322" ~ "u8"
"(i8, i8, i8)" ~ "(i8, i8, i8)"
"i8" ~ "i8"
## typarams
mempty
## tyvars
[("t\8320",(1,TyVarFree NoLoc Lifted)),("t\8321",(2,TyVarFree NoLoc Lifted)),("t\8322",(3,TyVarFree NoLoc Lifted))]
## solution
([],[("t\8320",Right "u8"),("t\8321",Right "u8"),("t\8322",Right "u8")])

# TySolve.solve
## constraints
"t\8320" ~ "u8"
"i8" ~ "i8"
## typarams
mempty
## tyvars
[("t\8320",(1,TyVarFree NoLoc Lifted))]
## solution
([],[("t\8320",Right "u8")])

# TySolve.solve
## constraints
"t\8320" ~ "u8"
"i8" ~ "i8"
## typarams
mempty
## tyvars
[("t\8320",(1,TyVarFree NoLoc Lifted))]
## solution
([],[("t\8320",Right "u8")])

# TySolve.solve
## constraints
"num\8321" ~ "i32"
"(x: u8) -> (y: u8) -> u8" ~ "a\8320 -> a\8320 -> a\8320"
"u8" ~ "a\8320"
## typarams
mempty
## tyvars
[("a\8320",(1,TyVarFree NoLoc Unlifted)),("num\8321",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("a\8320",Right "u8"),("num\8321",Right "i32")])

# TySolve.solve
## constraints
"num\8321" ~ "i32"
"(x: u8) -> (y: u8) -> u8" ~ "a\8320 -> a\8320 -> a\8320"
"u8" ~ "a\8320"
## typarams
mempty
## tyvars
[("a\8320",(1,TyVarFree NoLoc Unlifted)),("num\8321",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("a\8320",Right "u8"),("num\8321",Right "i32")])

# TySolve.solve
## constraints
"(x: u8) -> (y: u8) -> u8" ~ "a\8320 -> a\8320 -> a\8320"
"u8" ~ "a\8320"
## typarams
mempty
## tyvars
[("a\8320",(1,TyVarFree NoLoc Unlifted))]
## solution
([],[("a\8320",Right "u8")])

# TySolve.solve
## constraints
"(x: u8) -> (y: u8) -> u8" ~ "a\8320 -> a\8320 -> a\8320"
"u8" ~ "a\8320"
## typarams
mempty
## tyvars
[("a\8320",(1,TyVarFree NoLoc Unlifted))]
## solution
([],[("a\8320",Right "u8")])

# TySolve.solve
## constraints
"u16" ~ "u16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i16" ~ "i16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u16" ~ "u16"
"u16" ~ "u16"
"(i16, i16)" ~ "(i16, i16)"
"i16" ~ "i16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u16" ~ "u16"
"u16" ~ "u16"
"(i16, i16)" ~ "(i16, i16)"
"i16" ~ "i16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u16" ~ "u16"
"u16" ~ "u16"
"(i16, i16)" ~ "(i16, i16)"
"i16" ~ "i16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u16" ~ "u16"
"u16" ~ "u16"
"(i16, i16)" ~ "(i16, i16)"
"i16" ~ "i16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u16" ~ "u16"
"u16" ~ "u16"
"(i16, i16)" ~ "(i16, i16)"
"i16" ~ "i16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u16" ~ "u16"
"u16" ~ "u16"
"(i16, i16)" ~ "(i16, i16)"
"i16" ~ "i16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u16" ~ "u16"
"u16" ~ "u16"
"(i16, i16)" ~ "(i16, i16)"
"i16" ~ "i16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u16" ~ "u16"
"u16" ~ "u16"
"(i16, i16)" ~ "(i16, i16)"
"i16" ~ "i16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u16" ~ "u16"
"u16" ~ "u16"
"(i16, i16)" ~ "(i16, i16)"
"i16" ~ "i16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u16" ~ "u16"
"u16" ~ "u16"
"(i16, i16)" ~ "(i16, i16)"
"i16" ~ "i16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u16" ~ "u16"
"u16" ~ "u16"
"(i16, i16)" ~ "(i16, i16)"
"i16" ~ "i16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u16" ~ "u16"
"i16" ~ "i16"
"i16" ~ "i16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u16" ~ "u16"
"u16" ~ "u16"
"(i16, i16)" ~ "(i16, i16)"
"i16" ~ "i16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u16" ~ "u16"
"u16" ~ "u16"
"(i16, i16)" ~ "(i16, i16)"
"i16" ~ "i16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u16" ~ "u16"
"u16" ~ "u16"
"(i16, i16)" ~ "(i16, i16)"
"i16" ~ "i16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u8" ~ "u8"
"i16" ~ "i16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u16" ~ "u16"
"i16" ~ "i16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u32" ~ "u32"
"i16" ~ "i16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u64" ~ "u64"
"i16" ~ "i16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i8" ~ "i8"
"i16" ~ "i16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i16" ~ "i16"
"i16" ~ "i16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i32" ~ "i32"
"i16" ~ "i16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i64" ~ "i64"
"i16" ~ "i16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f16" ~ "f16"
"i16" ~ "i16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f32" ~ "f32"
"i16" ~ "i16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f64" ~ "f64"
"i16" ~ "i16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"t\8320" ~ "bool"
"i16" ~ "i16"
## typarams
mempty
## tyvars
[("t\8320",(1,TyVarFree NoLoc Lifted))]
## solution
([],[("t\8320",Right "bool")])

# TySolve.solve
## constraints
"u16" ~ "u16"
"i16" ~ "i16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u16" ~ "u16"
"i16" ~ "i16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u16" ~ "u16"
"u16" ~ "u16"
"(i16, i16)" ~ "(i16, i16)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u16" ~ "u16"
"u16" ~ "u16"
"(i16, i16)" ~ "(i16, i16)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u16" ~ "u16"
"u16" ~ "u16"
"(i16, i16)" ~ "(i16, i16)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u16" ~ "u16"
"u16" ~ "u16"
"(i16, i16)" ~ "(i16, i16)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u16" ~ "u16"
"u16" ~ "u16"
"(i16, i16)" ~ "(i16, i16)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u16" ~ "u16"
"u16" ~ "u16"
"t\8324" ~ "bool"
## typarams
mempty
## tyvars
[("t\8324",(3,TyVarPrim NoLoc [Bool,Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64]))]
## solution
([],[("t\8324",Right "bool")])

# TySolve.solve
## constraints
"u16" ~ "u16"
"i16" ~ "i16"
"i16" ~ "i16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"t\8320" ~ "u16"
## typarams
mempty
## tyvars
[("t\8320",(2,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("t\8320",Right "u16")])

# TySolve.solve
## constraints
"u16" ~ "u16"
"u16" ~ "u16"
"(i16, i16)" ~ "(i16, i16)"
"i16" ~ "i16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u16" ~ "u16"
"u16" ~ "u16"
"(i16, i16)" ~ "(i16, i16)"
"i16" ~ "i16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i32" ~ "i32"
"u16" ~ "u16"
"u16" ~ "u16"
"num\8326" ~ "i32"
"u16" ~ "u16"
"u16" ~ "u16"
"u16" ~ "u16"
## typarams
mempty
## tyvars
[("num\8326",(3,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8326",Right "i32")])

# TySolve.solve
## constraints
"num\8321" ~ "t\8320"
"i32" ~ "t\8320"
"t\8326" ~ "t\8320"
"t\8320" ~ "i32"
"u16" ~ "u16"
"u16" ~ "u16"
"i32" ~ "t\8321\8323"
"i32" ~ "t\8321\8323"
"t\8321\8323" ~ "i32"
"u16" ~ "u16"
"u16" ~ "u16"
## typarams
mempty
## tyvars
[("t\8320",(4,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64])),("num\8321",(4,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8326",(4,TyVarPrim NoLoc [Bool,Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64])),("t\8321\8323",(4,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64]))]
## solution
([],[("t\8320",Right "i32"),("num\8321",Right "i32"),("t\8326",Right "i32"),("t\8321\8323",Right "i32")])

# TySolve.solve
## constraints
"t\8320" ~ "u16"
"i16" ~ "i16"
## typarams
mempty
## tyvars
[("t\8320",(1,TyVarFree NoLoc Lifted))]
## solution
([],[("t\8320",Right "u16")])

# TySolve.solve
## constraints
"t\8320" ~ "u16"
"t\8321" ~ "u16"
"(i16, i16)" ~ "(i16, i16)"
"i16" ~ "i16"
## typarams
mempty
## tyvars
[("t\8320",(1,TyVarFree NoLoc Lifted)),("t\8321",(2,TyVarFree NoLoc Lifted))]
## solution
([],[("t\8320",Right "u16"),("t\8321",Right "u16")])

# TySolve.solve
## constraints
"t\8320" ~ "u16"
"t\8321" ~ "u16"
"t\8322" ~ "u16"
"(i16, i16, i16)" ~ "(i16, i16, i16)"
"i16" ~ "i16"
## typarams
mempty
## tyvars
[("t\8320",(1,TyVarFree NoLoc Lifted)),("t\8321",(2,TyVarFree NoLoc Lifted)),("t\8322",(3,TyVarFree NoLoc Lifted))]
## solution
([],[("t\8320",Right "u16"),("t\8321",Right "u16"),("t\8322",Right "u16")])

# TySolve.solve
## constraints
"t\8320" ~ "u16"
"i16" ~ "i16"
## typarams
mempty
## tyvars
[("t\8320",(1,TyVarFree NoLoc Lifted))]
## solution
([],[("t\8320",Right "u16")])

# TySolve.solve
## constraints
"t\8320" ~ "u16"
"i16" ~ "i16"
## typarams
mempty
## tyvars
[("t\8320",(1,TyVarFree NoLoc Lifted))]
## solution
([],[("t\8320",Right "u16")])

# TySolve.solve
## constraints
"num\8321" ~ "i32"
"(x: u16) -> (y: u16) -> u16" ~ "a\8320 -> a\8320 -> a\8320"
"u16" ~ "a\8320"
## typarams
mempty
## tyvars
[("a\8320",(1,TyVarFree NoLoc Unlifted)),("num\8321",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("a\8320",Right "u16"),("num\8321",Right "i32")])

# TySolve.solve
## constraints
"num\8321" ~ "i32"
"(x: u16) -> (y: u16) -> u16" ~ "a\8320 -> a\8320 -> a\8320"
"u16" ~ "a\8320"
## typarams
mempty
## tyvars
[("a\8320",(1,TyVarFree NoLoc Unlifted)),("num\8321",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("a\8320",Right "u16"),("num\8321",Right "i32")])

# TySolve.solve
## constraints
"(x: u16) -> (y: u16) -> u16" ~ "a\8320 -> a\8320 -> a\8320"
"u16" ~ "a\8320"
## typarams
mempty
## tyvars
[("a\8320",(1,TyVarFree NoLoc Unlifted))]
## solution
([],[("a\8320",Right "u16")])

# TySolve.solve
## constraints
"(x: u16) -> (y: u16) -> u16" ~ "a\8320 -> a\8320 -> a\8320"
"u16" ~ "a\8320"
## typarams
mempty
## tyvars
[("a\8320",(1,TyVarFree NoLoc Unlifted))]
## solution
([],[("a\8320",Right "u16")])

# TySolve.solve
## constraints
"u32" ~ "u32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i32" ~ "i32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u32" ~ "u32"
"u32" ~ "u32"
"(i32, i32)" ~ "(i32, i32)"
"i32" ~ "i32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u32" ~ "u32"
"u32" ~ "u32"
"(i32, i32)" ~ "(i32, i32)"
"i32" ~ "i32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u32" ~ "u32"
"u32" ~ "u32"
"(i32, i32)" ~ "(i32, i32)"
"i32" ~ "i32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u32" ~ "u32"
"u32" ~ "u32"
"(i32, i32)" ~ "(i32, i32)"
"i32" ~ "i32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u32" ~ "u32"
"u32" ~ "u32"
"(i32, i32)" ~ "(i32, i32)"
"i32" ~ "i32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u32" ~ "u32"
"u32" ~ "u32"
"(i32, i32)" ~ "(i32, i32)"
"i32" ~ "i32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u32" ~ "u32"
"u32" ~ "u32"
"(i32, i32)" ~ "(i32, i32)"
"i32" ~ "i32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u32" ~ "u32"
"u32" ~ "u32"
"(i32, i32)" ~ "(i32, i32)"
"i32" ~ "i32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u32" ~ "u32"
"u32" ~ "u32"
"(i32, i32)" ~ "(i32, i32)"
"i32" ~ "i32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u32" ~ "u32"
"u32" ~ "u32"
"(i32, i32)" ~ "(i32, i32)"
"i32" ~ "i32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u32" ~ "u32"
"u32" ~ "u32"
"(i32, i32)" ~ "(i32, i32)"
"i32" ~ "i32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u32" ~ "u32"
"i32" ~ "i32"
"i32" ~ "i32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u32" ~ "u32"
"u32" ~ "u32"
"(i32, i32)" ~ "(i32, i32)"
"i32" ~ "i32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u32" ~ "u32"
"u32" ~ "u32"
"(i32, i32)" ~ "(i32, i32)"
"i32" ~ "i32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u32" ~ "u32"
"u32" ~ "u32"
"(i32, i32)" ~ "(i32, i32)"
"i32" ~ "i32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u8" ~ "u8"
"i32" ~ "i32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u16" ~ "u16"
"i32" ~ "i32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u32" ~ "u32"
"i32" ~ "i32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u64" ~ "u64"
"i32" ~ "i32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i8" ~ "i8"
"i32" ~ "i32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i16" ~ "i16"
"i32" ~ "i32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i32" ~ "i32"
"i32" ~ "i32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i64" ~ "i64"
"i32" ~ "i32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f16" ~ "f16"
"i32" ~ "i32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f32" ~ "f32"
"i32" ~ "i32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f64" ~ "f64"
"i32" ~ "i32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"t\8320" ~ "bool"
"i32" ~ "i32"
## typarams
mempty
## tyvars
[("t\8320",(1,TyVarFree NoLoc Lifted))]
## solution
([],[("t\8320",Right "bool")])

# TySolve.solve
## constraints
"u32" ~ "u32"
"i32" ~ "i32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u32" ~ "u32"
"i32" ~ "i32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u32" ~ "u32"
"u32" ~ "u32"
"(i32, i32)" ~ "(i32, i32)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u32" ~ "u32"
"u32" ~ "u32"
"(i32, i32)" ~ "(i32, i32)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u32" ~ "u32"
"u32" ~ "u32"
"(i32, i32)" ~ "(i32, i32)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u32" ~ "u32"
"u32" ~ "u32"
"(i32, i32)" ~ "(i32, i32)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u32" ~ "u32"
"u32" ~ "u32"
"(i32, i32)" ~ "(i32, i32)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u32" ~ "u32"
"u32" ~ "u32"
"t\8324" ~ "bool"
## typarams
mempty
## tyvars
[("t\8324",(3,TyVarPrim NoLoc [Bool,Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64]))]
## solution
([],[("t\8324",Right "bool")])

# TySolve.solve
## constraints
"u32" ~ "u32"
"i32" ~ "i32"
"i32" ~ "i32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u32" ~ "u32"
"u32" ~ "u32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"t\8320" ~ "u32"
## typarams
mempty
## tyvars
[("t\8320",(2,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("t\8320",Right "u32")])

# TySolve.solve
## constraints
"u32" ~ "u32"
"u32" ~ "u32"
"(i32, i32)" ~ "(i32, i32)"
"i32" ~ "i32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u32" ~ "u32"
"u32" ~ "u32"
"(i32, i32)" ~ "(i32, i32)"
"i32" ~ "i32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i32" ~ "i32"
"u32" ~ "u32"
"u32" ~ "u32"
"num\8326" ~ "i32"
"u32" ~ "u32"
"u32" ~ "u32"
"u32" ~ "u32"
## typarams
mempty
## tyvars
[("num\8326",(3,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8326",Right "i32")])

# TySolve.solve
## constraints
"num\8321" ~ "t\8320"
"i32" ~ "t\8320"
"t\8326" ~ "t\8320"
"t\8320" ~ "i32"
"u32" ~ "u32"
"u32" ~ "u32"
"i32" ~ "t\8321\8323"
"i32" ~ "t\8321\8323"
"t\8321\8323" ~ "i32"
"u32" ~ "u32"
"u32" ~ "u32"
## typarams
mempty
## tyvars
[("t\8320",(4,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64])),("num\8321",(4,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8326",(4,TyVarPrim NoLoc [Bool,Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64])),("t\8321\8323",(4,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64]))]
## solution
([],[("t\8320",Right "i32"),("num\8321",Right "i32"),("t\8326",Right "i32"),("t\8321\8323",Right "i32")])

# TySolve.solve
## constraints
"t\8320" ~ "u32"
"i32" ~ "i32"
## typarams
mempty
## tyvars
[("t\8320",(1,TyVarFree NoLoc Lifted))]
## solution
([],[("t\8320",Right "u32")])

# TySolve.solve
## constraints
"t\8320" ~ "u32"
"t\8321" ~ "u32"
"(i32, i32)" ~ "(i32, i32)"
"i32" ~ "i32"
## typarams
mempty
## tyvars
[("t\8320",(1,TyVarFree NoLoc Lifted)),("t\8321",(2,TyVarFree NoLoc Lifted))]
## solution
([],[("t\8320",Right "u32"),("t\8321",Right "u32")])

# TySolve.solve
## constraints
"t\8320" ~ "u32"
"t\8321" ~ "u32"
"t\8322" ~ "u32"
"(i32, i32, i32)" ~ "(i32, i32, i32)"
"i32" ~ "i32"
## typarams
mempty
## tyvars
[("t\8320",(1,TyVarFree NoLoc Lifted)),("t\8321",(2,TyVarFree NoLoc Lifted)),("t\8322",(3,TyVarFree NoLoc Lifted))]
## solution
([],[("t\8320",Right "u32"),("t\8321",Right "u32"),("t\8322",Right "u32")])

# TySolve.solve
## constraints
"t\8320" ~ "u32"
"i32" ~ "i32"
## typarams
mempty
## tyvars
[("t\8320",(1,TyVarFree NoLoc Lifted))]
## solution
([],[("t\8320",Right "u32")])

# TySolve.solve
## constraints
"t\8320" ~ "u32"
"i32" ~ "i32"
## typarams
mempty
## tyvars
[("t\8320",(1,TyVarFree NoLoc Lifted))]
## solution
([],[("t\8320",Right "u32")])

# TySolve.solve
## constraints
"num\8321" ~ "i32"
"(x: u32) -> (y: u32) -> u32" ~ "a\8320 -> a\8320 -> a\8320"
"u32" ~ "a\8320"
## typarams
mempty
## tyvars
[("a\8320",(1,TyVarFree NoLoc Unlifted)),("num\8321",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("a\8320",Right "u32"),("num\8321",Right "i32")])

# TySolve.solve
## constraints
"num\8321" ~ "i32"
"(x: u32) -> (y: u32) -> u32" ~ "a\8320 -> a\8320 -> a\8320"
"u32" ~ "a\8320"
## typarams
mempty
## tyvars
[("a\8320",(1,TyVarFree NoLoc Unlifted)),("num\8321",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("a\8320",Right "u32"),("num\8321",Right "i32")])

# TySolve.solve
## constraints
"(x: u32) -> (y: u32) -> u32" ~ "a\8320 -> a\8320 -> a\8320"
"u32" ~ "a\8320"
## typarams
mempty
## tyvars
[("a\8320",(1,TyVarFree NoLoc Unlifted))]
## solution
([],[("a\8320",Right "u32")])

# TySolve.solve
## constraints
"(x: u32) -> (y: u32) -> u32" ~ "a\8320 -> a\8320 -> a\8320"
"u32" ~ "a\8320"
## typarams
mempty
## tyvars
[("a\8320",(1,TyVarFree NoLoc Unlifted))]
## solution
([],[("a\8320",Right "u32")])

# TySolve.solve
## constraints
"u64" ~ "u64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i64" ~ "i64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u64" ~ "u64"
"u64" ~ "u64"
"(i64, i64)" ~ "(i64, i64)"
"i64" ~ "i64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u64" ~ "u64"
"u64" ~ "u64"
"(i64, i64)" ~ "(i64, i64)"
"i64" ~ "i64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u64" ~ "u64"
"u64" ~ "u64"
"(i64, i64)" ~ "(i64, i64)"
"i64" ~ "i64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u64" ~ "u64"
"u64" ~ "u64"
"(i64, i64)" ~ "(i64, i64)"
"i64" ~ "i64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u64" ~ "u64"
"u64" ~ "u64"
"(i64, i64)" ~ "(i64, i64)"
"i64" ~ "i64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u64" ~ "u64"
"u64" ~ "u64"
"(i64, i64)" ~ "(i64, i64)"
"i64" ~ "i64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u64" ~ "u64"
"u64" ~ "u64"
"(i64, i64)" ~ "(i64, i64)"
"i64" ~ "i64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u64" ~ "u64"
"u64" ~ "u64"
"(i64, i64)" ~ "(i64, i64)"
"i64" ~ "i64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u64" ~ "u64"
"u64" ~ "u64"
"(i64, i64)" ~ "(i64, i64)"
"i64" ~ "i64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u64" ~ "u64"
"u64" ~ "u64"
"(i64, i64)" ~ "(i64, i64)"
"i64" ~ "i64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u64" ~ "u64"
"u64" ~ "u64"
"(i64, i64)" ~ "(i64, i64)"
"i64" ~ "i64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u64" ~ "u64"
"i64" ~ "i64"
"i64" ~ "i64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u64" ~ "u64"
"u64" ~ "u64"
"(i64, i64)" ~ "(i64, i64)"
"i64" ~ "i64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u64" ~ "u64"
"u64" ~ "u64"
"(i64, i64)" ~ "(i64, i64)"
"i64" ~ "i64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u64" ~ "u64"
"u64" ~ "u64"
"(i64, i64)" ~ "(i64, i64)"
"i64" ~ "i64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u8" ~ "u8"
"i64" ~ "i64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u16" ~ "u16"
"i64" ~ "i64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u32" ~ "u32"
"i64" ~ "i64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u64" ~ "u64"
"i64" ~ "i64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i8" ~ "i8"
"i64" ~ "i64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i16" ~ "i16"
"i64" ~ "i64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i32" ~ "i32"
"i64" ~ "i64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i64" ~ "i64"
"i64" ~ "i64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f16" ~ "f16"
"i64" ~ "i64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f32" ~ "f32"
"i64" ~ "i64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f64" ~ "f64"
"i64" ~ "i64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"t\8320" ~ "bool"
"i64" ~ "i64"
## typarams
mempty
## tyvars
[("t\8320",(1,TyVarFree NoLoc Lifted))]
## solution
([],[("t\8320",Right "bool")])

# TySolve.solve
## constraints
"u64" ~ "u64"
"i64" ~ "i64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u64" ~ "u64"
"i64" ~ "i64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u64" ~ "u64"
"u64" ~ "u64"
"(i64, i64)" ~ "(i64, i64)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u64" ~ "u64"
"u64" ~ "u64"
"(i64, i64)" ~ "(i64, i64)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u64" ~ "u64"
"u64" ~ "u64"
"(i64, i64)" ~ "(i64, i64)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u64" ~ "u64"
"u64" ~ "u64"
"(i64, i64)" ~ "(i64, i64)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u64" ~ "u64"
"u64" ~ "u64"
"(i64, i64)" ~ "(i64, i64)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u64" ~ "u64"
"u64" ~ "u64"
"t\8324" ~ "bool"
## typarams
mempty
## tyvars
[("t\8324",(3,TyVarPrim NoLoc [Bool,Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64]))]
## solution
([],[("t\8324",Right "bool")])

# TySolve.solve
## constraints
"u64" ~ "u64"
"i64" ~ "i64"
"i64" ~ "i64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"t\8320" ~ "u64"
## typarams
mempty
## tyvars
[("t\8320",(2,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("t\8320",Right "u64")])

# TySolve.solve
## constraints
"u64" ~ "u64"
"u64" ~ "u64"
"(i64, i64)" ~ "(i64, i64)"
"i64" ~ "i64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u64" ~ "u64"
"u64" ~ "u64"
"(i64, i64)" ~ "(i64, i64)"
"i64" ~ "i64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u64" ~ "u64"
"u64" ~ "u64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i32" ~ "i32"
"u64" ~ "u64"
"u64" ~ "u64"
"num\8326" ~ "i32"
"u64" ~ "u64"
"u64" ~ "u64"
"u64" ~ "u64"
## typarams
mempty
## tyvars
[("num\8326",(3,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8326",Right "i32")])

# TySolve.solve
## constraints
"num\8321" ~ "t\8320"
"i32" ~ "t\8320"
"t\8326" ~ "t\8320"
"t\8320" ~ "i32"
"u64" ~ "u64"
"u64" ~ "u64"
"i32" ~ "t\8321\8323"
"i32" ~ "t\8321\8323"
"t\8321\8323" ~ "i32"
"u64" ~ "u64"
"u64" ~ "u64"
## typarams
mempty
## tyvars
[("t\8320",(4,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64])),("num\8321",(4,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8326",(4,TyVarPrim NoLoc [Bool,Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64])),("t\8321\8323",(4,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64]))]
## solution
([],[("t\8320",Right "i32"),("num\8321",Right "i32"),("t\8326",Right "i32"),("t\8321\8323",Right "i32")])

# TySolve.solve
## constraints
"t\8320" ~ "u64"
"i64" ~ "i64"
## typarams
mempty
## tyvars
[("t\8320",(1,TyVarFree NoLoc Lifted))]
## solution
([],[("t\8320",Right "u64")])

# TySolve.solve
## constraints
"t\8320" ~ "u64"
"t\8321" ~ "u64"
"(i64, i64)" ~ "(i64, i64)"
"i64" ~ "i64"
## typarams
mempty
## tyvars
[("t\8320",(1,TyVarFree NoLoc Lifted)),("t\8321",(2,TyVarFree NoLoc Lifted))]
## solution
([],[("t\8320",Right "u64"),("t\8321",Right "u64")])

# TySolve.solve
## constraints
"t\8320" ~ "u64"
"t\8321" ~ "u64"
"t\8322" ~ "u64"
"(i64, i64, i64)" ~ "(i64, i64, i64)"
"i64" ~ "i64"
## typarams
mempty
## tyvars
[("t\8320",(1,TyVarFree NoLoc Lifted)),("t\8321",(2,TyVarFree NoLoc Lifted)),("t\8322",(3,TyVarFree NoLoc Lifted))]
## solution
([],[("t\8320",Right "u64"),("t\8321",Right "u64"),("t\8322",Right "u64")])

# TySolve.solve
## constraints
"t\8320" ~ "u64"
"i64" ~ "i64"
## typarams
mempty
## tyvars
[("t\8320",(1,TyVarFree NoLoc Lifted))]
## solution
([],[("t\8320",Right "u64")])

# TySolve.solve
## constraints
"t\8320" ~ "u64"
"i64" ~ "i64"
## typarams
mempty
## tyvars
[("t\8320",(1,TyVarFree NoLoc Lifted))]
## solution
([],[("t\8320",Right "u64")])

# TySolve.solve
## constraints
"num\8321" ~ "i32"
"(x: u64) -> (y: u64) -> u64" ~ "a\8320 -> a\8320 -> a\8320"
"u64" ~ "a\8320"
## typarams
mempty
## tyvars
[("a\8320",(1,TyVarFree NoLoc Unlifted)),("num\8321",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("a\8320",Right "u64"),("num\8321",Right "i32")])

# TySolve.solve
## constraints
"num\8321" ~ "i32"
"(x: u64) -> (y: u64) -> u64" ~ "a\8320 -> a\8320 -> a\8320"
"u64" ~ "a\8320"
## typarams
mempty
## tyvars
[("a\8320",(1,TyVarFree NoLoc Unlifted)),("num\8321",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("a\8320",Right "u64"),("num\8321",Right "i32")])

# TySolve.solve
## constraints
"(x: u64) -> (y: u64) -> u64" ~ "a\8320 -> a\8320 -> a\8320"
"u64" ~ "a\8320"
## typarams
mempty
## tyvars
[("a\8320",(1,TyVarFree NoLoc Unlifted))]
## solution
([],[("a\8320",Right "u64")])

# TySolve.solve
## constraints
"(x: u64) -> (y: u64) -> u64" ~ "a\8320 -> a\8320 -> a\8320"
"u64" ~ "a\8320"
## typarams
mempty
## tyvars
[("a\8320",(1,TyVarFree NoLoc Unlifted))]
## solution
([],[("a\8320",Right "u64")])

# TySolve.solve
## constraints
"(f64, f64)" ~ "(f64, f64)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(f64, f64)" ~ "(f64, f64)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(f64, f64)" ~ "(f64, f64)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(f64, f64)" ~ "(f64, f64)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(f64, f64)" ~ "(f64, f64)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(f64, f64)" ~ "(f64, f64)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u8" ~ "u8"
"i8" ~ "i8"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u16" ~ "u16"
"i16" ~ "i16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u32" ~ "u32"
"i32" ~ "i32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u64" ~ "u64"
"i64" ~ "i64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i8" ~ "i8"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i16" ~ "i16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i32" ~ "i32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i64" ~ "i64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f16" ~ "f16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f32" ~ "f32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f64" ~ "f64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"bool" ~ "bool"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i64" ~ "i64"
"i64" ~ "i64"
"f64" ~ "f64"
"f64" ~ "f64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f64" ~ "f64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(f64, f64)" ~ "(f64, f64)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(f64, f64)" ~ "(f64, f64)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(f64, f64)" ~ "(f64, f64)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(f64, f64)" ~ "(f64, f64)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(f64, f64)" ~ "(f64, f64)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f64" ~ "f64"
"f64" ~ "f64"
"t\8324" ~ "bool"
## typarams
mempty
## tyvars
[("t\8324",(3,TyVarPrim NoLoc [Bool,Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64]))]
## solution
([],[("t\8324",Right "bool")])

# TySolve.solve
## constraints
"t\8320" ~ "f64"
## typarams
mempty
## tyvars
[("t\8320",(2,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("t\8320",Right "f64")])

# TySolve.solve
## constraints
"num\8320" ~ "f64"
"f64" ~ "f64"
## typarams
mempty
## tyvars
[("num\8320",(2,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "f64")])

# TySolve.solve
## constraints
"(f64, f64)" ~ "(f64, f64)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(f64, f64)" ~ "(f64, f64)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f64" ~ "f64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f64" ~ "f64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f64" ~ "f64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f64" ~ "f64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f64" ~ "f64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f64" ~ "f64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f64" ~ "f64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f64" ~ "f64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f64" ~ "f64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f64" ~ "f64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f64" ~ "f64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f64" ~ "f64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f64" ~ "f64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f64" ~ "f64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f64" ~ "f64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f64" ~ "f64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f64" ~ "f64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f64" ~ "f64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f64" ~ "f64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f64" ~ "f64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f64" ~ "f64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f64" ~ "f64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f64" ~ "f64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f64" ~ "f64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f64" ~ "f64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f64" ~ "f64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f64" ~ "f64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f64" ~ "f64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(f64, f64)" ~ "(f64, f64)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(f64, f64)" ~ "(f64, f64)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(f64, f64)" ~ "(f64, f64)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(t\8320, t\8321, t\8322)" ~ "(f64, f64, f64)"
## typarams
mempty
## tyvars
[("t\8320",(1,TyVarFree NoLoc Lifted)),("t\8321",(2,TyVarFree NoLoc Lifted)),("t\8322",(3,TyVarFree NoLoc Lifted))]
## solution
([],[("t\8320",Right "f64"),("t\8321",Right "f64"),("t\8322",Right "f64")])

# TySolve.solve
## constraints
"(t\8320, t\8321, t\8322)" ~ "(f64, f64, f64)"
## typarams
mempty
## tyvars
[("t\8320",(1,TyVarFree NoLoc Lifted)),("t\8321",(2,TyVarFree NoLoc Lifted)),("t\8322",(3,TyVarFree NoLoc Lifted))]
## solution
([],[("t\8320",Right "f64"),("t\8321",Right "f64"),("t\8322",Right "f64")])

# TySolve.solve
## constraints
"(t\8320, t\8321, t\8322)" ~ "(f64, f64, f64)"
## typarams
mempty
## tyvars
[("t\8320",(1,TyVarFree NoLoc Lifted)),("t\8321",(2,TyVarFree NoLoc Lifted)),("t\8322",(3,TyVarFree NoLoc Lifted))]
## solution
([],[("t\8320",Right "f64"),("t\8321",Right "f64"),("t\8322",Right "f64")])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f64" ~ "f64"
"i64" ~ "i64"
"f64" ~ "f64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(t\8320, t\8321)" ~ "(f64, f64)"
## typarams
mempty
## tyvars
[("t\8320",(1,TyVarFree NoLoc Lifted)),("t\8321",(2,TyVarFree NoLoc Lifted))]
## solution
([],[("t\8320",Right "f64"),("t\8321",Right "f64")])

# TySolve.solve
## constraints
"(t\8320, t\8321)" ~ "(f64, i32)"
## typarams
mempty
## tyvars
[("t\8320",(1,TyVarFree NoLoc Lifted)),("t\8321",(2,TyVarFree NoLoc Lifted))]
## solution
([],[("t\8320",Right "f64"),("t\8321",Right "i32")])

# TySolve.solve
## constraints
"(t\8320, t\8321)" ~ "(f64, f64)"
## typarams
mempty
## tyvars
[("t\8320",(1,TyVarFree NoLoc Lifted)),("t\8321",(2,TyVarFree NoLoc Lifted))]
## solution
([],[("t\8320",Right "f64"),("t\8321",Right "f64")])

# TySolve.solve
## constraints
"f64" ~ "f64"
"i64" ~ "i64"
"u64" ~ "u64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u64" ~ "u64"
"i64" ~ "i64"
"f64" ~ "f64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f64" ~ "f64"
"i32" ~ "i32"
"u64" ~ "u64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f64" ~ "f64"
"i32" ~ "i32"
"u64" ~ "u64"
"i32" ~ "i32"
"u64" ~ "u64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f64" ~ "f64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f64" ~ "f64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f64" ~ "f64"
"f64" ~ "f64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f64" ~ "f64"
"f64" ~ "f64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"t\8320" ~ "f64"
## typarams
mempty
## tyvars
[("t\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("t\8320",Right "f64")])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"num\8321" ~ "i32"
"(x: f64) -> (y: f64) -> f64" ~ "a\8320 -> a\8320 -> a\8320"
"f64" ~ "a\8320"
## typarams
mempty
## tyvars
[("a\8320",(1,TyVarFree NoLoc Unlifted)),("num\8321",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("a\8320",Right "f64"),("num\8321",Right "i32")])

# TySolve.solve
## constraints
"num\8321" ~ "i32"
"(x: f64) -> (y: f64) -> f64" ~ "a\8320 -> a\8320 -> a\8320"
"f64" ~ "a\8320"
## typarams
mempty
## tyvars
[("a\8320",(1,TyVarFree NoLoc Unlifted)),("num\8321",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("a\8320",Right "f64"),("num\8321",Right "i32")])

# TySolve.solve
## constraints
"(x: f64) -> (y: f64) -> f64" ~ "a\8320 -> a\8320 -> a\8320"
"f64" ~ "a\8320"
## typarams
mempty
## tyvars
[("a\8320",(1,TyVarFree NoLoc Unlifted))]
## solution
([],[("a\8320",Right "f64")])

# TySolve.solve
## constraints
"(x: f64) -> (y: f64) -> f64" ~ "a\8320 -> a\8320 -> a\8320"
"f64" ~ "a\8320"
## typarams
mempty
## tyvars
[("a\8320",(1,TyVarFree NoLoc Unlifted))]
## solution
([],[("a\8320",Right "f64")])

# TySolve.solve
## constraints
"(f32, f32)" ~ "(f32, f32)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(f32, f32)" ~ "(f32, f32)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(f32, f32)" ~ "(f32, f32)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(f32, f32)" ~ "(f32, f32)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(f32, f32)" ~ "(f32, f32)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(f32, f32)" ~ "(f32, f32)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u8" ~ "u8"
"i8" ~ "i8"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u16" ~ "u16"
"i16" ~ "i16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u32" ~ "u32"
"i32" ~ "i32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u64" ~ "u64"
"i64" ~ "i64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i8" ~ "i8"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i16" ~ "i16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i32" ~ "i32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i64" ~ "i64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f16" ~ "f16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f32" ~ "f32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f64" ~ "f64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"bool" ~ "bool"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i64" ~ "i64"
"i64" ~ "i64"
"f32" ~ "f32"
"f32" ~ "f32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f32" ~ "f32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f32" ~ "f32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(f32, f32)" ~ "(f32, f32)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(f32, f32)" ~ "(f32, f32)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(f32, f32)" ~ "(f32, f32)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(f32, f32)" ~ "(f32, f32)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(f32, f32)" ~ "(f32, f32)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f32" ~ "f32"
"f32" ~ "f32"
"t\8324" ~ "bool"
## typarams
mempty
## tyvars
[("t\8324",(3,TyVarPrim NoLoc [Bool,Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64]))]
## solution
([],[("t\8324",Right "bool")])

# TySolve.solve
## constraints
"t\8320" ~ "f32"
## typarams
mempty
## tyvars
[("t\8320",(2,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("t\8320",Right "f32")])

# TySolve.solve
## constraints
"num\8320" ~ "f32"
"f32" ~ "f32"
## typarams
mempty
## tyvars
[("num\8320",(2,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "f32")])

# TySolve.solve
## constraints
"(f32, f32)" ~ "(f32, f32)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(f32, f32)" ~ "(f32, f32)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f32" ~ "f32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f32" ~ "f32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f32" ~ "f32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f32" ~ "f32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f32" ~ "f32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f32" ~ "f32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f32" ~ "f32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f32" ~ "f32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f32" ~ "f32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f32" ~ "f32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f32" ~ "f32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f32" ~ "f32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f32" ~ "f32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f32" ~ "f32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f32" ~ "f32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f32" ~ "f32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f32" ~ "f32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f32" ~ "f32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f32" ~ "f32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f32" ~ "f32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f32" ~ "f32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f32" ~ "f32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f32" ~ "f32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f32" ~ "f32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f32" ~ "f32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f32" ~ "f32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f32" ~ "f32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f32" ~ "f32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(f32, f32)" ~ "(f32, f32)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(f32, f32)" ~ "(f32, f32)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(f32, f32)" ~ "(f32, f32)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(t\8320, t\8321, t\8322)" ~ "(f32, f32, f32)"
## typarams
mempty
## tyvars
[("t\8320",(1,TyVarFree NoLoc Lifted)),("t\8321",(2,TyVarFree NoLoc Lifted)),("t\8322",(3,TyVarFree NoLoc Lifted))]
## solution
([],[("t\8320",Right "f32"),("t\8321",Right "f32"),("t\8322",Right "f32")])

# TySolve.solve
## constraints
"(t\8320, t\8321, t\8322)" ~ "(f32, f32, f32)"
## typarams
mempty
## tyvars
[("t\8320",(1,TyVarFree NoLoc Lifted)),("t\8321",(2,TyVarFree NoLoc Lifted)),("t\8322",(3,TyVarFree NoLoc Lifted))]
## solution
([],[("t\8320",Right "f32"),("t\8321",Right "f32"),("t\8322",Right "f32")])

# TySolve.solve
## constraints
"(t\8320, t\8321, t\8322)" ~ "(f32, f32, f32)"
## typarams
mempty
## tyvars
[("t\8320",(1,TyVarFree NoLoc Lifted)),("t\8321",(2,TyVarFree NoLoc Lifted)),("t\8322",(3,TyVarFree NoLoc Lifted))]
## solution
([],[("t\8320",Right "f32"),("t\8321",Right "f32"),("t\8322",Right "f32")])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f32" ~ "f32"
"i32" ~ "i32"
"f32" ~ "f32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(t\8320, t\8321)" ~ "(f32, f32)"
## typarams
mempty
## tyvars
[("t\8320",(1,TyVarFree NoLoc Lifted)),("t\8321",(2,TyVarFree NoLoc Lifted))]
## solution
([],[("t\8320",Right "f32"),("t\8321",Right "f32")])

# TySolve.solve
## constraints
"(t\8320, t\8321)" ~ "(f32, i32)"
## typarams
mempty
## tyvars
[("t\8320",(1,TyVarFree NoLoc Lifted)),("t\8321",(2,TyVarFree NoLoc Lifted))]
## solution
([],[("t\8320",Right "f32"),("t\8321",Right "i32")])

# TySolve.solve
## constraints
"(t\8320, t\8321)" ~ "(f32, f32)"
## typarams
mempty
## tyvars
[("t\8320",(1,TyVarFree NoLoc Lifted)),("t\8321",(2,TyVarFree NoLoc Lifted))]
## solution
([],[("t\8320",Right "f32"),("t\8321",Right "f32")])

# TySolve.solve
## constraints
"f32" ~ "f32"
"i32" ~ "i32"
"u32" ~ "u32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u32" ~ "u32"
"i32" ~ "i32"
"f32" ~ "f32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f32" ~ "f32"
"i32" ~ "i32"
"u32" ~ "u32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f32" ~ "f32"
"i32" ~ "i32"
"u32" ~ "u32"
"i32" ~ "i32"
"u32" ~ "u32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f32" ~ "f32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f32" ~ "f32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f32" ~ "f32"
"f32" ~ "f32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f32" ~ "f32"
"f32" ~ "f32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"t\8320" ~ "f32"
## typarams
mempty
## tyvars
[("t\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("t\8320",Right "f32")])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f64" ~ "f64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f64" ~ "f64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"num\8321" ~ "i32"
"(x: f32) -> (y: f32) -> f32" ~ "a\8320 -> a\8320 -> a\8320"
"f32" ~ "a\8320"
## typarams
mempty
## tyvars
[("a\8320",(1,TyVarFree NoLoc Unlifted)),("num\8321",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("a\8320",Right "f32"),("num\8321",Right "i32")])

# TySolve.solve
## constraints
"num\8321" ~ "i32"
"(x: f32) -> (y: f32) -> f32" ~ "a\8320 -> a\8320 -> a\8320"
"f32" ~ "a\8320"
## typarams
mempty
## tyvars
[("a\8320",(1,TyVarFree NoLoc Unlifted)),("num\8321",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("a\8320",Right "f32"),("num\8321",Right "i32")])

# TySolve.solve
## constraints
"(x: f32) -> (y: f32) -> f32" ~ "a\8320 -> a\8320 -> a\8320"
"f32" ~ "a\8320"
## typarams
mempty
## tyvars
[("a\8320",(1,TyVarFree NoLoc Unlifted))]
## solution
([],[("a\8320",Right "f32")])

# TySolve.solve
## constraints
"(x: f32) -> (y: f32) -> f32" ~ "a\8320 -> a\8320 -> a\8320"
"f32" ~ "a\8320"
## typarams
mempty
## tyvars
[("a\8320",(1,TyVarFree NoLoc Unlifted))]
## solution
([],[("a\8320",Right "f32")])

# TySolve.solve
## constraints
"(f16, f16)" ~ "(f16, f16)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(f16, f16)" ~ "(f16, f16)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(f16, f16)" ~ "(f16, f16)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(f16, f16)" ~ "(f16, f16)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(f16, f16)" ~ "(f16, f16)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(f16, f16)" ~ "(f16, f16)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u8" ~ "u8"
"i8" ~ "i8"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u16" ~ "u16"
"i16" ~ "i16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u32" ~ "u32"
"i32" ~ "i32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u64" ~ "u64"
"i64" ~ "i64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i8" ~ "i8"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i16" ~ "i16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i32" ~ "i32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i64" ~ "i64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f16" ~ "f16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f32" ~ "f32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f64" ~ "f64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"bool" ~ "bool"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i64" ~ "i64"
"i64" ~ "i64"
"f16" ~ "f16"
"f16" ~ "f16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f16" ~ "f16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f16" ~ "f16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(f16, f16)" ~ "(f16, f16)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(f16, f16)" ~ "(f16, f16)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(f16, f16)" ~ "(f16, f16)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(f16, f16)" ~ "(f16, f16)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(f16, f16)" ~ "(f16, f16)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f16" ~ "f16"
"f16" ~ "f16"
"t\8324" ~ "bool"
## typarams
mempty
## tyvars
[("t\8324",(3,TyVarPrim NoLoc [Bool,Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64]))]
## solution
([],[("t\8324",Right "bool")])

# TySolve.solve
## constraints
"t\8320" ~ "f16"
## typarams
mempty
## tyvars
[("t\8320",(2,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("t\8320",Right "f16")])

# TySolve.solve
## constraints
"num\8320" ~ "f16"
"f16" ~ "f16"
## typarams
mempty
## tyvars
[("num\8320",(2,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("num\8320",Right "f16")])

# TySolve.solve
## constraints
"(f16, f16)" ~ "(f16, f16)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(f16, f16)" ~ "(f16, f16)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f16" ~ "f16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f16" ~ "f16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f16" ~ "f16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f16" ~ "f16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f16" ~ "f16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f16" ~ "f16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f16" ~ "f16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f16" ~ "f16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f16" ~ "f16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f16" ~ "f16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f16" ~ "f16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f16" ~ "f16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f16" ~ "f16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f16" ~ "f16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f16" ~ "f16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f16" ~ "f16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f16" ~ "f16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f16" ~ "f16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f16" ~ "f16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f16" ~ "f16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f16" ~ "f16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f16" ~ "f16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f16" ~ "f16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f16" ~ "f16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f16" ~ "f16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f16" ~ "f16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f16" ~ "f16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f16" ~ "f16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(f16, f16)" ~ "(f16, f16)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(f16, f16)" ~ "(f16, f16)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(f16, f16)" ~ "(f16, f16)"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(t\8320, t\8321, t\8322)" ~ "(f16, f16, f16)"
## typarams
mempty
## tyvars
[("t\8320",(1,TyVarFree NoLoc Lifted)),("t\8321",(2,TyVarFree NoLoc Lifted)),("t\8322",(3,TyVarFree NoLoc Lifted))]
## solution
([],[("t\8320",Right "f16"),("t\8321",Right "f16"),("t\8322",Right "f16")])

# TySolve.solve
## constraints
"(t\8320, t\8321, t\8322)" ~ "(f16, f16, f16)"
## typarams
mempty
## tyvars
[("t\8320",(1,TyVarFree NoLoc Lifted)),("t\8321",(2,TyVarFree NoLoc Lifted)),("t\8322",(3,TyVarFree NoLoc Lifted))]
## solution
([],[("t\8320",Right "f16"),("t\8321",Right "f16"),("t\8322",Right "f16")])

# TySolve.solve
## constraints
"(t\8320, t\8321, t\8322)" ~ "(f16, f16, f16)"
## typarams
mempty
## tyvars
[("t\8320",(1,TyVarFree NoLoc Lifted)),("t\8321",(2,TyVarFree NoLoc Lifted)),("t\8322",(3,TyVarFree NoLoc Lifted))]
## solution
([],[("t\8320",Right "f16"),("t\8321",Right "f16"),("t\8322",Right "f16")])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f16" ~ "f16"
"i16" ~ "i16"
"f16" ~ "f16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(t\8320, t\8321)" ~ "(f16, f16)"
## typarams
mempty
## tyvars
[("t\8320",(1,TyVarFree NoLoc Lifted)),("t\8321",(2,TyVarFree NoLoc Lifted))]
## solution
([],[("t\8320",Right "f16"),("t\8321",Right "f16")])

# TySolve.solve
## constraints
"(t\8320, t\8321)" ~ "(f16, i32)"
## typarams
mempty
## tyvars
[("t\8320",(1,TyVarFree NoLoc Lifted)),("t\8321",(2,TyVarFree NoLoc Lifted))]
## solution
([],[("t\8320",Right "f16"),("t\8321",Right "i32")])

# TySolve.solve
## constraints
"(t\8320, t\8321)" ~ "(f16, f16)"
## typarams
mempty
## tyvars
[("t\8320",(1,TyVarFree NoLoc Lifted)),("t\8321",(2,TyVarFree NoLoc Lifted))]
## solution
([],[("t\8320",Right "f16"),("t\8321",Right "f16")])

# TySolve.solve
## constraints
"f16" ~ "f16"
"i16" ~ "i16"
"u16" ~ "u16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"u16" ~ "u16"
"i16" ~ "i16"
"f16" ~ "f16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f16" ~ "f16"
"i32" ~ "i32"
"u16" ~ "u16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f16" ~ "f16"
"i32" ~ "i32"
"u16" ~ "u16"
"i32" ~ "i32"
"u16" ~ "u16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f16" ~ "f16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f16" ~ "f16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f16" ~ "f16"
"f16" ~ "f16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f16" ~ "f16"
"f16" ~ "f16"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"t\8320" ~ "f16"
## typarams
mempty
## tyvars
[("t\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("t\8320",Right "f16")])

# TySolve.solve
## constraints
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f64" ~ "f64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f64" ~ "f64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"num\8321" ~ "i32"
"(x: f16) -> (y: f16) -> f16" ~ "a\8320 -> a\8320 -> a\8320"
"f16" ~ "a\8320"
## typarams
mempty
## tyvars
[("a\8320",(1,TyVarFree NoLoc Unlifted)),("num\8321",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("a\8320",Right "f16"),("num\8321",Right "i32")])

# TySolve.solve
## constraints
"num\8321" ~ "i32"
"(x: f16) -> (y: f16) -> f16" ~ "a\8320 -> a\8320 -> a\8320"
"f16" ~ "a\8320"
## typarams
mempty
## tyvars
[("a\8320",(1,TyVarFree NoLoc Unlifted)),("num\8321",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("a\8320",Right "f16"),("num\8321",Right "i32")])

# TySolve.solve
## constraints
"(x: f16) -> (y: f16) -> f16" ~ "a\8320 -> a\8320 -> a\8320"
"f16" ~ "a\8320"
## typarams
mempty
## tyvars
[("a\8320",(1,TyVarFree NoLoc Unlifted))]
## solution
([],[("a\8320",Right "f16")])

# TySolve.solve
## constraints
"(x: f16) -> (y: f16) -> f16" ~ "a\8320 -> a\8320 -> a\8320"
"f16" ~ "a\8320"
## typarams
mempty
## tyvars
[("a\8320",(1,TyVarFree NoLoc Unlifted))]
## solution
([],[("a\8320",Right "f16")])

# TySolve.solve
## constraints
"a" ~ "a"
"b" ~ "b"
## typarams
["(\"a\",(0,Lifted,NoLoc))","(\"b\",(0,Lifted,NoLoc))"]
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"a" ~ "a"
## typarams
["(\"a\",(0,Lifted,NoLoc))","(\"b\",(0,Lifted,NoLoc))"]
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"a" ~ "a"
"b" ~ "b"
"c" ~ "c"
## typarams
["(\"a\",(0,Lifted,NoLoc))","(\"b\",(0,Lifted,NoLoc))","(\"c\",(0,Lifted,NoLoc))"]
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"a" ~ "a"
"b" ~ "b"
"c" ~ "c"
## typarams
["(\"a\",(0,Lifted,NoLoc))","(\"b\",(0,Lifted,NoLoc))","(\"c\",(0,Lifted,NoLoc))"]
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"a" ~ "a"
"b" ~ "b"
"c" ~ "c"
## typarams
["(\"a\",(0,Lifted,NoLoc))","(\"b\",(0,Lifted,NoLoc))","(\"c\",(0,Lifted,NoLoc))"]
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"(a, b)" ~ "(a, b)"
"c" ~ "c"
## typarams
["(\"a\",(0,Lifted,NoLoc))","(\"b\",(0,Lifted,NoLoc))","(\"c\",(0,Lifted,NoLoc))"]
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"a" ~ "a"
"b" ~ "b"
"c" ~ "c"
## typarams
["(\"a\",(0,Lifted,NoLoc))","(\"b\",(0,Lifted,NoLoc))","(\"c\",(0,Lifted,NoLoc))"]
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
## typarams
["(\"a\",(0,Lifted,NoLoc))","(\"b\",(0,Lifted,NoLoc))"]
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
## typarams
["(\"a\",(0,Lifted,NoLoc))"]
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"t\8320" ~ "a"
"t\8321" ~ "i32"
"t\8320" ~ "a"
"a" ~ "a"
## typarams
["(\"a\",(0,Unlifted,NoLoc))"]
## tyvars
[("t\8320",(4,TyVarFree NoLoc Lifted)),("t\8321",(4,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64]))]
## solution
([],[("t\8320",Right "a"),("t\8321",Right "i32")])

# TySolve.solve
## constraints
"t\8320" ~ "a"
"t\8320" ~ "a"
"t\8323" ~ "bool"
"t\8320" ~ "a"
"a" ~ "a"
## typarams
["(\"a\",(0,Unlifted,NoLoc))"]
## tyvars
[("t\8320",(4,TyVarFree NoLoc Lifted)),("t\8323",(4,TyVarPrim NoLoc [Bool,Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64]))]
## solution
([],[("t\8320",Right "a"),("t\8323",Right "bool")])

# TySolve.solve
## constraints
"t\8320" ~ "a"
"t\8320" ~ "a"
"t\8320" ~ "a"
"a" ~ "a"
## typarams
["(\"a\",(0,Unlifted,NoLoc))"]
## tyvars
[("t\8320",(4,TyVarFree NoLoc Lifted))]
## solution
([],[("t\8320",Right "a")])

# TySolve.solve
## constraints
## typarams
["(\"t\",(0,Unlifted,NoLoc))"]
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i64" ~ "t\8320"
"num\8321" ~ "t\8320"
## typarams
["(\"t\",(0,Unlifted,NoLoc))"]
## tyvars
[("t\8320",(2,TyVarFree NoLoc Unlifted)),("num\8321",(2,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("t\8320",Right "i64"),("num\8321",Right "i64")])

# TySolve.solve
## constraints
"t\8321" ~ "num\8320"
"index\8322" ~ "index_elem\8323"
"[]t" ~ "[]index_elem\8323"
## typarams
["(\"t\",(0,Unlifted,NoLoc))"]
## tyvars
[("num\8320",(2,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8321",(2,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64])),("index\8322",(2,TyVarFree NoLoc Unlifted)),("index_elem\8323",(2,TyVarFree NoLoc Unlifted))]
## solution
([],[("num\8320",Left "[i8, i16, i32, i64]"),("t\8321",Left "[i8, i16, i32, i64]"),("index\8322",Right "t"),("index_elem\8323",Right "t")])

# TySolve.solve
## constraints
"i64" ~ "t\8320"
"num\8321" ~ "t\8320"
"t\8326" ~ "t\8320"
"index\8327" ~ "index_elem\8328"
"[]t" ~ "[]index_elem\8328"
## typarams
["(\"t\",(0,Unlifted,NoLoc))"]
## tyvars
[("t\8320",(2,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("num\8321",(2,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8326",(2,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64])),("index\8327",(2,TyVarFree NoLoc Unlifted)),("index_elem\8328",(2,TyVarFree NoLoc Unlifted))]
## solution
([],[("t\8320",Right "i64"),("num\8321",Right "i64"),("t\8326",Right "i64"),("index\8327",Right "t"),("index_elem\8328",Right "t")])

# TySolve.solve
## constraints
"index\8321" ~ "[]index\8321\8329"
"i64" ~ "num\8320"
"index\8321" ~ "[]index_elem\8322"
"[]t" ~ "[]index_elem\8322"
"i64" ~ "t\8323"
"num\8324" ~ "t\8323"
"t\8323" ~ "i64"
"[]t" ~ "index\8321"
## typarams
["(\"t\",(0,Unlifted,NoLoc))"]
## tyvars
[("num\8320",(2,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("index\8321",(2,TyVarFree NoLoc Unlifted)),("index_elem\8322",(2,TyVarFree NoLoc Unlifted)),("t\8323",(2,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("num\8324",(2,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("index\8321\8329",(2,TyVarFree NoLoc Unlifted))]
## solution
([],[("num\8320",Right "i64"),("index\8321",Right "[]t"),("index_elem\8322",Right "t"),("t\8323",Right "i64"),("num\8324",Right "i64"),("index\8321\8329",Right "t")])

# TySolve.solve
## constraints
"index\8327" ~ "[]index\8327\8321\8325"
"i64" ~ "num\8320"
"i64" ~ "t\8321"
"num\8322" ~ "t\8321"
"i64" ~ "t\8321"
"index\8327" ~ "[]index_elem\8328"
"[]t" ~ "[]index_elem\8328"
"i64" ~ "t\8329"
"num\8321\8320" ~ "t\8329"
"t\8329" ~ "i64"
"[]t" ~ "index\8327"
## typarams
["(\"t\",(0,Unlifted,NoLoc))"]
## tyvars
[("num\8320",(2,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8321",(2,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("num\8322",(2,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("index\8327",(2,TyVarFree NoLoc Unlifted)),("index_elem\8328",(2,TyVarFree NoLoc Unlifted)),("t\8329",(2,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("num\8321\8320",(2,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("index\8327\8321\8325",(2,TyVarFree NoLoc Unlifted))]
## solution
([],[("num\8320",Right "i64"),("t\8321",Right "i64"),("num\8322",Right "i64"),("index\8327",Right "[]t"),("index_elem\8328",Right "t"),("t\8329",Right "i64"),("num\8321\8320",Right "i64"),("index\8327\8321\8325",Right "t")])

# TySolve.solve
## constraints
"i64" ~ "num\8320"
"index\8321" ~ "[]index_elem\8322"
"[]t" ~ "[]index_elem\8322"
"[]t" ~ "index\8321"
## typarams
["(\"t\",(0,Unlifted,NoLoc))"]
## tyvars
[("num\8320",(3,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("index\8321",(3,TyVarFree NoLoc Unlifted)),("index_elem\8322",(3,TyVarFree NoLoc Unlifted))]
## solution
([],[("num\8320",Right "i64"),("index\8321",Right "[]t"),("index_elem\8322",Right "t")])

# TySolve.solve
## constraints
"index\8320" ~ "[]index\8320\8327"
"index\8320" ~ "[]index_elem\8321"
"[]t" ~ "[]index_elem\8321"
"i64" ~ "t\8322"
"i64" ~ "t\8322"
"t\8322" ~ "i64"
"[]t" ~ "index\8320"
## typarams
["(\"t\",(0,Unlifted,NoLoc))"]
## tyvars
[("index\8320",(3,TyVarFree NoLoc Unlifted)),("index_elem\8321",(3,TyVarFree NoLoc Unlifted)),("t\8322",(3,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("index\8320\8327",(3,TyVarFree NoLoc Unlifted))]
## solution
([],[("index\8320",Right "[]t"),("index_elem\8321",Right "t"),("t\8322",Right "i64"),("index\8320\8327",Right "t")])

# TySolve.solve
## constraints
## typarams
["(\"t\",(0,Unlifted,NoLoc))"]
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"index\8326" ~ "[]index\8326\8321\8325"
"index\8321\8323" ~ "[]index\8321\8323\8321\8326"
"i64" ~ "t\8320"
"i64" ~ "t\8320"
"t\8320" ~ "i64"
"i64" ~ "num\8325"
"index\8326" ~ "[]index_elem\8327"
"[]t" ~ "[]index_elem\8327"
"i64" ~ "t\8328"
"i64" ~ "t\8328"
"i64" ~ "t\8328"
"index\8321\8323" ~ "[]index_elem\8321\8324"
"[]t" ~ "[]index_elem\8321\8324"
"index\8321\8323" ~ "[]t"
"([]t, []t)" ~ "(index\8326, []t)"
## typarams
["(\"t\",(0,Unlifted,NoLoc))"]
## tyvars
[("t\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("num\8325",(2,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("index\8326",(2,TyVarFree NoLoc Unlifted)),("index_elem\8327",(2,TyVarFree NoLoc Unlifted)),("t\8328",(2,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("index\8321\8323",(2,TyVarFree NoLoc Unlifted)),("index_elem\8321\8324",(2,TyVarFree NoLoc Unlifted)),("index\8326\8321\8325",(2,TyVarFree NoLoc Unlifted)),("index\8321\8323\8321\8326",(2,TyVarFree NoLoc Unlifted))]
## solution
([],[("t\8320",Right "i64"),("num\8325",Right "i64"),("index\8326",Right "[]t"),("index_elem\8327",Right "t"),("t\8328",Right "i64"),("index\8321\8323",Right "[]t"),("index_elem\8321\8324",Right "t"),("index\8326\8321\8325",Right "t"),("index\8321\8323\8321\8326",Right "t")])

# TySolve.solve
## constraints
"t\8321" ~ "num\8320"
"i64" ~ "num\8320"
"index\8322" ~ "[]index_elem\8323"
"[]t" ~ "[]index_elem\8323"
"[]t" ~ "index\8322"
## typarams
["(\"t\",(0,Unlifted,NoLoc))"]
## tyvars
[("num\8320",(2,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8321",(2,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("index\8322",(2,TyVarFree NoLoc Unlifted)),("index_elem\8323",(2,TyVarFree NoLoc Unlifted))]
## solution
([],[("num\8320",Right "i64"),("t\8321",Right "i64"),("index\8322",Right "[]t"),("index_elem\8323",Right "t")])

# TySolve.solve
## constraints
"[]t" ~ "[]a\8320"
"[]t" ~ "[]a\8320"
"i64" ~ "t\8325"
"i64" ~ "t\8325"
"t\8325" ~ "i64"
"[]t" ~ "[]a\8320"
## typarams
["(\"t\",(0,Unlifted,NoLoc))"]
## tyvars
[("a\8320",(3,TyVarFree NoLoc Unlifted)),("t\8325",(3,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("a\8320",Right "t"),("t\8325",Right "i64")])

# TySolve.solve
## constraints
"[]t" ~ "[]t\8320"
"[]t" ~ "[]t\8320"
"i64" ~ "t\8325"
"i64" ~ "t\8325"
"t\8325" ~ "i64"
"[]t" ~ "[]t\8320"
## typarams
["(\"t\",(0,Unlifted,NoLoc))"]
## tyvars
[("t\8320",(3,TyVarFree NoLoc Unlifted)),("t\8325",(3,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("t\8320",Right "t"),("t\8325",Right "i64")])

# TySolve.solve
## constraints
"t\8321" ~ "num\8320"
"num\8320" ~ "num\8322"
"num\8320" ~ "i64"
"range\8323" ~ "[]num\8320"
"[]i64" ~ "range\8323"
## typarams
mempty
## tyvars
[("num\8320",(2,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8321",(2,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64])),("num\8322",(2,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("range\8323",(2,TyVarFree NoLoc Unlifted))]
## solution
([],[("num\8320",Right "i64"),("t\8321",Right "i64"),("num\8322",Right "i64"),("range\8323",Right "[]i64")])

# TySolve.solve
## constraints
"i64" ~ "i64"
"[]i64" ~ "[]i64"
## typarams
["(\"t\",(0,Unlifted,NoLoc))"]
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"t\8322" ~ "t\8324"
"i64" ~ "t\8324"
"t\8324" ~ "t\8323"
"i64" ~ "t\8323"
"t\8321\8323" ~ "t\8323"
"index\8321\8324" ~ "index_elem\8321\8325"
"[]t" ~ "[]index_elem\8321\8325"
"i64" ~ "i64"
"(i: t\8322) -> index\8321\8324" ~ "a\8320 -> x\8321"
"[]i64" ~ "[]a\8320"
## typarams
["(\"t\",(0,Unlifted,NoLoc))"]
## tyvars
[("a\8320",(3,TyVarFree NoLoc Unlifted)),("x\8321",(3,TyVarFree NoLoc Unlifted)),("t\8322",(4,TyVarFree NoLoc Lifted)),("t\8323",(5,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8324",(5,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8321\8323",(5,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64])),("index\8321\8324",(5,TyVarFree NoLoc Unlifted)),("index_elem\8321\8325",(5,TyVarFree NoLoc Unlifted))]
## solution
([],[("a\8320",Right "i64"),("x\8321",Right "t"),("t\8322",Right "i64"),("t\8323",Right "i64"),("t\8324",Right "i64"),("t\8321\8323",Right "i64"),("index\8321\8324",Right "t"),("index_elem\8321\8325",Right "t")])

# TySolve.solve
## constraints
"t" ~ "a\8322"
"i64" ~ "i64"
"b\8323 -> a\8322" ~ "a\8320 -> x\8321"
"[]i64" ~ "[]a\8320"
"[]t" ~ "[]x\8321"
## typarams
["(\"t\",(0,Unlifted,NoLoc))"]
## tyvars
[("a\8320",(3,TyVarFree NoLoc Unlifted)),("x\8321",(3,TyVarFree NoLoc Unlifted)),("a\8322",(3,TyVarFree NoLoc Lifted)),("b\8323",(3,TyVarFree NoLoc Lifted))]
## solution
([],[("a\8320",Right "i64"),("x\8321",Right "t"),("a\8322",Right "t"),("b\8323",Right "i64")])

# TySolve.solve
## constraints
"i64" ~ "i64"
"t" ~ "t\8320"
"[]t" ~ "[]t\8320"
## typarams
["(\"t\",(0,Unlifted,NoLoc))"]
## tyvars
[("t\8320",(2,TyVarFree NoLoc Unlifted))]
## solution
([],[("t\8320",Right "t")])

# TySolve.solve
## constraints
"t" ~ "et\8320"
"t\8322" ~ "num\8321"
"index\8323" ~ "index_elem\8324"
"[]et\8320" ~ "[]index_elem\8324"
"t" ~ "index\8323"
## typarams
["(\"t\",(0,Unlifted,NoLoc))"]
## tyvars
[("et\8320",(2,TyVarFree NoLoc Unlifted)),("num\8321",(2,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8322",(2,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64])),("index\8323",(2,TyVarFree NoLoc Unlifted)),("index_elem\8324",(2,TyVarFree NoLoc Unlifted))]
## solution
([],[("et\8320",Right "t"),("num\8321",Left "[i8, i16, i32, i64]"),("t\8322",Left "[i8, i16, i32, i64]"),("index\8323",Right "t"),("index_elem\8324",Right "t")])

# TySolve.solve
## constraints
"t" ~ "a\8320"
"t" ~ "a\8320"
## typarams
["(\"t\",(0,Unlifted,NoLoc))"]
## tyvars
[("a\8320",(2,TyVarFree NoLoc Unlifted))]
## solution
([],[("a\8320",Right "t")])

# TySolve.solve
## constraints
"[][]t" ~ "[][]a\8320"
"i64" ~ "t\8323"
"i64" ~ "t\8323"
"t\8323" ~ "i64"
"[]t" ~ "[]a\8320"
## typarams
["(\"t\",(0,Unlifted,NoLoc))"]
## tyvars
[("a\8320",(2,TyVarFree NoLoc Unlifted)),("t\8323",(2,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("a\8320",Right "t"),("t\8323",Right "i64")])

# TySolve.solve
## constraints
"t\8321" ~ "[]t\8321\8321\8326"
"[][][]t" ~ "[][]t\8321"
"[]t\8321" ~ "[][]t\8320"
"i64" ~ "t\8327"
"i64" ~ "t\8327"
"t\8327" ~ "t\8326"
"i64" ~ "t\8326"
"t\8326" ~ "i64"
"[]t" ~ "[]t\8320"
## typarams
["(\"t\",(0,Unlifted,NoLoc))"]
## tyvars
[("t\8320",(2,TyVarFree NoLoc Unlifted)),("t\8321",(2,TyVarFree NoLoc Unlifted)),("t\8326",(2,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8327",(2,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8321\8321\8326",(2,TyVarFree NoLoc Unlifted))]
## solution
([],[("t\8320",Right "t"),("t\8321",Right "[]t"),("t\8326",Right "i64"),("t\8327",Right "i64"),("t\8321\8321\8326",Right "t")])

# TySolve.solve
## constraints
"t\8321" ~ "[]t\8321\8322\8321"
"[][][][]t" ~ "[][][]t\8321"
"[]t\8321" ~ "[][]t\8320"
"i64" ~ "t\8328"
"i64" ~ "t\8328"
"t\8328" ~ "t\8327"
"i64" ~ "t\8327"
"t\8327" ~ "t\8326"
"i64" ~ "t\8326"
"t\8326" ~ "i64"
"[]t" ~ "[]t\8320"
## typarams
["(\"t\",(0,Unlifted,NoLoc))"]
## tyvars
[("t\8320",(2,TyVarFree NoLoc Unlifted)),("t\8321",(2,TyVarFree NoLoc Unlifted)),("t\8326",(2,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8327",(2,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8328",(2,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8321\8322\8321",(2,TyVarFree NoLoc Unlifted))]
## solution
([],[("t\8320",Right "t"),("t\8321",Right "[]t"),("t\8326",Right "i64"),("t\8327",Right "i64"),("t\8328",Right "i64"),("t\8321\8322\8321",Right "t")])

# TySolve.solve
## constraints
"i64" ~ "t\8320"
"i64" ~ "t\8320"
"t\8320" ~ "i64"
"i64" ~ "i64"
"i64" ~ "i64"
"[]t" ~ "[]a\8325"
"[][]t" ~ "[][]a\8325"
## typarams
["(\"t\",(0,Unlifted,NoLoc))"]
## tyvars
[("t\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("a\8325",(2,TyVarFree NoLoc Unlifted))]
## solution
([],[("t\8320",Right "i64"),("a\8325",Right "t")])

# TySolve.solve
## constraints
"t\8321\8320" ~ "[]t\8321\8320\8321\8326"
"i64" ~ "t\8321"
"i64" ~ "t\8321"
"t\8321" ~ "t\8320"
"i64" ~ "t\8320"
"t\8320" ~ "i64"
"[]t" ~ "[]t\8321\8321"
"[][]t\8321\8321" ~ "[]t\8321\8320"
"[][][]t" ~ "[][]t\8321\8320"
## typarams
["(\"t\",(0,Unlifted,NoLoc))"]
## tyvars
[("t\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8321",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8321\8320",(2,TyVarFree NoLoc Unlifted)),("t\8321\8321",(2,TyVarFree NoLoc Unlifted)),("t\8321\8320\8321\8326",(2,TyVarFree NoLoc Unlifted))]
## solution
([],[("t\8320",Right "i64"),("t\8321",Right "i64"),("t\8321\8320",Right "[]t"),("t\8321\8321",Right "t"),("t\8321\8320\8321\8326",Right "t")])

# TySolve.solve
## constraints
"t\8321\8325" ~ "[][]t\8321\8325\8322\8321"
"i64" ~ "t\8322"
"i64" ~ "t\8322"
"t\8322" ~ "t\8321"
"i64" ~ "t\8321"
"t\8321" ~ "t\8320"
"i64" ~ "t\8320"
"t\8320" ~ "i64"
"[]t" ~ "[]t\8321\8326"
"[][][]t\8321\8326" ~ "[]t\8321\8325"
"[][][][]t" ~ "[][]t\8321\8325"
## typarams
["(\"t\",(0,Unlifted,NoLoc))"]
## tyvars
[("t\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8321",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8322",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8321\8325",(2,TyVarFree NoLoc Unlifted)),("t\8321\8326",(2,TyVarFree NoLoc Unlifted)),("t\8321\8325\8322\8321",(2,TyVarFree NoLoc Unlifted))]
## solution
([],[("t\8320",Right "i64"),("t\8321",Right "i64"),("t\8322",Right "i64"),("t\8321\8325",Right "[][]t"),("t\8321\8326",Right "t"),("t\8321\8325\8322\8321",Right "t")])

# TySolve.solve
## constraints
"[][]t" ~ "[][]a\8320"
"[][]t" ~ "[][]a\8320"
## typarams
["(\"t\",(0,Unlifted,NoLoc))"]
## tyvars
[("a\8320",(2,TyVarFree NoLoc Unlifted))]
## solution
([],[("a\8320",Right "t")])

# TySolve.solve
## constraints
"(x: a\8321) -> a\8321" ~ "a\8320 -> bool"
"[]bool" ~ "[]a\8320"
## typarams
mempty
## tyvars
[("a\8320",(2,TyVarFree NoLoc Unlifted)),("a\8321",(2,TyVarFree NoLoc Lifted))]
## solution
([],[("a\8320",Right "bool"),("a\8321",Right "bool")])

# TySolve.solve
## constraints
"(x: a\8321) -> a\8321" ~ "a\8320 -> bool"
"[]bool" ~ "[]a\8320"
## typarams
mempty
## tyvars
[("a\8320",(2,TyVarFree NoLoc Unlifted)),("a\8321",(2,TyVarFree NoLoc Lifted))]
## solution
([],[("a\8320",Right "bool"),("a\8321",Right "bool")])

# TySolve.solve
## constraints
"t\8320" ~ "a"
"[]b" ~ "[]elem\8321"
"t\8322" ~ "elem\8321"
"t\8320" ~ "a"
"t\8322" ~ "b"
"a" ~ "a"
"a" ~ "t\8320"
## typarams
["(\"a\",(0,Unlifted,NoLoc))","(\"b\",(0,Unlifted,NoLoc))"]
## tyvars
[("t\8320",(4,TyVarFree NoLoc Lifted)),("elem\8321",(4,TyVarFree NoLoc Unlifted)),("t\8322",(4,TyVarFree NoLoc Lifted))]
## solution
([],[("t\8320",Right "a"),("elem\8321",Right "b"),("t\8322",Right "b")])

# TySolve.solve
## constraints
"b -> a -> a" ~ "a\8322 -> b\8323 -> c\8324"
"[]b" ~ "[]t\8327"
"(b: b\8323) -> (a: a\8322) -> c\8324" ~ "a\8320 -> b\8321 -> a\8320"
"a" ~ "a\8320"
"[]t\8327" ~ "[]b\8321"
"a" ~ "a\8320"
## typarams
["(\"a\",(0,Unlifted,NoLoc))","(\"b\",(0,Unlifted,NoLoc))"]
## tyvars
[("a\8320",(4,TyVarFree NoLoc Unlifted)),("b\8321",(4,TyVarFree NoLoc Unlifted)),("a\8322",(4,TyVarFree NoLoc Lifted)),("b\8323",(4,TyVarFree NoLoc Lifted)),("c\8324",(4,TyVarFree NoLoc Lifted)),("t\8327",(4,TyVarFree NoLoc Unlifted))]
## solution
([],[("a\8320",Right "a"),("b\8321",Right "b"),("a\8322",Right "b"),("b\8323",Right "a"),("c\8324",Right "a"),("t\8327",Right "b")])

# TySolve.solve
## constraints
"i64" ~ "i64"
"i64 -> a" ~ "a\8320 -> x\8321"
"[]i64" ~ "[]a\8320"
"[]a" ~ "[]x\8321"
## typarams
["(\"a\",(0,Unlifted,NoLoc))"]
## tyvars
[("a\8320",(3,TyVarFree NoLoc Unlifted)),("x\8321",(3,TyVarFree NoLoc Unlifted))]
## solution
([],[("a\8320",Right "i64"),("x\8321",Right "a")])

# TySolve.solve
## constraints
"x\8321" ~ "[]x\8321\8321\8328"
"c\8324" ~ "[]c\8324\8321\8329"
"i64" ~ "i64"
"i64 -> i64 -> a" ~ "a\8322 -> b\8323"
"(f: i64 -> a\8325) -> *[]a\8325" ~ "b\8323 -> c\8324"
"i64" ~ "i64"
"(x: a\8322) -> c\8324" ~ "a\8320 -> x\8321"
"[]i64" ~ "[]a\8320"
"[][]a" ~ "[]x\8321"
## typarams
["(\"a\",(0,Unlifted,NoLoc))"]
## tyvars
[("a\8320",(4,TyVarFree NoLoc Unlifted)),("x\8321",(4,TyVarFree NoLoc Unlifted)),("a\8322",(4,TyVarFree NoLoc Lifted)),("b\8323",(4,TyVarFree NoLoc Lifted)),("c\8324",(4,TyVarFree NoLoc Lifted)),("a\8325",(4,TyVarFree NoLoc Unlifted)),("x\8321\8321\8328",(4,TyVarFree NoLoc Unlifted)),("c\8324\8321\8329",(4,TyVarFree NoLoc Lifted))]
## solution
([],[("a\8320",Right "i64"),("x\8321",Right "[]a"),("a\8322",Right "i64"),("b\8323",Right "i64 -> a"),("c\8324",Right "[]a"),("a\8325",Right "a"),("x\8321\8321\8328",Right "a"),("c\8324\8321\8329",Right "a")])

# TySolve.solve
## constraints
"x\8321" ~ "[][]x\8321\8322\8320"
"c\8324" ~ "[][]c\8324\8322\8321"
"i64" ~ "i64"
"i64" ~ "i64"
"i64 -> i64 -> i64 -> a" ~ "a\8322 -> b\8323"
"(f: i64 -> i64 -> a\8325) -> *[][]a\8325" ~ "b\8323 -> c\8324"
"i64" ~ "i64"
"(x: a\8322) -> c\8324" ~ "a\8320 -> x\8321"
"[]i64" ~ "[]a\8320"
"[][][]a" ~ "[]x\8321"
## typarams
["(\"a\",(0,Unlifted,NoLoc))"]
## tyvars
[("a\8320",(5,TyVarFree NoLoc Unlifted)),("x\8321",(5,TyVarFree NoLoc Unlifted)),("a\8322",(5,TyVarFree NoLoc Lifted)),("b\8323",(5,TyVarFree NoLoc Lifted)),("c\8324",(5,TyVarFree NoLoc Lifted)),("a\8325",(5,TyVarFree NoLoc Unlifted)),("x\8321\8322\8320",(5,TyVarFree NoLoc Unlifted)),("c\8324\8322\8321",(5,TyVarFree NoLoc Lifted))]
## solution
([],[("a\8320",Right "i64"),("x\8321",Right "[][]a"),("a\8322",Right "i64"),("b\8323",Right "i64 -> i64 -> a"),("c\8324",Right "[][]a"),("a\8325",Right "a"),("x\8321\8322\8320",Right "a"),("c\8324\8322\8321",Right "a")])

# TySolve.solve
## constraints
"a -> b" ~ "a\8320 -> b\8321"
"a" ~ "a\8320"
"a" ~ "a\8320"
"(b, b)" ~ "(b\8321, b\8321)"
## typarams
["(\"a\",(0,Unlifted,NoLoc))","(\"b\",(0,Unlifted,NoLoc))"]
## tyvars
[("a\8320",(4,TyVarFree NoLoc Unlifted)),("b\8321",(4,TyVarFree NoLoc Unlifted))]
## solution
([],[("a\8320",Right "a"),("b\8321",Right "b")])

# TySolve.solve
## constraints
"a -> b" ~ "a\8320 -> b\8321"
"a" ~ "a\8320"
"b" ~ "b\8321"
"(b, a)" ~ "(b\8321, a\8320)"
## typarams
["(\"a\",(0,Unlifted,NoLoc))","(\"b\",(0,Unlifted,NoLoc))"]
## tyvars
[("a\8320",(4,TyVarFree NoLoc Unlifted)),("b\8321",(4,TyVarFree NoLoc Unlifted))]
## solution
([],[("a\8320",Right "a"),("b\8321",Right "b")])

# TySolve.solve
## constraints
"a -> b" ~ "a\8320 -> b\8321"
"a" ~ "a\8320"
"a" ~ "a\8320"
"(b\8321, b\8321)" ~ "t\8329"
"b" ~ "kt\8328"
## typarams
["(\"a\",(0,Unlifted,NoLoc))","(\"b\",(0,Unlifted,NoLoc))"]
## tyvars
[("a\8320",(4,TyVarFree NoLoc Unlifted)),("b\8321",(4,TyVarFree NoLoc Unlifted)),("kt\8328",(4,TyVarFree NoLoc Lifted)),("t\8329",(4,TyVarRecord NoLoc (fromList [(Name "1",Scalar (TypeVar NoUniqueness (QualName {qualQuals = [], qualLeaf = VName (Name "kt\8328") 9836}) []))])))]
## solution
([],[("a\8320",Right "a"),("b\8321",Right "b"),("kt\8328",Right "b"),("t\8329",Right "(b, b)")])

# TySolve.solve
## constraints
"a -> b" ~ "a\8320 -> b\8321"
"a" ~ "a\8320"
"b" ~ "b\8321"
"(b\8321, a\8320)" ~ "t\8329"
"a" ~ "kt\8328"
## typarams
["(\"a\",(0,Unlifted,NoLoc))","(\"b\",(0,Unlifted,NoLoc))"]
## tyvars
[("a\8320",(4,TyVarFree NoLoc Unlifted)),("b\8321",(4,TyVarFree NoLoc Unlifted)),("kt\8328",(4,TyVarFree NoLoc Lifted)),("t\8329",(4,TyVarRecord NoLoc (fromList [(Name "1",Scalar (TypeVar NoUniqueness (QualName {qualQuals = [], qualLeaf = VName (Name "kt\8328") 9855}) []))])))]
## solution
([],[("a\8320",Right "a"),("b\8321",Right "b"),("kt\8328",Right "a"),("t\8329",Right "(b, a)")])

# TySolve.solve
## constraints
"i32" ~ "i32"
"f32" ~ "f32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f32" ~ "f32"
"i32" ~ "i32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"i32" ~ "i32"
"f64" ~ "f64"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"f64" ~ "f64"
"i32" ~ "i32"
## typarams
mempty
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"t\8320" ~ "bool"
## typarams
mempty
## tyvars
[("t\8320",(2,TyVarPrim NoLoc [Bool,Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64]))]
## solution
([],[("t\8320",Right "bool")])

# TySolve.solve
## constraints
## typarams
["(\"t\",(0,Unlifted,NoLoc))"]
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
## typarams
["(\"t\",(0,Unlifted,NoLoc))"]
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
## typarams
["(\"t\",(0,Unlifted,NoLoc))"]
## tyvars
[]
## solution
([],[])

# TySolve.solve
## constraints
"t\8328" ~ "t\8323"
"t\8329" ~ "t\8325"
"t\8323" ~ "t\8321\8320"
"t\8327" ~ "t\8321\8320"
"t\8324" ~ "i64"
"t\8321\8320" ~ "i64"
"t\8321\8329" ~ "i64"
"t\8325" ~ "t\8322\8320"
"t\8327" ~ "t\8322\8320"
"t\8326" ~ "i64"
"t\8322\8320" ~ "i64"
"t\8322\8329" ~ "i64"
"t\8321\8329" ~ "t\8323\8322"
"t\8323" ~ "t\8323\8322"
"t\8322\8329" ~ "t\8323\8327"
"t\8325" ~ "t\8323\8327"
"t\8323\8322" ~ "t\8323\8321"
"t\8323\8327" ~ "t\8323\8321"
"t\8323\8321" ~ "t\8323\8320"
"t\8327" ~ "t\8323\8320"
"t\8325\8320" ~ "t\8323\8320"
"t\8321\8329" ~ "t\8325\8321"
"t\8323" ~ "t\8325\8321"
"t\8325\8320" ~ "i64"
"t\8325\8321" ~ "i64"
"t\8326\8320" ~ "i64"
"t\8322\8329" ~ "t\8326\8321"
"t\8325" ~ "t\8326\8321"
"t\8326\8320" ~ "i64"
"t\8326\8321" ~ "i64"
"t\8327\8320" ~ "i64"
"t\8321\8329" ~ "t\8327\8321"
"t\8327\8320" ~ "t\8327\8321"
"t\8323" ~ "i64"
"t\8327\8321" ~ "i64"
"t\8328\8320" ~ "i64"
"t\8322\8329" ~ "t\8328\8321"
"t\8327\8320" ~ "t\8328\8321"
"t\8325" ~ "i64"
"t\8328\8321" ~ "i64"
"t\8329\8320" ~ "i64"
"t\8328\8320" ~ "t\8329\8323"
"t\8328" ~ "t\8329\8323"
"t\8327" ~ "t\8329\8322"
"t\8329\8323" ~ "t\8329\8322"
"t\8329\8320" ~ "t\8321\8320\8322"
"t\8329" ~ "t\8321\8320\8322"
"t\8329\8322" ~ "t\8329\8321"
"t\8321\8320\8322" ~ "t\8329\8321"
"t\8321\8321\8321" ~ "t\8329\8321"
"t\8321\8321\8323" ~ "t\8321\8321\8328"
"t\8321\8321\8322" ~ "t\8321\8321\8328"
"t\8321\8321\8328" ~ "t\8321\8321\8327"
"num\8321\8322\8323" ~ "t\8321\8321\8327"
"t\8321\8321\8324" ~ "t\8321\8322\8328"
"t\8321\8321\8326" ~ "t\8321\8322\8328"
"t\8321\8321\8325" ~ "t\8321\8323\8325"
"t\8321\8321\8324" ~ "t\8321\8323\8325"
"t\8321\8323\8325" ~ "t\8321\8323\8324"
"num\8321\8324\8320" ~ "t\8321\8323\8324"
"t\8321\8321\8322" ~ "t\8321\8324\8325"
"t\8321\8321\8326" ~ "t\8321\8324\8325"
"t\8321\8321\8326" ~ "t\8321\8325\8321"
"num\8321\8325\8322" ~ "t\8321\8325\8321"
"t\8321\8325\8327" ~ "t\8321\8321\8324"
"index\8321\8325\8328" ~ "index_elem\8321\8325\8329"
"[]a" ~ "[]index_elem\8321\8325\8329"
"t\8321\8326\8320" ~ "t\8321\8321\8322"
"index\8321\8326\8321" ~ "index_elem\8321\8326\8322"
"[]a" ~ "[]index_elem\8321\8326\8322"
"index\8321\8325\8328" ~ "a"
"index\8321\8326\8321" ~ "a"
"t\8321\8321\8324" ~ "t\8321\8326\8327"
"num\8321\8326\8328" ~ "t\8321\8326\8327"
"t\8321\8321\8322" ~ "t\8321\8327\8324"
"num\8321\8327\8325" ~ "t\8321\8327\8324"
"bool" ~ "bool"
"((t\8321\8321\8322, t\8321\8321\8323), (t\8321\8326\8327, t\8321\8321\8325), num\8321\8327\8323)" ~ "if_t\8321\8328\8321"
"((t\8321\8327\8324, t\8321\8321\8323), (t\8321\8321\8324, t\8321\8321\8325), num\8321\8328\8320)" ~ "if_t\8321\8328\8321"
"t\8321\8321\8326" ~ "t\8321\8328\8322"
"num\8321\8328\8323" ~ "t\8321\8328\8322"
"t\8321\8328\8328" ~ "t\8321\8328\8322"
"t\8321\8321\8326" ~ "t\8321\8328\8329"
"t\8321\8328\8328" ~ "t\8321\8328\8329"
"t\8321\8329\8324" ~ "t\8321\8328\8329"
"t\8321\8329\8324" ~ "t\8321\8329\8327"
"num\8321\8329\8328" ~ "t\8321\8329\8327"
"t\8321\8321\8322" ~ "t\8322\8320\8324"
"t\8321\8328\8328" ~ "t\8322\8320\8324"
"t\8322\8320\8324" ~ "t\8322\8320\8323"
"t\8321\8321\8323" ~ "t\8322\8320\8323"
"bool" ~ "t\8321\8329\8326"
"bool" ~ "t\8321\8329\8326"
"t\8321\8321\8324" ~ "t\8322\8321\8328"
"t\8321\8329\8324" ~ "t\8322\8321\8328"
"t\8322\8321\8328" ~ "t\8322\8321\8327"
"num\8322\8322\8323" ~ "t\8322\8321\8327"
"t\8322\8322\8328" ~ "t\8322\8321\8327"
"index\8322\8322\8329" ~ "index_elem\8322\8323\8320"
"[]a" ~ "[]index_elem\8322\8323\8320"
"t\8321\8321\8322" ~ "t\8322\8323\8321"
"t\8321\8328\8328" ~ "t\8322\8323\8321"
"t\8322\8323\8326" ~ "t\8322\8323\8321"
"index\8322\8323\8327" ~ "index_elem\8322\8323\8328"
"[]a" ~ "[]index_elem\8322\8323\8328"
"index\8322\8322\8329" ~ "a"
"index\8322\8323\8327" ~ "a"
"t\8321\8329\8326" ~ "t\8321\8329\8325"
"bool" ~ "t\8321\8329\8325"
"t\8322\8324\8327" ~ "t\8321\8329\8325"
"t\8321\8321\8324" ~ "t\8322\8324\8328"
"t\8321\8329\8324" ~ "t\8322\8324\8328"
"t\8321\8321\8326" ~ "t\8322\8325\8323"
"t\8321\8329\8324" ~ "t\8322\8325\8323"
"t\8321\8321\8324" ~ "t\8322\8325\8328"
"t\8321\8329\8324" ~ "t\8322\8325\8328"
"t\8322\8324\8327" ~ "bool"
"((t\8321\8321\8322, t\8321\8321\8323), (t\8322\8324\8328, t\8321\8321\8325), t\8322\8325\8323)" ~ "if_t\8322\8326\8323"
"((t\8321\8321\8322, t\8321\8321\8323), (t\8321\8321\8324, t\8322\8325\8328), t\8321\8321\8326)" ~ "if_t\8322\8326\8323"
"bool" ~ "bool"
"if_t\8321\8328\8321" ~ "if_t\8322\8326\8324"
"if_t\8322\8326\8323" ~ "if_t\8322\8326\8324"
"bool" ~ "bool"
"((t\8321\8324\8325, t\8321\8321\8323), (t\8321\8321\8324, t\8321\8321\8325), num\8321\8325\8320)" ~ "if_t\8322\8326\8325"
"if_t\8322\8326\8324" ~ "if_t\8322\8326\8325"
"bool" ~ "bool"
"((t\8321\8321\8322, t\8321\8321\8323), (t\8321\8322\8328, t\8321\8321\8325), num\8321\8323\8323)" ~ "if_t\8322\8326\8326"
"if_t\8322\8326\8325" ~ "if_t\8322\8326\8326"
"[]a" ~ "[]t\8322\8326\8328"
"[]a" ~ "[]t\8322\8327\8322"
"((num\8322\8326\8327, i64), (num\8322\8327\8321, i64), t\8322)" ~ "((t\8323, t\8324), (t\8325, t\8326), t\8327)"
"(t\8322\8327\8327, t\8322\8327\8328, t\8322\8327\8329)" ~ "((t\8328\8320, t\8321\8329), (t\8329\8320, t\8322\8329), t\8321\8321\8321)"
"t\8322\8327\8329" ~ "t\8322\8328\8320"
"num\8322\8328\8321" ~ "t\8322\8328\8320"
"(t\8322\8327\8327, t\8322\8327\8328, t\8322\8327\8329)" ~ "((t\8321\8321\8322, t\8321\8321\8323), (t\8321\8321\8324, t\8321\8321\8325), t\8321\8321\8326)"
"if_t\8322\8326\8326" ~ "((t\8323, t\8324), (t\8325, t\8326), t\8327)"
"((t\8328\8320, t\8321\8329), (t\8329\8320, t\8322\8329), t\8321\8321\8321)" ~ "((t\8328\8320, t\8321\8329), (t\8329\8320, t\8322\8329), t\8321\8321\8321)"
"((t\8322\8329\8320, t\8322\8329\8321), (t\8322\8329\8322, t\8322\8329\8323), t\8322\8329\8324)" ~ "(t\8322\8327\8327, t\8322\8327\8328, t\8322\8327\8329)"
"(i64, i64)" ~ "(t\8322\8329\8320, t\8322\8329\8322)"
## typarams
["(\"a\",(0,Unlifted,NoLoc))"]
## tyvars
[("t\8322",(4,TyVarFree NoLoc Lifted)),("t\8323",(6,TyVarFree NoLoc Lifted)),("t\8324",(6,TyVarFree NoLoc Lifted)),("t\8325",(6,TyVarFree NoLoc Lifted)),("t\8326",(6,TyVarFree NoLoc Lifted)),("t\8327",(6,TyVarFree NoLoc Lifted)),("t\8328",(8,TyVarFree NoLoc Lifted)),("t\8329",(10,TyVarFree NoLoc Lifted)),("t\8321\8320",(11,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8321\8329",(12,TyVarFree NoLoc Lifted)),("t\8322\8320",(13,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8322\8329",(14,TyVarFree NoLoc Lifted)),("t\8323\8320",(15,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8323\8321",(15,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8323\8322",(15,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8323\8327",(15,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8325\8320",(16,TyVarFree NoLoc Lifted)),("t\8325\8321",(17,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8326\8320",(18,TyVarFree NoLoc Lifted)),("t\8326\8321",(19,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8327\8320",(20,TyVarFree NoLoc Lifted)),("t\8327\8321",(21,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8328\8320",(22,TyVarFree NoLoc Lifted)),("t\8328\8321",(23,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8329\8320",(24,TyVarFree NoLoc Lifted)),("t\8329\8321",(25,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8329\8322",(25,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8329\8323",(25,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8321\8320\8322",(25,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8321\8321\8321",(26,TyVarFree NoLoc Lifted)),("t\8321\8321\8322",(6,TyVarFree NoLoc Lifted)),("t\8321\8321\8323",(6,TyVarFree NoLoc Lifted)),("t\8321\8321\8324",(6,TyVarFree NoLoc Lifted)),("t\8321\8321\8325",(6,TyVarFree NoLoc Lifted)),("t\8321\8321\8326",(6,TyVarFree NoLoc Lifted)),("t\8321\8321\8327",(7,TyVarPrim NoLoc [Bool,Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8321\8321\8328",(7,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("num\8321\8322\8323",(7,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8321\8322\8328",(7,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("num\8321\8323\8323",(7,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8321\8323\8324",(7,TyVarPrim NoLoc [Bool,Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8321\8323\8325",(7,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("num\8321\8324\8320",(7,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8321\8324\8325",(7,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("num\8321\8325\8320",(7,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8321\8325\8321",(7,TyVarFree NoLoc Unlifted)),("num\8321\8325\8322",(7,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8321\8325\8327",(7,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64])),("index\8321\8325\8328",(7,TyVarFree NoLoc Unlifted)),("index_elem\8321\8325\8329",(7,TyVarFree NoLoc Unlifted)),("t\8321\8326\8320",(7,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64])),("index\8321\8326\8321",(7,TyVarFree NoLoc Unlifted)),("index_elem\8321\8326\8322",(7,TyVarFree NoLoc Unlifted)),("t\8321\8326\8327",(7,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("num\8321\8326\8328",(7,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("num\8321\8327\8323",(7,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8321\8327\8324",(7,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("num\8321\8327\8325",(7,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("num\8321\8328\8320",(7,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("if_t\8321\8328\8321",(7,TyVarFree NoLoc SizeLifted)),("t\8321\8328\8322",(7,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("num\8321\8328\8323",(7,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8321\8328\8328",(8,TyVarFree NoLoc Lifted)),("t\8321\8328\8329",(9,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8321\8329\8324",(10,TyVarFree NoLoc Lifted)),("t\8321\8329\8325",(11,TyVarPrim NoLoc [Bool])),("t\8321\8329\8326",(11,TyVarPrim NoLoc [Bool])),("t\8321\8329\8327",(11,TyVarFree NoLoc Unlifted)),("num\8321\8329\8328",(11,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8322\8320\8323",(11,TyVarPrim NoLoc [Bool,Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8322\8320\8324",(11,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8322\8321\8327",(11,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8322\8321\8328",(11,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("num\8322\8322\8323",(11,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8322\8322\8328",(11,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64])),("index\8322\8322\8329",(11,TyVarFree NoLoc Unlifted)),("index_elem\8322\8323\8320",(11,TyVarFree NoLoc Unlifted)),("t\8322\8323\8321",(11,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8322\8323\8326",(11,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64])),("index\8322\8323\8327",(11,TyVarFree NoLoc Unlifted)),("index_elem\8322\8323\8328",(11,TyVarFree NoLoc Unlifted)),("t\8322\8324\8327",(12,TyVarFree NoLoc Lifted)),("t\8322\8324\8328",(13,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8322\8325\8323",(13,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8322\8325\8328",(13,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("if_t\8322\8326\8323",(13,TyVarFree NoLoc SizeLifted)),("if_t\8322\8326\8324",(7,TyVarFree NoLoc SizeLifted)),("if_t\8322\8326\8325",(7,TyVarFree NoLoc SizeLifted)),("if_t\8322\8326\8326",(7,TyVarFree NoLoc SizeLifted)),("num\8322\8326\8327",(5,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8322\8326\8328",(5,TyVarFree NoLoc Unlifted)),("num\8322\8327\8321",(5,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8322\8327\8322",(5,TyVarFree NoLoc Unlifted)),("t\8322\8327\8327",(5,TyVarFree NoLoc Lifted)),("t\8322\8327\8328",(5,TyVarFree NoLoc Lifted)),("t\8322\8327\8329",(5,TyVarFree NoLoc Lifted)),("t\8322\8328\8320",(5,TyVarPrim NoLoc [Bool,Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("num\8322\8328\8321",(5,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8322\8329\8320",(6,TyVarFree NoLoc Lifted)),("t\8322\8329\8321",(6,TyVarFree NoLoc Lifted)),("t\8322\8329\8322",(6,TyVarFree NoLoc Lifted)),("t\8322\8329\8323",(6,TyVarFree NoLoc Lifted)),("t\8322\8329\8324",(6,TyVarFree NoLoc Lifted))]
## solution
([],[("t\8322",Right "i64"),("t\8323",Right "i64"),("t\8324",Right "i64"),("t\8325",Right "i64"),("t\8326",Right "i64"),("t\8327",Right "i64"),("t\8328",Right "i64"),("t\8329",Right "i64"),("t\8321\8320",Right "i64"),("t\8321\8329",Right "i64"),("t\8322\8320",Right "i64"),("t\8322\8329",Right "i64"),("t\8323\8320",Right "i64"),("t\8323\8321",Right "i64"),("t\8323\8322",Right "i64"),("t\8323\8327",Right "i64"),("t\8325\8320",Right "i64"),("t\8325\8321",Right "i64"),("t\8326\8320",Right "i64"),("t\8326\8321",Right "i64"),("t\8327\8320",Right "i64"),("t\8327\8321",Right "i64"),("t\8328\8320",Right "i64"),("t\8328\8321",Right "i64"),("t\8329\8320",Right "i64"),("t\8329\8321",Right "i64"),("t\8329\8322",Right "i64"),("t\8329\8323",Right "i64"),("t\8321\8320\8322",Right "i64"),("t\8321\8321\8321",Right "i64"),("t\8321\8321\8322",Right "i64"),("t\8321\8321\8323",Right "i64"),("t\8321\8321\8324",Right "i64"),("t\8321\8321\8325",Right "i64"),("t\8321\8321\8326",Right "i64"),("t\8321\8321\8327",Right "i64"),("t\8321\8321\8328",Right "i64"),("num\8321\8322\8323",Right "i64"),("t\8321\8322\8328",Right "i64"),("num\8321\8323\8323",Right "i64"),("t\8321\8323\8324",Right "i64"),("t\8321\8323\8325",Right "i64"),("num\8321\8324\8320",Right "i64"),("t\8321\8324\8325",Right "i64"),("num\8321\8325\8320",Right "i64"),("t\8321\8325\8321",Right "i64"),("num\8321\8325\8322",Right "i64"),("t\8321\8325\8327",Right "i64"),("index\8321\8325\8328",Right "a"),("index_elem\8321\8325\8329",Right "a"),("t\8321\8326\8320",Right "i64"),("index\8321\8326\8321",Right "a"),("index_elem\8321\8326\8322",Right "a"),("t\8321\8326\8327",Right "i64"),("num\8321\8326\8328",Right "i64"),("num\8321\8327\8323",Right "i64"),("t\8321\8327\8324",Right "i64"),("num\8321\8327\8325",Right "i64"),("num\8321\8328\8320",Right "i64"),("if_t\8321\8328\8321",Right "((i64, i64), (i64, i64), i64)"),("t\8321\8328\8322",Right "i64"),("num\8321\8328\8323",Right "i64"),("t\8321\8328\8328",Right "i64"),("t\8321\8328\8329",Right "i64"),("t\8321\8329\8324",Right "i64"),("t\8321\8329\8325",Right "bool"),("t\8321\8329\8326",Right "bool"),("t\8321\8329\8327",Right "i64"),("num\8321\8329\8328",Right "i64"),("t\8322\8320\8323",Right "i64"),("t\8322\8320\8324",Right "i64"),("t\8322\8321\8327",Right "i64"),("t\8322\8321\8328",Right "i64"),("num\8322\8322\8323",Right "i64"),("t\8322\8322\8328",Right "i64"),("index\8322\8322\8329",Right "a"),("index_elem\8322\8323\8320",Right "a"),("t\8322\8323\8321",Right "i64"),("t\8322\8323\8326",Right "i64"),("index\8322\8323\8327",Right "a"),("index_elem\8322\8323\8328",Right "a"),("t\8322\8324\8327",Right "bool"),("t\8322\8324\8328",Right "i64"),("t\8322\8325\8323",Right "i64"),("t\8322\8325\8328",Right "i64"),("if_t\8322\8326\8323",Right "((i64, i64), (i64, i64), i64)"),("if_t\8322\8326\8324",Right "((i64, i64), (i64, i64), i64)"),("if_t\8322\8326\8325",Right "((i64, i64), (i64, i64), i64)"),("if_t\8322\8326\8326",Right "((i64, i64), (i64, i64), i64)"),("num\8322\8326\8327",Right "i64"),("t\8322\8326\8328",Right "a"),("num\8322\8327\8321",Right "i64"),("t\8322\8327\8322",Right "a"),("t\8322\8327\8327",Right "(i64, i64)"),("t\8322\8327\8328",Right "(i64, i64)"),("t\8322\8327\8329",Right "i64"),("t\8322\8328\8320",Right "i64"),("num\8322\8328\8321",Right "i64"),("t\8322\8329\8320",Right "i64"),("t\8322\8329\8321",Right "i64"),("t\8322\8329\8322",Right "i64"),("t\8322\8329\8323",Right "i64"),("t\8322\8329\8324",Right "i64")])

# TySolve.solve
## constraints
"t\8328\8329" ~ "[]t\8328\8329\8329\8320"
"t\8322\8327" ~ "[]t\8322\8327\8329\8321"
"[]a" ~ "[]t\8324"
"i64" ~ "t\8323"
"num\8327" ~ "t\8323"
"[]a" ~ "[]t\8321\8322"
"[]a" ~ "[]t\8321\8325"
"bool" ~ "bool"
"t\8321\8322" ~ "if_t\8321\8328"
"t\8321\8325" ~ "if_t\8321\8328"
"t\8321\8329" ~ "if_t\8321\8328"
"t\8322" ~ "i64"
"t\8321\8329" ~ "t\8322\8321"
"(t\8322\8326, t\8322\8327)" ~ "(num\8322\8320, []t\8322\8321)"
"t\8322\8328" ~ "t\8322"
"t\8322" ~ "t\8322\8329"
"t\8322\8326" ~ "t\8322\8329"
"t\8323\8324" ~ "t\8322\8329"
"[]a" ~ "[]t\8323\8327"
"t\8323\8324" ~ "t\8323\8326"
"i64" ~ "t\8323\8326"
"[]a" ~ "[]t\8324\8326"
"t\8322\8326" ~ "t\8324\8325"
"i64" ~ "t\8324\8325"
"t\8325\8323" ~ "t\8322\8326"
"index\8325\8324" ~ "index_elem\8325\8325"
"[]a" ~ "[]index_elem\8325\8325"
"t\8325\8326" ~ "t\8323\8324"
"index\8325\8327" ~ "index_elem\8325\8328"
"[]a" ~ "[]index_elem\8325\8328"
"index\8325\8324" ~ "a"
"index\8325\8327" ~ "a"
"bool" ~ "t\8324\8324"
"bool" ~ "t\8324\8324"
"bool" ~ "t\8323\8325"
"t\8324\8324" ~ "t\8323\8325"
"t\8322\8326" ~ "t\8327\8321"
"num\8327\8322" ~ "t\8327\8321"
"t\8327\8327" ~ "t\8322\8326"
"index\8327\8328" ~ "index_elem\8327\8329"
"[]a" ~ "[]index_elem\8327\8329"
"t\8328\8320" ~ "t\8323\8324"
"index\8328\8321" ~ "index_elem\8328\8322"
"[]a" ~ "[]index_elem\8328\8322"
"t\8323\8325" ~ "bool"
"(t\8327\8321, index\8327\8328)" ~ "if_t\8328\8323"
"(t\8322\8326, index\8328\8321)" ~ "if_t\8328\8323"
"(t\8328\8324, t\8328\8325)" ~ "if_t\8328\8323"
"t\8328\8326" ~ "t\8322"
"t\8322\8327" ~ "[]update_elem\8328\8327"
"t\8328\8325" ~ "update_elem\8328\8327"
"(num\8322\8320, []t\8322\8321)" ~ "(t\8328\8324, t\8322\8327)"
"(t\8328\8328, t\8328\8329)" ~ "(t\8322\8326, t\8322\8327)"
"t\8322" ~ "i64"
"[]a" ~ "t\8328\8329"
## typarams
["(\"a\",(0,Unlifted,NoLoc))"]
## tyvars
[("t\8322",(4,TyVarFree NoLoc Lifted)),("t\8323",(5,TyVarPrim NoLoc [Bool,Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8324",(5,TyVarFree NoLoc Unlifted)),("num\8327",(5,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8321\8322",(5,TyVarFree NoLoc Unlifted)),("t\8321\8325",(5,TyVarFree NoLoc Unlifted)),("if_t\8321\8328",(5,TyVarFree NoLoc SizeLifted)),("t\8321\8329",(6,TyVarFree NoLoc Lifted)),("num\8322\8320",(7,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8322\8321",(7,TyVarFree NoLoc Unlifted)),("t\8322\8326",(7,TyVarFree NoLoc Lifted)),("t\8322\8327",(7,TyVarFree NoLoc Lifted)),("t\8322\8328",(7,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64])),("t\8322\8329",(7,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8323\8324",(8,TyVarFree NoLoc Lifted)),("t\8323\8325",(9,TyVarPrim NoLoc [Bool])),("t\8323\8326",(9,TyVarFree NoLoc Unlifted)),("t\8323\8327",(9,TyVarFree NoLoc Unlifted)),("t\8324\8324",(9,TyVarPrim NoLoc [Bool])),("t\8324\8325",(9,TyVarPrim NoLoc [Bool,Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8324\8326",(9,TyVarFree NoLoc Unlifted)),("t\8325\8323",(9,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64])),("index\8325\8324",(9,TyVarFree NoLoc Unlifted)),("index_elem\8325\8325",(9,TyVarFree NoLoc Unlifted)),("t\8325\8326",(9,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64])),("index\8325\8327",(9,TyVarFree NoLoc Unlifted)),("index_elem\8325\8328",(9,TyVarFree NoLoc Unlifted)),("t\8327\8321",(9,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("num\8327\8322",(9,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8327\8327",(9,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64])),("index\8327\8328",(9,TyVarFree NoLoc Unlifted)),("index_elem\8327\8329",(9,TyVarFree NoLoc Unlifted)),("t\8328\8320",(9,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64])),("index\8328\8321",(9,TyVarFree NoLoc Unlifted)),("index_elem\8328\8322",(9,TyVarFree NoLoc Unlifted)),("if_t\8328\8323",(9,TyVarFree NoLoc SizeLifted)),("t\8328\8324",(10,TyVarFree NoLoc Lifted)),("t\8328\8325",(10,TyVarFree NoLoc Lifted)),("t\8328\8326",(11,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64])),("update_elem\8328\8327",(11,TyVarFree NoLoc Unlifted)),("t\8328\8328",(8,TyVarFree NoLoc Lifted)),("t\8328\8329",(8,TyVarFree NoLoc Lifted)),("t\8328\8329\8329\8320",(8,TyVarFree NoLoc Lifted)),("t\8322\8327\8329\8321",(7,TyVarFree NoLoc Lifted))]
## solution
([],[("t\8322",Right "i64"),("t\8323",Right "i64"),("t\8324",Right "a"),("num\8327",Right "i64"),("t\8321\8322",Right "a"),("t\8321\8325",Right "a"),("if_t\8321\8328",Right "a"),("t\8321\8329",Right "a"),("num\8322\8320",Right "i64"),("t\8322\8321",Right "a"),("t\8322\8326",Right "i64"),("t\8322\8327",Right "[]a"),("t\8322\8328",Right "i64"),("t\8322\8329",Right "i64"),("t\8323\8324",Right "i64"),("t\8323\8325",Right "bool"),("t\8323\8326",Right "i64"),("t\8323\8327",Right "a"),("t\8324\8324",Right "bool"),("t\8324\8325",Right "i64"),("t\8324\8326",Right "a"),("t\8325\8323",Right "i64"),("index\8325\8324",Right "a"),("index_elem\8325\8325",Right "a"),("t\8325\8326",Right "i64"),("index\8325\8327",Right "a"),("index_elem\8325\8328",Right "a"),("t\8327\8321",Right "i64"),("num\8327\8322",Right "i64"),("t\8327\8327",Right "i64"),("index\8327\8328",Right "a"),("index_elem\8327\8329",Right "a"),("t\8328\8320",Right "i64"),("index\8328\8321",Right "a"),("index_elem\8328\8322",Right "a"),("if_t\8328\8323",Right "(i64, a)"),("t\8328\8324",Right "i64"),("t\8328\8325",Right "a"),("t\8328\8326",Right "i64"),("update_elem\8328\8327",Right "a"),("t\8328\8328",Right "i64"),("t\8328\8329",Right "[]a"),("t\8328\8329\8329\8320",Right "a"),("t\8322\8327\8329\8321",Right "a")])

# TySolve.solve
## constraints
"if_t\8321\8322\8322" ~ "[]if_t\8321\8322\8322\8321\8322\8323"
"a\8321\8321\8321" ~ "[]a\8321\8321\8321\8321\8322\8324"
"index\8329\8329" ~ "[]index\8329\8329\8321\8322\8325"
"index\8328\8327" ~ "[]index\8328\8327\8321\8322\8326"
"t\8326\8328" ~ "[]t\8326\8328\8321\8322\8327"
"index\8324\8329" ~ "[]index\8324\8329\8321\8322\8328"
"index\8324\8327" ~ "[]index\8324\8327\8321\8322\8329"
"index\8321\8321" ~ "[]index\8321\8321\8321\8323\8320"
"index\8329" ~ "[]index\8329\8321\8323\8321"
"i64" ~ "t\8322"
"num\8323" ~ "t\8322"
"i64" ~ "t\8320"
"index\8329" ~ "[]index_elem\8321\8320"
"[]a" ~ "[]index_elem\8321\8320"
"i64" ~ "t\8320"
"index\8321\8321" ~ "[]index_elem\8321\8322"
"[]a" ~ "[]index_elem\8321\8322"
"a -> a -> bool" ~ "a\8328 -> a\8328 -> bool"
"index\8329" ~ "[]a\8328"
"index\8321\8321" ~ "[]a\8328"
"i64" ~ "i64"
"i64" ~ "t\8322\8322"
"t\8321" ~ "t\8322\8322"
"t\8322\8322" ~ "t\8322\8321"
"num\8322\8327" ~ "t\8322\8321"
"bool" ~ "bool"
"i64" ~ "t\8323\8322"
"t\8321" ~ "t\8323\8322"
"t\8323\8327" ~ "t\8323\8322"
"num\8324\8320" ~ "t\8323\8329"
"t\8323\8327" ~ "t\8323\8329"
"i64" ~ "t\8320"
"index\8324\8327" ~ "[]index_elem\8324\8328"
"[]a" ~ "[]index_elem\8324\8328"
"i64" ~ "t\8320"
"index\8324\8329" ~ "[]index_elem\8325\8320"
"[]a" ~ "[]index_elem\8325\8320"
"t\8324\8325" ~ "t\8325\8321"
"t\8321" ~ "t\8325\8321"
"a -> a -> bool" ~ "a\8324\8326 -> a\8324\8326 -> bool"
"index\8324\8327" ~ "[]a\8324\8326"
"index\8324\8329" ~ "[]a\8324\8326"
"t\8325\8321" ~ "i64"
"t\8323\8329" ~ "i64"
"(i: t\8324\8325) -> (i64, i64)" ~ "i64 -> a\8323\8328"
"t\8326\8328" ~ "[]a\8323\8328"
"t\8327\8320" ~ "t\8326\8329"
"index\8327\8321" ~ "index_elem\8327\8322"
"t\8326\8328" ~ "[]index_elem\8327\8322"
"(t\8327\8323, t\8327\8324)" ~ "index\8327\8321"
"t\8326\8329" ~ "t\8327\8325"
"num\8327\8326" ~ "t\8327\8325"
"t\8328\8321" ~ "t\8327\8325"
"index\8328\8322" ~ "index_elem\8328\8323"
"t\8326\8328" ~ "[]index_elem\8328\8323"
"(t\8328\8324, t\8328\8325)" ~ "index\8328\8322"
"i64" ~ "t\8327\8323"
"i64" ~ "t\8328\8324"
"index\8328\8327" ~ "[]index_elem\8328\8328"
"[]a" ~ "[]index_elem\8328\8328"
"t\8320" ~ "t\8328\8329"
"t\8327\8324" ~ "t\8328\8329"
"i64" ~ "t\8328\8329"
"t\8320" ~ "t\8329\8324"
"t\8328\8325" ~ "t\8329\8324"
"i64" ~ "t\8329\8324"
"index\8329\8329" ~ "[]index_elem\8321\8320\8320"
"[]a" ~ "[]index_elem\8321\8320\8320"
"a -> a -> bool" ~ "a\8328\8326 -> a\8328\8326 -> bool"
"index\8328\8327" ~ "[]a\8328\8326"
"index\8329\8329" ~ "[]a\8328\8326"
"t\8321" ~ "i64"
"t\8321" ~ "i64"
"[]a" ~ "[]a\8328\8326"
"t\8323\8327" ~ "i64"
"(b: t\8326\8329) -> []a" ~ "i64 -> a\8321\8321\8321"
"[]a\8321\8321\8321" ~ "[][]t\8321\8321\8320"
"i64" ~ "i64"
"[]t\8321\8321\8320" ~ "[]t\8321\8320\8329"
"bool" ~ "bool"
"[]a\8328" ~ "if_t\8321\8322\8322"
"[]t\8321\8320\8329" ~ "if_t\8321\8322\8322"
"[]a" ~ "if_t\8321\8322\8322"
## typarams
["(\"a\",(0,Unlifted,NoLoc))"]
## tyvars
[("t\8320",(3,TyVarFree NoLoc Lifted)),("t\8321",(4,TyVarFree NoLoc Lifted)),("t\8322",(5,TyVarPrim NoLoc [Bool,Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("num\8323",(5,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("a\8328",(5,TyVarFree NoLoc Unlifted)),("index\8329",(5,TyVarFree NoLoc Unlifted)),("index_elem\8321\8320",(5,TyVarFree NoLoc Unlifted)),("index\8321\8321",(5,TyVarFree NoLoc Unlifted)),("index_elem\8321\8322",(5,TyVarFree NoLoc Unlifted)),("t\8322\8321",(5,TyVarFree NoLoc Unlifted)),("t\8322\8322",(5,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("num\8322\8327",(5,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8323\8322",(5,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8323\8327",(6,TyVarFree NoLoc Lifted)),("a\8323\8328",(7,TyVarFree NoLoc Unlifted)),("t\8323\8329",(7,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("num\8324\8320",(7,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8324\8325",(8,TyVarFree NoLoc Lifted)),("a\8324\8326",(9,TyVarFree NoLoc Unlifted)),("index\8324\8327",(9,TyVarFree NoLoc Unlifted)),("index_elem\8324\8328",(9,TyVarFree NoLoc Unlifted)),("index\8324\8329",(9,TyVarFree NoLoc Unlifted)),("index_elem\8325\8320",(9,TyVarFree NoLoc Unlifted)),("t\8325\8321",(9,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8326\8328",(8,TyVarFree NoLoc Lifted)),("t\8326\8329",(10,TyVarFree NoLoc Lifted)),("t\8327\8320",(11,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64])),("index\8327\8321",(11,TyVarFree NoLoc Unlifted)),("index_elem\8327\8322",(11,TyVarFree NoLoc Unlifted)),("t\8327\8323",(12,TyVarFree NoLoc Lifted)),("t\8327\8324",(12,TyVarFree NoLoc Lifted)),("t\8327\8325",(13,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("num\8327\8326",(13,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8328\8321",(13,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64])),("index\8328\8322",(13,TyVarFree NoLoc Unlifted)),("index_elem\8328\8323",(13,TyVarFree NoLoc Unlifted)),("t\8328\8324",(14,TyVarFree NoLoc Lifted)),("t\8328\8325",(14,TyVarFree NoLoc Lifted)),("a\8328\8326",(15,TyVarFree NoLoc Unlifted)),("index\8328\8327",(15,TyVarFree NoLoc Unlifted)),("index_elem\8328\8328",(15,TyVarFree NoLoc Unlifted)),("t\8328\8329",(15,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8329\8324",(15,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("index\8329\8329",(15,TyVarFree NoLoc Unlifted)),("index_elem\8321\8320\8320",(15,TyVarFree NoLoc Unlifted)),("t\8321\8320\8329",(9,TyVarFree NoLoc Unlifted)),("t\8321\8321\8320",(9,TyVarFree NoLoc Unlifted)),("a\8321\8321\8321",(9,TyVarFree NoLoc Unlifted)),("if_t\8321\8322\8322",(5,TyVarFree NoLoc SizeLifted)),("if_t\8321\8322\8322\8321\8322\8323",(5,TyVarFree NoLoc SizeLifted)),("a\8321\8321\8321\8321\8322\8324",(9,TyVarFree NoLoc Unlifted)),("index\8329\8329\8321\8322\8325",(15,TyVarFree NoLoc Unlifted)),("index\8328\8327\8321\8322\8326",(15,TyVarFree NoLoc Unlifted)),("t\8326\8328\8321\8322\8327",(8,TyVarFree NoLoc Lifted)),("index\8324\8329\8321\8322\8328",(9,TyVarFree NoLoc Unlifted)),("index\8324\8327\8321\8322\8329",(9,TyVarFree NoLoc Unlifted)),("index\8321\8321\8321\8323\8320",(5,TyVarFree NoLoc Unlifted)),("index\8329\8321\8323\8321",(5,TyVarFree NoLoc Unlifted))]
## solution
([],[("t\8320",Right "i64"),("t\8321",Right "i64"),("t\8322",Right "i64"),("num\8323",Right "i64"),("a\8328",Right "a"),("index\8329",Right "[]a"),("index_elem\8321\8320",Right "a"),("index\8321\8321",Right "[]a"),("index_elem\8321\8322",Right "a"),("t\8322\8321",Right "i64"),("t\8322\8322",Right "i64"),("num\8322\8327",Right "i64"),("t\8323\8322",Right "i64"),("t\8323\8327",Right "i64"),("a\8323\8328",Right "(i64, i64)"),("t\8323\8329",Right "i64"),("num\8324\8320",Right "i64"),("t\8324\8325",Right "i64"),("a\8324\8326",Right "a"),("index\8324\8327",Right "[]a"),("index_elem\8324\8328",Right "a"),("index\8324\8329",Right "[]a"),("index_elem\8325\8320",Right "a"),("t\8325\8321",Right "i64"),("t\8326\8328",Right "[](i64, i64)"),("t\8326\8329",Right "i64"),("t\8327\8320",Right "i64"),("index\8327\8321",Right "(i64, i64)"),("index_elem\8327\8322",Right "(i64, i64)"),("t\8327\8323",Right "i64"),("t\8327\8324",Right "i64"),("t\8327\8325",Right "i64"),("num\8327\8326",Right "i64"),("t\8328\8321",Right "i64"),("index\8328\8322",Right "(i64, i64)"),("index_elem\8328\8323",Right "(i64, i64)"),("t\8328\8324",Right "i64"),("t\8328\8325",Right "i64"),("a\8328\8326",Right "a"),("index\8328\8327",Right "[]a"),("index_elem\8328\8328",Right "a"),("t\8328\8329",Right "i64"),("t\8329\8324",Right "i64"),("index\8329\8329",Right "[]a"),("index_elem\8321\8320\8320",Right "a"),("t\8321\8320\8329",Right "a"),("t\8321\8321\8320",Right "a"),("a\8321\8321\8321",Right "[]a"),("if_t\8321\8322\8322",Right "[]a"),("if_t\8321\8322\8322\8321\8322\8323",Right "a"),("a\8321\8321\8321\8321\8322\8324",Right "a"),("index\8329\8329\8321\8322\8325",Right "a"),("index\8328\8327\8321\8322\8326",Right "a"),("t\8326\8328\8321\8322\8327",Right "(i64, i64)"),("index\8324\8329\8321\8322\8328",Right "a"),("index\8324\8327\8321\8322\8329",Right "a"),("index\8321\8321\8321\8323\8320",Right "a"),("index\8329\8321\8323\8321",Right "a")])

# TySolve.solve
## constraints
"if_t\8329\8323" ~ "[]if_t\8329\8323\8329\8324"
"t\8321\8323" ~ "[]t\8321\8323\8329\8325"
"t\8329\8321" ~ "[]t\8329\8321\8329\8326"
"t\8322\8325" ~ "[]t\8322\8325\8329\8327"
"t\8328\8324" ~ "[]t\8328\8324\8329\8328"
"t\8327\8325" ~ "[]t\8327\8325\8329\8329"
"range\8322\8322" ~ "[]range\8322\8322\8321\8320\8320"
"i64" ~ "t\8320"
"num\8321" ~ "t\8320"
"t\8326" ~ "t"
"t\8327" ~ "t"
"t\8321\8322" ~ "bool"
"t\8321\8323" ~ "[]t"
"t\8321\8325" ~ "num\8321\8324"
"i64" ~ "t\8321\8326"
"num\8321\8327" ~ "t\8321\8326"
"num\8321\8324" ~ "t\8321\8326"
"range\8322\8322" ~ "[]num\8321\8324"
"range\8322\8322" ~ "[]elem\8322\8323"
"t\8322\8324" ~ "elem\8322\8323"
"(t\8322\8325, t\8322\8326)" ~ "(t\8321\8323, t\8322\8324)"
"t\8322\8326" ~ "t\8322\8328"
"num\8322\8329" ~ "t\8322\8328"
"t\8323\8324" ~ "t\8322\8326"
"index\8323\8325" ~ "index_elem\8323\8326"
"t\8322\8325" ~ "[]index_elem\8323\8326"
"t\8322\8326" ~ "t\8323\8327"
"num\8323\8328" ~ "t\8323\8327"
"t\8324\8323" ~ "t\8323\8327"
"index\8324\8324" ~ "index_elem\8324\8325"
"t\8322\8325" ~ "[]index_elem\8324\8325"
"index\8323\8325" ~ "t\8326"
"index\8324\8324" ~ "t\8327"
"bool" ~ "t\8322\8327"
"bool" ~ "t\8322\8327"
"t\8325\8325" ~ "t\8322\8326"
"index\8325\8326" ~ "index_elem\8325\8327"
"t\8322\8325" ~ "[]index_elem\8325\8327"
"index\8325\8326" ~ "t\8325\8324"
"t\8326\8320" ~ "t\8325\8324"
"t\8326\8321" ~ "t\8322\8326"
"t\8322\8326" ~ "t\8326\8323"
"num\8326\8324" ~ "t\8326\8323"
"t\8326\8329" ~ "t\8326\8323"
"index\8327\8320" ~ "index_elem\8327\8321"
"t\8322\8325" ~ "[]index_elem\8327\8321"
"index\8327\8320" ~ "t\8326\8322"
"t\8322\8325" ~ "[]update_elem\8327\8324"
"t\8326\8322" ~ "update_elem\8327\8324"
"t\8327\8325" ~ "t\8322\8325"
"t\8322\8326" ~ "t\8327\8326"
"num\8327\8327" ~ "t\8327\8326"
"t\8328\8322" ~ "t\8327\8326"
"t\8327\8325" ~ "[]update_elem\8328\8323"
"t\8326\8320" ~ "update_elem\8328\8323"
"t\8328\8324" ~ "t\8327\8325"
"t\8322\8326" ~ "t\8328\8325"
"num\8328\8326" ~ "t\8328\8325"
"(t\8321\8323, t\8322\8324)" ~ "(t\8328\8324, t\8328\8325)"
"(t\8329\8321, t\8329\8322)" ~ "(t\8322\8325, t\8322\8326)"
"[]t" ~ "t\8329\8321"
"bool" ~ "bool"
"[]t" ~ "if_t\8329\8323"
"t\8321\8323" ~ "if_t\8329\8323"
"[]t" ~ "if_t\8329\8323"
## typarams
["(\"t\",(0,Unlifted,NoLoc))"]
## tyvars
[("t\8320",(3,TyVarPrim NoLoc [Bool,Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("num\8321",(3,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8326",(4,TyVarFree NoLoc Lifted)),("t\8327",(5,TyVarFree NoLoc Lifted)),("t\8321\8322",(6,TyVarPrim NoLoc [Bool,Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64])),("t\8321\8323",(3,TyVarFree NoLoc Lifted)),("num\8321\8324",(3,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8321\8325",(3,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64])),("t\8321\8326",(3,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("num\8321\8327",(3,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("range\8322\8322",(3,TyVarFree NoLoc Unlifted)),("elem\8322\8323",(3,TyVarFree NoLoc Unlifted)),("t\8322\8324",(3,TyVarFree NoLoc Lifted)),("t\8322\8325",(3,TyVarFree NoLoc Lifted)),("t\8322\8326",(3,TyVarFree NoLoc Lifted)),("t\8322\8327",(3,TyVarPrim NoLoc [Bool])),("t\8322\8328",(3,TyVarPrim NoLoc [Bool,Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("num\8322\8329",(3,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8323\8324",(3,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64])),("index\8323\8325",(3,TyVarFree NoLoc Unlifted)),("index_elem\8323\8326",(3,TyVarFree NoLoc Unlifted)),("t\8323\8327",(3,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("num\8323\8328",(3,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8324\8323",(3,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64])),("index\8324\8324",(3,TyVarFree NoLoc Unlifted)),("index_elem\8324\8325",(3,TyVarFree NoLoc Unlifted)),("t\8325\8324",(3,TyVarFree NoLoc Unlifted)),("t\8325\8325",(3,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64])),("index\8325\8326",(3,TyVarFree NoLoc Unlifted)),("index_elem\8325\8327",(3,TyVarFree NoLoc Unlifted)),("t\8326\8320",(4,TyVarFree NoLoc Lifted)),("t\8326\8321",(5,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64])),("t\8326\8322",(5,TyVarFree NoLoc Unlifted)),("t\8326\8323",(5,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("num\8326\8324",(5,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8326\8329",(5,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64])),("index\8327\8320",(5,TyVarFree NoLoc Unlifted)),("index_elem\8327\8321",(5,TyVarFree NoLoc Unlifted)),("update_elem\8327\8324",(5,TyVarFree NoLoc Unlifted)),("t\8327\8325",(6,TyVarFree NoLoc Lifted)),("t\8327\8326",(7,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("num\8327\8327",(7,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8328\8322",(7,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64])),("update_elem\8328\8323",(7,TyVarFree NoLoc Unlifted)),("t\8328\8324",(8,TyVarFree NoLoc Lifted)),("t\8328\8325",(9,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("num\8328\8326",(9,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8329\8321",(4,TyVarFree NoLoc Lifted)),("t\8329\8322",(4,TyVarFree NoLoc Lifted)),("if_t\8329\8323",(3,TyVarFree NoLoc SizeLifted)),("if_t\8329\8323\8329\8324",(3,TyVarFree NoLoc SizeLifted)),("t\8321\8323\8329\8325",(3,TyVarFree NoLoc Lifted)),("t\8329\8321\8329\8326",(4,TyVarFree NoLoc Lifted)),("t\8322\8325\8329\8327",(3,TyVarFree NoLoc Lifted)),("t\8328\8324\8329\8328",(8,TyVarFree NoLoc Lifted)),("t\8327\8325\8329\8329",(6,TyVarFree NoLoc Lifted)),("range\8322\8322\8321\8320\8320",(3,TyVarFree NoLoc Unlifted))]
## solution
([],[("t\8320",Right "i64"),("num\8321",Right "i64"),("t\8326",Right "t"),("t\8327",Right "t"),("t\8321\8322",Right "bool"),("t\8321\8323",Right "[]t"),("num\8321\8324",Right "i64"),("t\8321\8325",Right "i64"),("t\8321\8326",Right "i64"),("num\8321\8327",Right "i64"),("range\8322\8322",Right "[]i64"),("elem\8322\8323",Right "i64"),("t\8322\8324",Right "i64"),("t\8322\8325",Right "[]t"),("t\8322\8326",Right "i64"),("t\8322\8327",Right "bool"),("t\8322\8328",Right "i64"),("num\8322\8329",Right "i64"),("t\8323\8324",Right "i64"),("index\8323\8325",Right "t"),("index_elem\8323\8326",Right "t"),("t\8323\8327",Right "i64"),("num\8323\8328",Right "i64"),("t\8324\8323",Right "i64"),("index\8324\8324",Right "t"),("index_elem\8324\8325",Right "t"),("t\8325\8324",Right "t"),("t\8325\8325",Right "i64"),("index\8325\8326",Right "t"),("index_elem\8325\8327",Right "t"),("t\8326\8320",Right "t"),("t\8326\8321",Right "i64"),("t\8326\8322",Right "t"),("t\8326\8323",Right "i64"),("num\8326\8324",Right "i64"),("t\8326\8329",Right "i64"),("index\8327\8320",Right "t"),("index_elem\8327\8321",Right "t"),("update_elem\8327\8324",Right "t"),("t\8327\8325",Right "[]t"),("t\8327\8326",Right "i64"),("num\8327\8327",Right "i64"),("t\8328\8322",Right "i64"),("update_elem\8328\8323",Right "t"),("t\8328\8324",Right "[]t"),("t\8328\8325",Right "i64"),("num\8328\8326",Right "i64"),("t\8329\8321",Right "[]t"),("t\8329\8322",Right "i64"),("if_t\8329\8323",Right "[]t"),("if_t\8329\8323\8329\8324",Right "t"),("t\8321\8323\8329\8325",Right "t"),("t\8329\8321\8329\8326",Right "t"),("t\8322\8325\8329\8327",Right "t"),("t\8328\8324\8329\8328",Right "t"),("t\8327\8325\8329\8329",Right "t"),("range\8322\8322\8321\8320\8320",Right "i64")])

# TySolve.solve
## constraints
"i64" ~ "num\8321"
"i64" ~ "t\8322"
"t\8320" ~ "t\8322"
"num\8328" ~ "t\8327"
"i64" ~ "t\8327"
"num\8321" ~ "t\8327"
## typarams
mempty
## tyvars
[("t\8320",(1,TyVarFree NoLoc Lifted)),("num\8321",(2,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8322",(2,TyVarPrim NoLoc [Bool,Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8327",(2,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("num\8328",(2,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("t\8320",Right "i64"),("num\8321",Right "i64"),("t\8322",Right "i64"),("t\8327",Right "i64"),("num\8328",Right "i64")])

# TySolve.solve
## constraints
"t\8320" ~ "t\8322"
"num\8323" ~ "t\8322"
"bool" ~ "bool"
"t\8328" ~ "t\8320"
"i64" ~ "num\8329"
"t\8321" ~ "t\8321\8322"
"i64" ~ "t\8321\8322"
"t\8321\8322" ~ "t\8321\8321"
"t\8328" ~ "t\8321\8321"
"t\8321" ~ "t\8322\8322"
"i64" ~ "t\8322\8322"
"t\8322\8322" ~ "t\8322\8321"
"num\8322\8327" ~ "t\8322\8321"
"bool" ~ "t\8321\8320"
"bool" ~ "t\8321\8320"
"i64" ~ "t\8323\8326"
"num\8323\8327" ~ "t\8323\8326"
"num\8329" ~ "t\8323\8326"
"t\8324\8322" ~ "i64"
"t\8321" ~ "t\8324\8323"
"t\8324\8322" ~ "t\8324\8323"
## typarams
mempty
## tyvars
[("t\8320",(1,TyVarFree NoLoc Lifted)),("t\8321",(2,TyVarFree NoLoc Lifted)),("t\8322",(3,TyVarPrim NoLoc [Bool,Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("num\8323",(3,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8328",(4,TyVarFree NoLoc Lifted)),("num\8329",(5,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8321\8320",(5,TyVarPrim NoLoc [Bool])),("t\8321\8321",(5,TyVarPrim NoLoc [Bool,Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8321\8322",(5,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8322\8321",(5,TyVarFree NoLoc Unlifted)),("t\8322\8322",(5,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("num\8322\8327",(5,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8323\8326",(5,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("num\8323\8327",(5,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8324\8322",(6,TyVarFree NoLoc Lifted)),("t\8324\8323",(7,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("t\8320",Right "i64"),("t\8321",Right "i64"),("t\8322",Right "i64"),("num\8323",Right "i64"),("t\8328",Right "i64"),("num\8329",Right "i64"),("t\8321\8320",Right "bool"),("t\8321\8321",Right "i64"),("t\8321\8322",Right "i64"),("t\8322\8321",Right "i64"),("t\8322\8322",Right "i64"),("num\8322\8327",Right "i64"),("t\8323\8326",Right "i64"),("num\8323\8327",Right "i64"),("t\8324\8322",Right "i64"),("t\8324\8323",Right "i64")])

# TySolve.solve
## constraints
"if_t\8322\8320\8323" ~ "[]if_t\8322\8320\8323\8322\8320\8324"
"t\8321\8329\8326" ~ "[]t\8321\8329\8326\8322\8320\8325"
"t\8321\8324\8320" ~ "[]t\8321\8324\8320\8322\8320\8326"
"t\8321\8323\8329" ~ "[]t\8321\8323\8329\8322\8320\8327"
"t\8321\8329\8325" ~ "[]t\8321\8329\8325\8322\8320\8328"
"a\8321\8326\8321" ~ "[]a\8321\8326\8321\8322\8320\8329"
"t\8321\8327\8329" ~ "[]t\8321\8327\8329\8322\8321\8320"
"a\8329\8329" ~ "[]a\8329\8329\8322\8321\8321"
"t\8321\8322\8327" ~ "[]t\8321\8322\8327\8322\8321\8322"
"[]t" ~ "[]t\8323"
"i64" ~ "t\8322"
"num\8326" ~ "t\8322"
"num\8321\8321" ~ "i64"
"t\8320" ~ "i64"
"t\8321\8326" ~ "i64"
"num\8321\8327" ~ "i64"
"t\8321" ~ "i64"
"t\8322\8322" ~ "i64"
"i64" ~ "t\8322\8326"
"num\8322\8327" ~ "t\8322\8326"
"t\8322\8326" ~ "t\8322\8325"
"t\8321\8326" ~ "t\8322\8325"
"num\8322\8324" ~ "t\8322\8323"
"t\8322\8325" ~ "t\8322\8323"
"t\8324\8320" ~ "t\8322\8323"
"t\8324\8320" ~ "i64"
"t\8324\8323" ~ "i64"
"i64" ~ "t\8324\8327"
"num\8324\8328" ~ "t\8324\8327"
"t\8324\8327" ~ "t\8324\8326"
"t\8324\8323" ~ "t\8324\8326"
"num\8324\8325" ~ "t\8324\8324"
"t\8324\8326" ~ "t\8324\8324"
"t\8326\8321" ~ "t\8324\8324"
"t\8326\8321" ~ "t\8326\8322"
"t\8324\8323" ~ "t\8326\8322"
"t\8326\8327" ~ "t\8326\8322"
"num\8326\8329" ~ "t\8326\8328"
"t\8326\8321" ~ "t\8326\8328"
"t\8322\8322" ~ "i64"
"t\8326\8328" ~ "i64"
"t\8327\8328" ~ "i64"
"t\8328\8320" ~ "t"
"t\8328\8321" ~ "t"
"bool" ~ "bool"
"t\8328\8321" ~ "if_t\8328\8326"
"t\8328\8320" ~ "if_t\8328\8326"
"t\8328\8328" ~ "num\8328\8327"
"index\8328\8329" ~ "index_elem\8329\8320"
"[]t" ~ "[]index_elem\8329\8320"
"(a: t\8328\8320) -> (b: t\8328\8321) -> if_t\8328\8326" ~ "a\8327\8329 -> a\8327\8329 -> a\8327\8329"
"index\8328\8329" ~ "a\8327\8329"
"[]t" ~ "[]a\8327\8329"
"t\8329\8327" ~ "a\8327\8329"
"t\8321\8320\8320" ~ "t\8321\8320\8324"
"t\8326\8321" ~ "t\8321\8320\8324"
"t\8321\8320\8324" ~ "t\8321\8320\8323"
"t\8321\8320\8322" ~ "t\8321\8320\8323"
"t\8321\8321\8323" ~ "t\8321\8320\8323"
"t\8321\8321\8323" ~ "t\8321\8321\8324"
"i64" ~ "t\8321\8321\8324"
"t\8321\8321\8329" ~ "t\8321\8321\8323"
"index\8321\8322\8320" ~ "index_elem\8321\8322\8321"
"[]t" ~ "[]index_elem\8321\8322\8321"
"bool" ~ "bool"
"index\8321\8322\8320" ~ "if_t\8321\8322\8322"
"t\8329\8327" ~ "if_t\8321\8322\8322"
"t\8326\8321" ~ "i64"
"(j: t\8321\8320\8322) -> if_t\8321\8322\8322" ~ "i64 -> a\8321\8320\8321"
"t\8321\8322\8327" ~ "[]a\8321\8320\8321"
"t -> t -> bool" ~ "t\8321\8322\8328 -> t\8321\8322\8328 -> bool"
"t\8321\8322\8327" ~ "[]t\8321\8322\8328"
"t\8324\8323" ~ "i64"
"(i: t\8321\8320\8320) -> []t\8321\8322\8328" ~ "i64 -> a\8329\8329"
"[]a\8329\8329" ~ "[][]t\8329\8328"
"t\8321\8323\8329" ~ "[]t\8329\8328"
"(t\8321\8324\8320, t\8321\8324\8321)" ~ "(t\8321\8323\8329, t\8326\8321)"
"t\8321\8324\8321" ~ "t\8321\8324\8322"
"t\8326\8327" ~ "t\8321\8324\8322"
"num\8321\8324\8328" ~ "t\8321\8324\8327"
"t\8321\8324\8321" ~ "t\8321\8324\8327"
"t\8321\8325\8323" ~ "t\8321\8324\8327"
"t\8326\8327" ~ "t\8321\8325\8324"
"t\8321\8325\8323" ~ "t\8321\8325\8324"
"t\8321\8325\8329" ~ "t\8321\8325\8324"
"t\8321\8326\8322" ~ "t\8321\8326\8323"
"t\8321\8325\8323" ~ "t\8321\8326\8323"
"t\8321\8326\8328" ~ "t\8321\8326\8323"
"t\8321\8326\8328" ~ "i64"
"t\8321\8324\8320" ~ "[]t\8321\8327\8320"
"t\8321\8325\8323" ~ "i64"
"[]t\8321\8327\8320" ~ "[]t\8321\8326\8329"
"t\8321\8327\8329" ~ "[]t\8321\8326\8329"
"t -> t -> bool" ~ "a\8321\8328\8320 -> a\8321\8328\8320 -> bool"
"t\8321\8327\8329" ~ "[]a\8321\8328\8320"
"t\8321\8324\8321" ~ "i64"
"t\8327\8328" ~ "i64"
"t\8321\8325\8329" ~ "i64"
"(mi: t\8321\8326\8322) -> []a\8321\8328\8320" ~ "i64 -> a\8321\8326\8321"
"[]a\8321\8326\8321" ~ "[][]t\8321\8326\8320"
"t\8321\8329\8325" ~ "[]t\8321\8326\8320"
"(t\8321\8323\8329, t\8326\8321)" ~ "(t\8321\8329\8325, t\8321\8325\8323)"
"(t\8321\8329\8326, t\8321\8329\8327)" ~ "(t\8321\8324\8320, t\8321\8324\8321)"
"i64" ~ "i64"
"t\8321\8329\8326" ~ "[]t\8321\8329\8328"
"bool" ~ "bool"
"[]t" ~ "if_t\8322\8320\8323"
"[]t\8321\8329\8328" ~ "if_t\8322\8320\8323"
"[]t" ~ "if_t\8322\8320\8323"
## typarams
["(\"t\",(0,Unlifted,NoLoc))"]
## tyvars
[("t\8320",(1,TyVarFree NoLoc Lifted)),("t\8321",(1,TyVarFree NoLoc Lifted)),("t\8322",(4,TyVarPrim NoLoc [Bool,Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8323",(4,TyVarFree NoLoc Unlifted)),("num\8326",(4,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("num\8321\8321",(4,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8321\8326",(5,TyVarFree NoLoc Lifted)),("num\8321\8327",(6,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8322\8322",(7,TyVarFree NoLoc Lifted)),("t\8322\8323",(8,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("num\8322\8324",(8,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8322\8325",(8,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8322\8326",(8,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("num\8322\8327",(8,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8324\8320",(9,TyVarFree NoLoc Lifted)),("t\8324\8323",(11,TyVarFree NoLoc Lifted)),("t\8324\8324",(12,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("num\8324\8325",(12,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8324\8326",(12,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8324\8327",(12,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("num\8324\8328",(12,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8326\8321",(13,TyVarFree NoLoc Lifted)),("t\8326\8322",(14,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8326\8327",(15,TyVarFree NoLoc Lifted)),("t\8326\8328",(16,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("num\8326\8329",(16,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8327\8328",(17,TyVarFree NoLoc Lifted)),("a\8327\8329",(18,TyVarFree NoLoc Unlifted)),("t\8328\8320",(19,TyVarFree NoLoc Lifted)),("t\8328\8321",(20,TyVarFree NoLoc Lifted)),("if_t\8328\8326",(21,TyVarFree NoLoc SizeLifted)),("num\8328\8327",(18,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8328\8328",(18,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64])),("index\8328\8329",(18,TyVarFree NoLoc Unlifted)),("index_elem\8329\8320",(18,TyVarFree NoLoc Unlifted)),("t\8329\8327",(19,TyVarFree NoLoc Lifted)),("t\8329\8328",(20,TyVarFree NoLoc Unlifted)),("a\8329\8329",(20,TyVarFree NoLoc Unlifted)),("t\8321\8320\8320",(21,TyVarFree NoLoc Lifted)),("a\8321\8320\8321",(22,TyVarFree NoLoc Unlifted)),("t\8321\8320\8322",(23,TyVarFree NoLoc Lifted)),("t\8321\8320\8323",(24,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8321\8320\8324",(24,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8321\8321\8323",(25,TyVarFree NoLoc Lifted)),("t\8321\8321\8324",(26,TyVarPrim NoLoc [Bool,Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8321\8321\8329",(26,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64])),("index\8321\8322\8320",(26,TyVarFree NoLoc Unlifted)),("index_elem\8321\8322\8321",(26,TyVarFree NoLoc Unlifted)),("if_t\8321\8322\8322",(26,TyVarFree NoLoc SizeLifted)),("t\8321\8322\8327",(23,TyVarFree NoLoc Lifted)),("t\8321\8322\8328",(24,TyVarFree NoLoc Unlifted)),("t\8321\8323\8329",(21,TyVarFree NoLoc Lifted)),("t\8321\8324\8320",(22,TyVarFree NoLoc Lifted)),("t\8321\8324\8321",(22,TyVarFree NoLoc Lifted)),("t\8321\8324\8322",(22,TyVarPrim NoLoc [Bool,Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8321\8324\8327",(22,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("num\8321\8324\8328",(22,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8321\8325\8323",(23,TyVarFree NoLoc Lifted)),("t\8321\8325\8324",(24,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8321\8325\8329",(25,TyVarFree NoLoc Lifted)),("t\8321\8326\8320",(26,TyVarFree NoLoc Unlifted)),("a\8321\8326\8321",(26,TyVarFree NoLoc Unlifted)),("t\8321\8326\8322",(27,TyVarFree NoLoc Lifted)),("t\8321\8326\8323",(28,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8321\8326\8328",(29,TyVarFree NoLoc Lifted)),("t\8321\8326\8329",(30,TyVarFree NoLoc Unlifted)),("t\8321\8327\8320",(30,TyVarFree NoLoc Unlifted)),("t\8321\8327\8329",(31,TyVarFree NoLoc Lifted)),("a\8321\8328\8320",(32,TyVarFree NoLoc Unlifted)),("t\8321\8329\8325",(27,TyVarFree NoLoc Lifted)),("t\8321\8329\8326",(23,TyVarFree NoLoc Lifted)),("t\8321\8329\8327",(23,TyVarFree NoLoc Lifted)),("t\8321\8329\8328",(24,TyVarFree NoLoc Unlifted)),("if_t\8322\8320\8323",(4,TyVarFree NoLoc SizeLifted)),("if_t\8322\8320\8323\8322\8320\8324",(4,TyVarFree NoLoc SizeLifted)),("t\8321\8329\8326\8322\8320\8325",(23,TyVarFree NoLoc Lifted)),("t\8321\8324\8320\8322\8320\8326",(22,TyVarFree NoLoc Lifted)),("t\8321\8323\8329\8322\8320\8327",(21,TyVarFree NoLoc Lifted)),("t\8321\8329\8325\8322\8320\8328",(27,TyVarFree NoLoc Lifted)),("a\8321\8326\8321\8322\8320\8329",(26,TyVarFree NoLoc Unlifted)),("t\8321\8327\8329\8322\8321\8320",(31,TyVarFree NoLoc Lifted)),("a\8329\8329\8322\8321\8321",(20,TyVarFree NoLoc Unlifted)),("t\8321\8322\8327\8322\8321\8322",(23,TyVarFree NoLoc Lifted))]
## solution
([],[("t\8320",Right "i64"),("t\8321",Right "i64"),("t\8322",Right "i64"),("t\8323",Right "t"),("num\8326",Right "i64"),("num\8321\8321",Right "i64"),("t\8321\8326",Right "i64"),("num\8321\8327",Right "i64"),("t\8322\8322",Right "i64"),("t\8322\8323",Right "i64"),("num\8322\8324",Right "i64"),("t\8322\8325",Right "i64"),("t\8322\8326",Right "i64"),("num\8322\8327",Right "i64"),("t\8324\8320",Right "i64"),("t\8324\8323",Right "i64"),("t\8324\8324",Right "i64"),("num\8324\8325",Right "i64"),("t\8324\8326",Right "i64"),("t\8324\8327",Right "i64"),("num\8324\8328",Right "i64"),("t\8326\8321",Right "i64"),("t\8326\8322",Right "i64"),("t\8326\8327",Right "i64"),("t\8326\8328",Right "i64"),("num\8326\8329",Right "i64"),("t\8327\8328",Right "i64"),("a\8327\8329",Right "t"),("t\8328\8320",Right "t"),("t\8328\8321",Right "t"),("if_t\8328\8326",Right "t"),("num\8328\8327",Left "[i8, i16, i32, i64]"),("t\8328\8328",Left "[i8, i16, i32, i64]"),("index\8328\8329",Right "t"),("index_elem\8329\8320",Right "t"),("t\8329\8327",Right "t"),("t\8329\8328",Right "t"),("a\8329\8329",Right "[]t"),("t\8321\8320\8320",Right "i64"),("a\8321\8320\8321",Right "t"),("t\8321\8320\8322",Right "i64"),("t\8321\8320\8323",Right "i64"),("t\8321\8320\8324",Right "i64"),("t\8321\8321\8323",Right "i64"),("t\8321\8321\8324",Right "i64"),("t\8321\8321\8329",Right "i64"),("index\8321\8322\8320",Right "t"),("index_elem\8321\8322\8321",Right "t"),("if_t\8321\8322\8322",Right "t"),("t\8321\8322\8327",Right "[]t"),("t\8321\8322\8328",Right "t"),("t\8321\8323\8329",Right "[]t"),("t\8321\8324\8320",Right "[]t"),("t\8321\8324\8321",Right "i64"),("t\8321\8324\8322",Right "i64"),("t\8321\8324\8327",Right "i64"),("num\8321\8324\8328",Right "i64"),("t\8321\8325\8323",Right "i64"),("t\8321\8325\8324",Right "i64"),("t\8321\8325\8329",Right "i64"),("t\8321\8326\8320",Right "t"),("a\8321\8326\8321",Right "[]t"),("t\8321\8326\8322",Right "i64"),("t\8321\8326\8323",Right "i64"),("t\8321\8326\8328",Right "i64"),("t\8321\8326\8329",Right "t"),("t\8321\8327\8320",Right "t"),("t\8321\8327\8329",Right "[]t"),("a\8321\8328\8320",Right "t"),("t\8321\8329\8325",Right "[]t"),("t\8321\8329\8326",Right "[]t"),("t\8321\8329\8327",Right "i64"),("t\8321\8329\8328",Right "t"),("if_t\8322\8320\8323",Right "[]t"),("if_t\8322\8320\8323\8322\8320\8324",Right "t"),("t\8321\8329\8326\8322\8320\8325",Right "t"),("t\8321\8324\8320\8322\8320\8326",Right "t"),("t\8321\8323\8329\8322\8320\8327",Right "t"),("t\8321\8329\8325\8322\8320\8328",Right "t"),("a\8321\8326\8321\8322\8320\8329",Right "t"),("t\8321\8327\8329\8322\8321\8320",Right "t"),("a\8329\8329\8322\8321\8321",Right "t"),("t\8321\8322\8327\8322\8321\8322",Right "t")])

# TySolve.solve
## constraints
"{max_block_size: num\8321, max_merge_block_size: num\8322}" ~ "{max_block_size: i64, max_merge_block_size: i64}"
"t -> t -> bool" ~ "t\8320 -> t\8320 -> bool"
"[]t" ~ "[]t\8320"
"[]t" ~ "[]t\8320"
## typarams
["(\"t\",(0,Unlifted,NoLoc))"]
## tyvars
[("t\8320",(3,TyVarFree NoLoc Unlifted)),("num\8321",(3,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("num\8322",(3,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("t\8320",Right "t"),("num\8321",Right "i64"),("num\8322",Right "i64")])

# TySolve.solve
## constraints
"b\8321" ~ "[]b\8321\8324\8326"
"a\8320" ~ "[]a\8320\8324\8327"
"b\8323" ~ "[]b\8323\8324\8328"
"a\8322" ~ "[]a\8322\8324\8329"
"t -> k" ~ "a\8326 -> x\8327"
"[]t" ~ "[]a\8326"
"i64" ~ "i64"
"[]x\8327" ~ "[]a\8324"
"[]i64" ~ "[]b\8325"
"t\8321\8329" ~ "k"
"t\8322\8321" ~ "k"
"(t\8321\8329, t\8322\8320) -> (t\8322\8321, t\8322\8322) -> bool" ~ "t\8321\8328 -> t\8321\8328 -> bool"
"[](a\8324, b\8325)" ~ "a\8322"
"(s: []t\8321\8328) -> []t\8321\8328" ~ "a\8322 -> b\8323"
"t\8323\8327" ~ "t\8323\8326"
"index\8323\8328" ~ "index_elem\8323\8329"
"[]t" ~ "[]index_elem\8323\8329"
"(t\8323\8325, t\8323\8326) -> index\8323\8328" ~ "a\8323\8323 -> x\8323\8324"
"b\8323" ~ "a\8320"
"(as: []a\8323\8323) -> *[]x\8323\8324" ~ "a\8320 -> b\8321"
"[]t" ~ "b\8321"
## typarams
["(\"t\",(0,Unlifted,NoLoc))","(\"k\",(0,Unlifted,NoLoc))"]
## tyvars
[("a\8320",(4,TyVarFree NoLoc Lifted)),("b\8321",(4,TyVarFree NoLoc Lifted)),("a\8322",(4,TyVarFree NoLoc Lifted)),("b\8323",(4,TyVarFree NoLoc Lifted)),("a\8324",(4,TyVarFree NoLoc Unlifted)),("b\8325",(4,TyVarFree NoLoc Unlifted)),("a\8326",(4,TyVarFree NoLoc Unlifted)),("x\8327",(4,TyVarFree NoLoc Unlifted)),("t\8321\8328",(4,TyVarFree NoLoc Unlifted)),("t\8321\8329",(5,TyVarFree NoLoc Lifted)),("t\8322\8320",(5,TyVarFree NoLoc Lifted)),("t\8322\8321",(6,TyVarFree NoLoc Lifted)),("t\8322\8322",(6,TyVarFree NoLoc Lifted)),("a\8323\8323",(4,TyVarFree NoLoc Unlifted)),("x\8323\8324",(4,TyVarFree NoLoc Unlifted)),("t\8323\8325",(5,TyVarFree NoLoc Lifted)),("t\8323\8326",(5,TyVarFree NoLoc Lifted)),("t\8323\8327",(6,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64])),("index\8323\8328",(6,TyVarFree NoLoc Unlifted)),("index_elem\8323\8329",(6,TyVarFree NoLoc Unlifted)),("b\8321\8324\8326",(4,TyVarFree NoLoc Lifted)),("a\8320\8324\8327",(4,TyVarFree NoLoc Lifted)),("b\8323\8324\8328",(4,TyVarFree NoLoc Lifted)),("a\8322\8324\8329",(4,TyVarFree NoLoc Lifted))]
## solution
([],[("a\8320",Right "[](k, i64)"),("b\8321",Right "[]t"),("a\8322",Right "[](k, i64)"),("b\8323",Right "[](k, i64)"),("a\8324",Right "k"),("b\8325",Right "i64"),("a\8326",Right "t"),("x\8327",Right "k"),("t\8321\8328",Right "(k, i64)"),("t\8321\8329",Right "k"),("t\8322\8320",Right "i64"),("t\8322\8321",Right "k"),("t\8322\8322",Right "i64"),("a\8323\8323",Right "(k, i64)"),("x\8323\8324",Right "t"),("t\8323\8325",Right "k"),("t\8323\8326",Right "i64"),("t\8323\8327",Right "i64"),("index\8323\8328",Right "t"),("index_elem\8323\8329",Right "t"),("b\8321\8324\8326",Right "t"),("a\8320\8324\8327",Right "(k, i64)"),("b\8323\8324\8328",Right "(k, i64)"),("a\8322\8324\8329",Right "(k, i64)")])

# TySolve.solve
## constraints
"b\8324" ~ "[]b\8324\8325\8325"
"a\8323" ~ "[]a\8323\8325\8326"
"b\8326" ~ "[]b\8326\8325\8327"
"a\8325" ~ "[]a\8325\8325\8328"
"t\8321" ~ "a\8329 -> x\8321\8320"
"[]t" ~ "[]a\8329"
"i64" ~ "i64"
"[]x\8321\8320" ~ "[]a\8327"
"[]i64" ~ "[]b\8328"
"t\8322" ~ "arg\8322\8326 -> res\8322\8327"
"t\8322\8322" ~ "arg\8322\8326"
"res\8322\8327" ~ "arg\8323\8320 -> res\8323\8321"
"t\8322\8324" ~ "arg\8323\8320"
"t\8320" ~ "{max_block_size: i64, max_merge_block_size: i64}"
"(t\8322\8322, t\8322\8323) -> (t\8322\8324, t\8322\8325) -> res\8323\8321" ~ "t\8322\8321 -> t\8322\8321 -> bool"
"[](a\8327, b\8328)" ~ "a\8325"
"(s: []t\8322\8321) -> []t\8322\8321" ~ "a\8325 -> b\8326"
"t\8324\8326" ~ "t\8324\8325"
"index\8324\8327" ~ "index_elem\8324\8328"
"[]t" ~ "[]index_elem\8324\8328"
"(t\8324\8324, t\8324\8325) -> index\8324\8327" ~ "a\8324\8322 -> x\8324\8323"
"b\8326" ~ "a\8323"
"(as: []a\8324\8322) -> *[]x\8324\8323" ~ "a\8323 -> b\8324"
"[]t" ~ "b\8324"
## typarams
["(\"t\",(0,Unlifted,NoLoc))","(\"k\",(0,Unlifted,NoLoc))"]
## tyvars
[("t\8320",(1,TyVarFree NoLoc Lifted)),("t\8321",(2,TyVarFree NoLoc Lifted)),("t\8322",(3,TyVarFree NoLoc Lifted)),("a\8323",(5,TyVarFree NoLoc Lifted)),("b\8324",(5,TyVarFree NoLoc Lifted)),("a\8325",(5,TyVarFree NoLoc Lifted)),("b\8326",(5,TyVarFree NoLoc Lifted)),("a\8327",(5,TyVarFree NoLoc Unlifted)),("b\8328",(5,TyVarFree NoLoc Unlifted)),("a\8329",(5,TyVarFree NoLoc Unlifted)),("x\8321\8320",(5,TyVarFree NoLoc Unlifted)),("t\8322\8321",(5,TyVarFree NoLoc Unlifted)),("t\8322\8322",(6,TyVarFree NoLoc Lifted)),("t\8322\8323",(6,TyVarFree NoLoc Lifted)),("t\8322\8324",(7,TyVarFree NoLoc Lifted)),("t\8322\8325",(7,TyVarFree NoLoc Lifted)),("arg\8322\8326",(8,TyVarFree NoLoc Lifted)),("res\8322\8327",(8,TyVarFree NoLoc Lifted)),("arg\8323\8320",(8,TyVarFree NoLoc Lifted)),("res\8323\8321",(8,TyVarFree NoLoc Lifted)),("a\8324\8322",(5,TyVarFree NoLoc Unlifted)),("x\8324\8323",(5,TyVarFree NoLoc Unlifted)),("t\8324\8324",(6,TyVarFree NoLoc Lifted)),("t\8324\8325",(6,TyVarFree NoLoc Lifted)),("t\8324\8326",(7,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64])),("index\8324\8327",(7,TyVarFree NoLoc Unlifted)),("index_elem\8324\8328",(7,TyVarFree NoLoc Unlifted)),("b\8324\8325\8325",(5,TyVarFree NoLoc Lifted)),("a\8323\8325\8326",(5,TyVarFree NoLoc Lifted)),("b\8326\8325\8327",(5,TyVarFree NoLoc Lifted)),("a\8325\8325\8328",(5,TyVarFree NoLoc Lifted))]
## solution
([("a\8327",Unlifted)],[("t\8320",Right "{max_block_size: i64, max_merge_block_size: i64}"),("t\8321",Right "t -> x\8321\8320"),("t\8322",Right "arg\8322\8326 -> arg\8323\8320 -> bool"),("a\8323",Right "[](t\8322\8322, i64)"),("b\8324",Right "[]t"),("a\8325",Right "[](a\8327, i64)"),("b\8326",Right "[](t\8322\8322, i64)"),("b\8328",Right "i64"),("a\8329",Right "t"),("x\8321\8320",Right "a\8327"),("t\8322\8321",Right "(t\8322\8322, i64)"),("t\8322\8322",Right "a\8327"),("t\8322\8323",Right "i64"),("t\8322\8324",Right "a\8327"),("t\8322\8325",Right "i64"),("arg\8322\8326",Right "a\8327"),("res\8322\8327",Right "arg\8323\8320 -> bool"),("arg\8323\8320",Right "a\8327"),("res\8323\8321",Right "bool"),("a\8324\8322",Right "(t\8324\8324, i64)"),("x\8324\8323",Right "t"),("t\8324\8324",Right "a\8327"),("t\8324\8325",Right "i64"),("t\8324\8326",Right "i64"),("index\8324\8327",Right "t"),("index_elem\8324\8328",Right "t"),("b\8324\8325\8325",Right "t"),("a\8323\8325\8326",Right "(t\8322\8322, i64)"),("b\8326\8325\8327",Right "(t\8322\8322, i64)"),("a\8325\8325\8328",Right "(a\8327, i64)")])

# TySolve.solve
## constraints
"t\8322" ~ "i64"
"index\8323" ~ "index_elem\8324"
"[]i32" ~ "[]index_elem\8324"
"index\8323" ~ "t\8321"
"num\8325" ~ "t\8321"
"bool" ~ "bool"
## typarams
mempty
## tyvars
[("t\8321",(3,TyVarPrim NoLoc [Bool,Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8322",(3,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64])),("index\8323",(3,TyVarFree NoLoc Unlifted)),("index_elem\8324",(3,TyVarFree NoLoc Unlifted)),("num\8325",(3,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("t\8321",Right "i32"),("t\8322",Right "i64"),("index\8323",Right "i32"),("index_elem\8324",Right "i32"),("num\8325",Right "i32")])

# TySolve.solve
## constraints
"t\8322" ~ "i32"
"index\8323" ~ "index_elem\8324"
"[]i32" ~ "[]index_elem\8324"
"index\8323" ~ "t\8321"
"num\8325" ~ "t\8321"
"bool" ~ "bool"
## typarams
mempty
## tyvars
[("t\8321",(3,TyVarPrim NoLoc [Bool,Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8322",(3,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64])),("index\8323",(3,TyVarFree NoLoc Unlifted)),("index_elem\8324",(3,TyVarFree NoLoc Unlifted)),("num\8325",(3,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64]))]
## solution
([],[("t\8321",Right "i32"),("t\8322",Right "i32"),("index\8323",Right "i32"),("index_elem\8324",Right "i32"),("num\8325",Right "i32")])

# TySolve.solve
## constraints
"[]i32" ~ "[]i32"
"i32" ~ "i32"
"t\8325" ~ "i32"
"index\8326" ~ "index_elem\8327"
"[]i32" ~ "[]index_elem\8327"
"t\8328" ~ "index\8326"
"[]i32" ~ "[]i32"
"t\8328" ~ "i32"
"t\8321\8323" ~ "bool"
"t\8321\8324" ~ "t\8328"
"index\8321\8325" ~ "index_elem\8321\8326"
"[]i32" ~ "[]index_elem\8321\8326"
"index\8326" ~ "index\8321\8325"
"bool" ~ "bool"
"i32" ~ "if_t\8321\8327"
"t\8328" ~ "if_t\8321\8327"
"i32" ~ "if_t\8321\8327"
## typarams
mempty
## tyvars
[("t\8325",(3,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64])),("index\8326",(3,TyVarFree NoLoc Unlifted)),("index_elem\8327",(3,TyVarFree NoLoc Unlifted)),("t\8328",(3,TyVarFree NoLoc Lifted)),("t\8321\8323",(3,TyVarPrim NoLoc [Bool,Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64])),("t\8321\8324",(3,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64])),("index\8321\8325",(3,TyVarFree NoLoc Unlifted)),("index_elem\8321\8326",(3,TyVarFree NoLoc Unlifted)),("if_t\8321\8327",(3,TyVarFree NoLoc SizeLifted))]
## solution
([],[("t\8325",Right "i32"),("index\8326",Right "i32"),("index_elem\8327",Right "i32"),("t\8328",Right "i32"),("t\8321\8323",Right "bool"),("t\8321\8324",Right "i32"),("index\8321\8325",Right "i32"),("index_elem\8321\8326",Right "i32"),("if_t\8321\8327",Right "i32")])

# TySolve.solve
## constraints
"(i32, i32)" ~ "t\8322"
"[]i32" ~ "[]i32"
"kt\8321" ~ "i32"
"(i32, i32)" ~ "t\8328"
"[]i32" ~ "[]i32"
"kt\8327" ~ "i32"
"(i32, i32)" ~ "(i32, i32)"
## typarams
mempty
## tyvars
[("kt\8321",(3,TyVarFree NoLoc Lifted)),("t\8322",(3,TyVarRecord NoLoc (fromList [(Name "0",Scalar (TypeVar NoUniqueness (QualName {qualQuals = [], qualLeaf = VName (Name "kt\8321") 11578}) []))]))),("kt\8327",(3,TyVarFree NoLoc Lifted)),("t\8328",(3,TyVarRecord NoLoc (fromList [(Name "1",Scalar (TypeVar NoUniqueness (QualName {qualQuals = [], qualLeaf = VName (Name "kt\8327") 11587}) []))])))]
## solution
([],[("kt\8321",Right "i32"),("t\8322",Right "(i32, i32)"),("kt\8327",Right "i32"),("t\8328",Right "(i32, i32)")])

# TySolve.solve
## constraints
"t\8322" ~ "[]t\8322\8323\8326"
"i64" ~ "i64"
"t\8322" ~ "[]i64"
"[]i32" ~ "[]i32"
"t\8325" ~ "i64"
"t\8321\8321" ~ "t\8325"
"index\8321\8322" ~ "index_elem\8321\8323"
"[]i32" ~ "[]index_elem\8321\8323"
"[]i32" ~ "[]i32"
"index\8321\8322" ~ "i32"
"bool" ~ "t\8326"
"bool" ~ "t\8326"
"t\8322\8322" ~ "t\8325"
"index\8322\8323" ~ "index_elem\8322\8324"
"[]i32" ~ "[]index_elem\8322\8324"
"t\8322\8325" ~ "t\8325"
"index\8322\8326" ~ "index_elem\8322\8327"
"[]i32" ~ "[]index_elem\8322\8327"
"t\8322\8328" ~ "index\8322\8326"
"index\8322\8329" ~ "index_elem\8323\8320"
"[]i32" ~ "[]index_elem\8323\8320"
"t\8326" ~ "bool"
"index\8322\8323" ~ "if_t\8323\8321"
"index\8322\8329" ~ "if_t\8323\8321"
"(v: t\8325) -> if_t\8323\8321" ~ "a\8323 -> x\8324"
"t\8322" ~ "[]a\8323"
"[]i32" ~ "[]x\8324"
## typarams
mempty
## tyvars
[("t\8322",(3,TyVarFree NoLoc Lifted)),("a\8323",(4,TyVarFree NoLoc Unlifted)),("x\8324",(4,TyVarFree NoLoc Unlifted)),("t\8325",(5,TyVarFree NoLoc Lifted)),("t\8326",(6,TyVarPrim NoLoc [Bool])),("t\8321\8321",(6,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64])),("index\8321\8322",(6,TyVarFree NoLoc Unlifted)),("index_elem\8321\8323",(6,TyVarFree NoLoc Unlifted)),("t\8322\8322",(6,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64])),("index\8322\8323",(6,TyVarFree NoLoc Unlifted)),("index_elem\8322\8324",(6,TyVarFree NoLoc Unlifted)),("t\8322\8325",(6,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64])),("index\8322\8326",(6,TyVarFree NoLoc Unlifted)),("index_elem\8322\8327",(6,TyVarFree NoLoc Unlifted)),("t\8322\8328",(6,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64])),("index\8322\8329",(6,TyVarFree NoLoc Unlifted)),("index_elem\8323\8320",(6,TyVarFree NoLoc Unlifted)),("if_t\8323\8321",(6,TyVarFree NoLoc SizeLifted)),("t\8322\8323\8326",(3,TyVarFree NoLoc Lifted))]
## solution
([],[("t\8322",Right "[]i64"),("a\8323",Right "i64"),("x\8324",Right "i32"),("t\8325",Right "i64"),("t\8326",Right "bool"),("t\8321\8321",Right "i64"),("index\8321\8322",Right "i32"),("index_elem\8321\8323",Right "i32"),("t\8322\8322",Right "i64"),("index\8322\8323",Right "i32"),("index_elem\8322\8324",Right "i32"),("t\8322\8325",Right "i64"),("index\8322\8326",Right "i32"),("index_elem\8322\8327",Right "i32"),("t\8322\8328",Right "i32"),("index\8322\8329",Right "i32"),("index_elem\8323\8320",Right "i32"),("if_t\8323\8321",Right "i32"),("t\8322\8323\8326",Right "i64")])

# TySolve.solve
## constraints
"i32 -> i64" ~ "a\8324 -> x\8325"
"[]i32" ~ "[]a\8324"
"[]i32" ~ "[]t\8323"
"[]x\8325" ~ "[]i64"
"[]i32" ~ "[]t\8323"
## typarams
mempty
## tyvars
[("t\8323",(4,TyVarFree NoLoc Unlifted)),("a\8324",(4,TyVarFree NoLoc Unlifted)),("x\8325",(4,TyVarFree NoLoc Unlifted))]
## solution
([],[("t\8323",Right "i32"),("a\8324",Right "i32"),("x\8325",Right "i64")])

# TySolve.solve
## constraints
"(f64, (i32, i32), i64)" ~ "t\8323"
"(f64, (i32, i32), i64)" ~ "t\8325"
"kt\8322" ~ "t\8321"
"kt\8324" ~ "t\8321"
"(f64, (i32, i32), i64)" ~ "t\8321\8323"
"(f64, (i32, i32), i64)" ~ "t\8321\8325"
"kt\8321\8322" ~ "t\8321\8321"
"kt\8321\8324" ~ "t\8321\8321"
"(f64, (i32, i32), i64)" ~ "t\8322\8322"
"(f64, (i32, i32), i64)" ~ "t\8322\8324"
"kt\8322\8321" ~ "t\8322\8320"
"kt\8322\8323" ~ "t\8322\8320"
"bool" ~ "t\8321\8320"
"bool" ~ "t\8321\8320"
"bool" ~ "t\8320"
"t\8321\8320" ~ "t\8320"
"bool" ~ "t\8320"
## typarams
mempty
## tyvars
[("t\8320",(3,TyVarPrim NoLoc [Bool])),("t\8321",(3,TyVarPrim NoLoc [Bool,Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("kt\8322",(3,TyVarFree NoLoc Lifted)),("t\8323",(3,TyVarRecord NoLoc (fromList [(Name "0",Scalar (TypeVar NoUniqueness (QualName {qualQuals = [], qualLeaf = VName (Name "kt\8322") 11718}) []))]))),("kt\8324",(3,TyVarFree NoLoc Lifted)),("t\8325",(3,TyVarRecord NoLoc (fromList [(Name "0",Scalar (TypeVar NoUniqueness (QualName {qualQuals = [], qualLeaf = VName (Name "kt\8324") 11720}) []))]))),("t\8321\8320",(3,TyVarPrim NoLoc [Bool])),("t\8321\8321",(3,TyVarFree NoLoc Unlifted)),("kt\8321\8322",(3,TyVarFree NoLoc Lifted)),("t\8321\8323",(3,TyVarRecord NoLoc (fromList [(Name "0",Scalar (TypeVar NoUniqueness (QualName {qualQuals = [], qualLeaf = VName (Name "kt\8321\8322") 11729}) []))]))),("kt\8321\8324",(3,TyVarFree NoLoc Lifted)),("t\8321\8325",(3,TyVarRecord NoLoc (fromList [(Name "0",Scalar (TypeVar NoUniqueness (QualName {qualQuals = [], qualLeaf = VName (Name "kt\8321\8324") 11731}) []))]))),("t\8322\8320",(3,TyVarPrim NoLoc [Bool,Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("kt\8322\8321",(3,TyVarFree NoLoc Lifted)),("t\8322\8322",(3,TyVarRecord NoLoc (fromList [(Name "2",Scalar (TypeVar NoUniqueness (QualName {qualQuals = [], qualLeaf = VName (Name "kt\8322\8321") 11739}) []))]))),("kt\8322\8323",(3,TyVarFree NoLoc Lifted)),("t\8322\8324",(3,TyVarRecord NoLoc (fromList [(Name "2",Scalar (TypeVar NoUniqueness (QualName {qualQuals = [], qualLeaf = VName (Name "kt\8322\8323") 11741}) []))])))]
## solution
([],[("t\8320",Right "bool"),("t\8321",Right "f64"),("kt\8322",Right "f64"),("t\8323",Right "(f64, (i32, i32), i64)"),("kt\8324",Right "f64"),("t\8325",Right "(f64, (i32, i32), i64)"),("t\8321\8320",Right "bool"),("t\8321\8321",Right "f64"),("kt\8321\8322",Right "f64"),("t\8321\8323",Right "(f64, (i32, i32), i64)"),("kt\8321\8324",Right "f64"),("t\8321\8325",Right "(f64, (i32, i32), i64)"),("t\8322\8320",Right "i64"),("kt\8322\8321",Right "i64"),("t\8322\8322",Right "(f64, (i32, i32), i64)"),("kt\8322\8323",Right "i64"),("t\8322\8324",Right "(f64, (i32, i32), i64)")])

# TySolve.solve
## constraints
"a\8327\8322" ~ "[]a\8327\8322\8321\8320\8323"
"t\8325\8329" ~ "[]t\8325\8329\8321\8320\8324"
"t\8327\8321" ~ "[]t\8327\8321\8321\8320\8325"
"t\8325\8322" ~ "[]t\8325\8322\8321\8320\8326"
"t\8323\8326" ~ "[]t\8323\8326\8321\8320\8327"
"b\8323\8328" ~ "[]b\8323\8328\8321\8320\8328"
"a\8323\8327" ~ "[][]a\8323\8327\8321\8320\8329"
"x\8324\8320" ~ "[]x\8324\8320\8321\8321\8320"
"b\8328" ~ "[]b\8328\8321\8321\8321"
"a\8327" ~ "[]a\8327\8321\8321\8322"
"b\8321\8320" ~ "[]b\8321\8320\8321\8321\8323"
"a\8329" ~ "[][]a\8329\8321\8321\8324"
"x\8321\8322" ~ "[]x\8321\8322\8321\8321\8325"
"i64" ~ "t\8320"
"num\8321" ~ "t\8320"
"t\8326" ~ "t\8320"
"t\8321\8323" ~ "t\8321\8326"
"kt\8321\8325" ~ "et\8321\8324"
"t\8321\8323" ~ "t\8321\8328"
"kt\8321\8327" ~ "et\8321\8324"
"(e: t\8321\8323) -> []et\8321\8324" ~ "a\8321\8321 -> x\8321\8322"
"[](i32, i32)" ~ "[]a\8321\8321"
"[]x\8321\8322" ~ "a\8329"
"(xs: [][]t\8322\8323) -> []t\8322\8323" ~ "a\8329 -> b\8321\8320"
"i32 -> i64" ~ "a\8322\8328 -> x\8322\8329"
"b\8321\8320" ~ "a\8327"
"(as: []a\8322\8328) -> *[]x\8322\8329" ~ "a\8327 -> b\8328"
"t\8326" ~ "i64"
"b\8328" ~ "[]i64"
"t\8323\8326" ~ "[]i64"
"t\8324\8321" ~ "et\8324\8322"
"t\8324\8321" ~ "et\8324\8322"
"(i: t\8324\8321) -> []et\8324\8322" ~ "a\8323\8329 -> x\8324\8320"
"[]i64" ~ "[]a\8323\8329"
"[]x\8324\8320" ~ "a\8323\8327"
"(xs: [][]t\8324\8327) -> []t\8324\8327" ~ "a\8323\8327 -> b\8323\8328"
"t\8326" ~ "i64"
"b\8323\8328" ~ "[]i64"
"t\8325\8322" ~ "[]i64"
"t\8323\8326" ~ "[]a\8325\8323"
"t\8325\8322" ~ "[]b\8325\8324"
"t\8325\8329" ~ "[](a\8325\8323, b\8325\8324)"
"i64 -> i64 -> i64" ~ "a\8326\8320 -> a\8326\8320 -> a\8326\8320"
"i64" ~ "a\8326\8320"
"i64" ~ "i64"
"t\8323\8326" ~ "[]i64"
"t\8325\8322" ~ "[]a\8326\8320"
"t\8327\8321" ~ "[]a\8326\8320"
"t\8327\8326" ~ "t\8327\8329"
"t\8328\8320" ~ "kt\8327\8328"
"index\8328\8321" ~ "index_elem\8328\8322"
"t\8327\8321" ~ "[]index_elem\8328\8322"
"t\8327\8326" ~ "t\8328\8324"
"index\8328\8321" ~ "t\8327\8327"
"kt\8328\8323" ~ "t\8327\8327"
"t\8329\8320" ~ "num\8328\8329"
"bool" ~ "bool"
"t\8327\8326" ~ "if_t\8329\8322"
"(num\8328\8329, num\8329\8321)" ~ "if_t\8329\8322"
"(i: t\8327\8326) -> if_t\8329\8322" ~ "a\8327\8324 -> x\8327\8325"
"t\8325\8329" ~ "[]a\8327\8324"
"[]x\8327\8325" ~ "a\8327\8322"
"(xs: [](a\8329\8327, b\8329\8328)) -> ([]a\8329\8327, []b\8329\8328)" ~ "a\8327\8322 -> b\8327\8323"
## typarams
mempty
## tyvars
[("t\8320",(5,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("num\8321",(5,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8326",(6,TyVarFree NoLoc Lifted)),("a\8327",(7,TyVarFree NoLoc Lifted)),("b\8328",(7,TyVarFree NoLoc Lifted)),("a\8329",(7,TyVarFree NoLoc Lifted)),("b\8321\8320",(7,TyVarFree NoLoc Lifted)),("a\8321\8321",(7,TyVarFree NoLoc Unlifted)),("x\8321\8322",(7,TyVarFree NoLoc Unlifted)),("t\8321\8323",(8,TyVarFree NoLoc Lifted)),("et\8321\8324",(9,TyVarFree NoLoc Unlifted)),("kt\8321\8325",(9,TyVarFree NoLoc Lifted)),("t\8321\8326",(9,TyVarRecord NoLoc (fromList [(Name "0",Scalar (TypeVar NoUniqueness (QualName {qualQuals = [], qualLeaf = VName (Name "kt\8321\8325") 11790}) []))]))),("kt\8321\8327",(9,TyVarFree NoLoc Lifted)),("t\8321\8328",(9,TyVarRecord NoLoc (fromList [(Name "1",Scalar (TypeVar NoUniqueness (QualName {qualQuals = [], qualLeaf = VName (Name "kt\8321\8327") 11792}) []))]))),("t\8322\8323",(7,TyVarFree NoLoc Unlifted)),("a\8322\8328",(7,TyVarFree NoLoc Unlifted)),("x\8322\8329",(7,TyVarFree NoLoc Unlifted)),("t\8323\8326",(8,TyVarFree NoLoc Lifted)),("a\8323\8327",(9,TyVarFree NoLoc Lifted)),("b\8323\8328",(9,TyVarFree NoLoc Lifted)),("a\8323\8329",(9,TyVarFree NoLoc Unlifted)),("x\8324\8320",(9,TyVarFree NoLoc Unlifted)),("t\8324\8321",(10,TyVarFree NoLoc Lifted)),("et\8324\8322",(11,TyVarFree NoLoc Unlifted)),("t\8324\8327",(9,TyVarFree NoLoc Unlifted)),("t\8325\8322",(10,TyVarFree NoLoc Lifted)),("a\8325\8323",(11,TyVarFree NoLoc Unlifted)),("b\8325\8324",(11,TyVarFree NoLoc Unlifted)),("t\8325\8329",(12,TyVarFree NoLoc Lifted)),("a\8326\8320",(13,TyVarFree NoLoc Unlifted)),("t\8327\8321",(14,TyVarFree NoLoc Lifted)),("a\8327\8322",(15,TyVarFree NoLoc Lifted)),("b\8327\8323",(15,TyVarFree NoLoc Lifted)),("a\8327\8324",(15,TyVarFree NoLoc Unlifted)),("x\8327\8325",(15,TyVarFree NoLoc Unlifted)),("t\8327\8326",(16,TyVarFree NoLoc Lifted)),("t\8327\8327",(17,TyVarFree NoLoc Unlifted)),("kt\8327\8328",(17,TyVarFree NoLoc Lifted)),("t\8327\8329",(17,TyVarRecord NoLoc (fromList [(Name "0",Scalar (TypeVar NoUniqueness (QualName {qualQuals = [], qualLeaf = VName (Name "kt\8327\8328") 11881}) []))]))),("t\8328\8320",(17,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64])),("index\8328\8321",(17,TyVarFree NoLoc Unlifted)),("index_elem\8328\8322",(17,TyVarFree NoLoc Unlifted)),("kt\8328\8323",(17,TyVarFree NoLoc Lifted)),("t\8328\8324",(17,TyVarRecord NoLoc (fromList [(Name "1",Scalar (TypeVar NoUniqueness (QualName {qualQuals = [], qualLeaf = VName (Name "kt\8328\8323") 11886}) []))]))),("num\8328\8329",(17,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8329\8320",(17,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("num\8329\8321",(17,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("if_t\8329\8322",(17,TyVarFree NoLoc SizeLifted)),("a\8329\8327",(15,TyVarFree NoLoc Unlifted)),("b\8329\8328",(15,TyVarFree NoLoc Unlifted)),("a\8327\8322\8321\8320\8323",(15,TyVarFree NoLoc Lifted)),("t\8325\8329\8321\8320\8324",(12,TyVarFree NoLoc Lifted)),("t\8327\8321\8321\8320\8325",(14,TyVarFree NoLoc Lifted)),("t\8325\8322\8321\8320\8326",(10,TyVarFree NoLoc Lifted)),("t\8323\8326\8321\8320\8327",(8,TyVarFree NoLoc Lifted)),("b\8323\8328\8321\8320\8328",(9,TyVarFree NoLoc Lifted)),("a\8323\8327\8321\8320\8329",(9,TyVarFree NoLoc Lifted)),("x\8324\8320\8321\8321\8320",(9,TyVarFree NoLoc Unlifted)),("b\8328\8321\8321\8321",(7,TyVarFree NoLoc Lifted)),("a\8327\8321\8321\8322",(7,TyVarFree NoLoc Lifted)),("b\8321\8320\8321\8321\8323",(7,TyVarFree NoLoc Lifted)),("a\8329\8321\8321\8324",(7,TyVarFree NoLoc Lifted)),("x\8321\8322\8321\8321\8325",(7,TyVarFree NoLoc Unlifted))]
## solution
([],[("t\8320",Right "i64"),("num\8321",Right "i64"),("t\8326",Right "i64"),("a\8327",Right "[]i32"),("b\8328",Right "[]i64"),("a\8329",Right "[][]i32"),("b\8321\8320",Right "[]i32"),("a\8321\8321",Right "(i32, i32)"),("x\8321\8322",Right "[]i32"),("t\8321\8323",Right "(i32, i32)"),("et\8321\8324",Right "i32"),("kt\8321\8325",Right "i32"),("t\8321\8326",Right "(i32, i32)"),("kt\8321\8327",Right "i32"),("t\8321\8328",Right "(i32, i32)"),("t\8322\8323",Right "i32"),("a\8322\8328",Right "i32"),("x\8322\8329",Right "i64"),("t\8323\8326",Right "[]i64"),("a\8323\8327",Right "[][]i64"),("b\8323\8328",Right "[]i64"),("a\8323\8329",Right "i64"),("x\8324\8320",Right "[]i64"),("t\8324\8321",Right "i64"),("et\8324\8322",Right "i64"),("t\8324\8327",Right "i64"),("t\8325\8322",Right "[]i64"),("a\8325\8323",Right "i64"),("b\8325\8324",Right "i64"),("t\8325\8329",Right "[](i64, i64)"),("a\8326\8320",Right "i64"),("t\8327\8321",Right "[]i64"),("a\8327\8322",Right "[](i64, i64)"),("b\8327\8323",Right "([]i64, []i64)"),("a\8327\8324",Right "(i64, i64)"),("x\8327\8325",Right "(i64, i64)"),("t\8327\8326",Right "(i64, i64)"),("t\8327\8327",Right "i64"),("kt\8327\8328",Right "i64"),("t\8327\8329",Right "(i64, i64)"),("t\8328\8320",Right "i64"),("index\8328\8321",Right "i64"),("index_elem\8328\8322",Right "i64"),("kt\8328\8323",Right "i64"),("t\8328\8324",Right "(i64, i64)"),("num\8328\8329",Right "i64"),("t\8329\8320",Right "i64"),("num\8329\8321",Right "i64"),("if_t\8329\8322",Right "(i64, i64)"),("a\8329\8327",Right "i64"),("b\8329\8328",Right "i64"),("a\8327\8322\8321\8320\8323",Right "(i64, i64)"),("t\8325\8329\8321\8320\8324",Right "(i64, i64)"),("t\8327\8321\8321\8320\8325",Right "i64"),("t\8325\8322\8321\8320\8326",Right "i64"),("t\8323\8326\8321\8320\8327",Right "i64"),("b\8323\8328\8321\8320\8328",Right "i64"),("a\8323\8327\8321\8320\8329",Right "i64"),("x\8324\8320\8321\8321\8320",Right "i64"),("b\8328\8321\8321\8321",Right "i64"),("a\8327\8321\8321\8322",Right "i32"),("b\8321\8320\8321\8321\8323",Right "i32"),("a\8329\8321\8321\8324",Right "i32"),("x\8321\8322\8321\8321\8325",Right "i32")])

# TySolve.solve
## constraints
"(i32, i32)" ~ "t\8323"
"t\8324" ~ "kt\8322"
"index\8325" ~ "index_elem\8326"
"[]i64" ~ "[]index_elem\8326"
"index\8325" ~ "t\8321"
"i64" ~ "t\8321"
"(i32, i32)" ~ "t\8321\8322"
"(i32, i32)" ~ "t\8321\8324"
"(i32, i32)" ~ "t\8321\8327"
"t\8321\8328" ~ "kt\8321\8326"
"index\8321\8329" ~ "index_elem\8322\8320"
"[]i64" ~ "[]index_elem\8322\8320"
"index\8321\8329" ~ "t\8321\8325"
"i64" ~ "t\8321\8325"
"(i32, i32)" ~ "t\8322\8326"
"(i32, i32)" ~ "t\8322\8328"
"t\8323\8320" ~ "num\8322\8329"
"t\8323\8322" ~ "num\8323\8321"
"t\8323\8324" ~ "num\8323\8323"
"bool" ~ "bool"
"((kt\8322\8325, kt\8322\8327), i64)" ~ "if_t\8323\8325"
"((num\8322\8329, num\8323\8321), num\8323\8323)" ~ "if_t\8323\8325"
"bool" ~ "bool"
"((kt\8321\8321, kt\8321\8323), i64)" ~ "if_t\8323\8326"
"if_t\8323\8325" ~ "if_t\8323\8326"
"((i32, i32), i64)" ~ "if_t\8323\8326"
## typarams
mempty
## tyvars
[("t\8321",(4,TyVarFree NoLoc Unlifted)),("kt\8322",(4,TyVarFree NoLoc Lifted)),("t\8323",(4,TyVarRecord NoLoc (fromList [(Name "1",Scalar (TypeVar NoUniqueness (QualName {qualQuals = [], qualLeaf = VName (Name "kt\8322") 11977}) []))]))),("t\8324",(4,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64])),("index\8325",(4,TyVarFree NoLoc Unlifted)),("index_elem\8326",(4,TyVarFree NoLoc Unlifted)),("kt\8321\8321",(4,TyVarFree NoLoc Lifted)),("t\8321\8322",(4,TyVarRecord NoLoc (fromList [(Name "1",Scalar (TypeVar NoUniqueness (QualName {qualQuals = [], qualLeaf = VName (Name "kt\8321\8321") 11987}) []))]))),("kt\8321\8323",(4,TyVarFree NoLoc Lifted)),("t\8321\8324",(4,TyVarRecord NoLoc (fromList [(Name "0",Scalar (TypeVar NoUniqueness (QualName {qualQuals = [], qualLeaf = VName (Name "kt\8321\8323") 11989}) []))]))),("t\8321\8325",(4,TyVarFree NoLoc Unlifted)),("kt\8321\8326",(4,TyVarFree NoLoc Lifted)),("t\8321\8327",(4,TyVarRecord NoLoc (fromList [(Name "0",Scalar (TypeVar NoUniqueness (QualName {qualQuals = [], qualLeaf = VName (Name "kt\8321\8326") 11993}) []))]))),("t\8321\8328",(4,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64])),("index\8321\8329",(4,TyVarFree NoLoc Unlifted)),("index_elem\8322\8320",(4,TyVarFree NoLoc Unlifted)),("kt\8322\8325",(4,TyVarFree NoLoc Lifted)),("t\8322\8326",(4,TyVarRecord NoLoc (fromList [(Name "0",Scalar (TypeVar NoUniqueness (QualName {qualQuals = [], qualLeaf = VName (Name "kt\8322\8325") 12003}) []))]))),("kt\8322\8327",(4,TyVarFree NoLoc Lifted)),("t\8322\8328",(4,TyVarRecord NoLoc (fromList [(Name "1",Scalar (TypeVar NoUniqueness (QualName {qualQuals = [], qualLeaf = VName (Name "kt\8322\8327") 12005}) []))]))),("num\8322\8329",(4,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8323\8320",(4,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("num\8323\8321",(4,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8323\8322",(4,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("num\8323\8323",(4,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8323\8324",(4,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("if_t\8323\8325",(4,TyVarFree NoLoc SizeLifted)),("if_t\8323\8326",(4,TyVarFree NoLoc SizeLifted))]
## solution
([],[("t\8321",Right "i64"),("kt\8322",Right "i32"),("t\8323",Right "(i32, i32)"),("t\8324",Right "i32"),("index\8325",Right "i64"),("index_elem\8326",Right "i64"),("kt\8321\8321",Right "i32"),("t\8321\8322",Right "(i32, i32)"),("kt\8321\8323",Right "i32"),("t\8321\8324",Right "(i32, i32)"),("t\8321\8325",Right "i64"),("kt\8321\8326",Right "i32"),("t\8321\8327",Right "(i32, i32)"),("t\8321\8328",Right "i32"),("index\8321\8329",Right "i64"),("index_elem\8322\8320",Right "i64"),("kt\8322\8325",Right "i32"),("t\8322\8326",Right "(i32, i32)"),("kt\8322\8327",Right "i32"),("t\8322\8328",Right "(i32, i32)"),("num\8322\8329",Right "i32"),("t\8323\8320",Right "i32"),("num\8323\8321",Right "i32"),("t\8323\8322",Right "i32"),("num\8323\8323",Right "i64"),("t\8323\8324",Right "i64"),("if_t\8323\8325",Right "((i32, i32), i64)"),("if_t\8323\8326",Right "((i32, i32), i64)")])

# TySolve.solve
## constraints
"t\8325\8321" ~ "[]t\8325\8321\8325\8322"
"t\8321\8329" ~ "[]t\8321\8329\8325\8323"
"b\8322\8327" ~ "[]b\8322\8327\8325\8324"
"t\8323\8328" ~ "[]t\8323\8328\8325\8325"
"a\8322\8326" ~ "[]a\8322\8326\8325\8326"
"t\8322\8325" ~ "[]t\8322\8325\8325\8327"
"t\8322\8324" ~ "[]t\8322\8324\8325\8328"
"t\8321\8328" ~ "[]t\8321\8328\8325\8329"
"[]i64" ~ "[]i64"
"(e: (i32, i32)) -> (i: i64) -> ((i32, i32), i64)" ~ "a\8325 -> b\8326 -> x\8327"
"[](i32, i32)" ~ "[]a\8325"
"[]i64" ~ "[]b\8326"
"[]x\8327" ~ "[](a\8323, b\8324)"
"(t\8321\8328, t\8321\8329)" ~ "([]a\8323, []b\8324)"
"t\8321\8328" ~ "[](a\8322\8320, b\8322\8321)"
"(t\8322\8324, t\8322\8325)" ~ "([]a\8322\8320, []b\8322\8321)"
"[]i32" ~ "[]i32"
"t\8322\8324" ~ "[]i32"
"t\8322\8325" ~ "[]i32"
"[]i32" ~ "a\8322\8326"
"(UFparents: []i32) -> *[]i32" ~ "a\8322\8326 -> b\8322\8327"
"t\8323\8328" ~ "b\8322\8327"
"i64" ~ "i64"
"bool" ~ "t\8324\8320"
"[]bool" ~ "[]t\8323\8329"
"t\8321\8329" ~ "[]i64"
"[]t\8324\8320" ~ "[]t\8323\8329"
"t\8325\8321" ~ "[]t\8323\8329"
## typarams
mempty
## tyvars
[("a\8323",(6,TyVarFree NoLoc Unlifted)),("b\8324",(6,TyVarFree NoLoc Unlifted)),("a\8325",(6,TyVarFree NoLoc Unlifted)),("b\8326",(6,TyVarFree NoLoc Unlifted)),("x\8327",(6,TyVarFree NoLoc Unlifted)),("t\8321\8328",(7,TyVarFree NoLoc Lifted)),("t\8321\8329",(7,TyVarFree NoLoc Lifted)),("a\8322\8320",(8,TyVarFree NoLoc Unlifted)),("b\8322\8321",(8,TyVarFree NoLoc Unlifted)),("t\8322\8324",(9,TyVarFree NoLoc Lifted)),("t\8322\8325",(9,TyVarFree NoLoc Lifted)),("a\8322\8326",(10,TyVarFree NoLoc Lifted)),("b\8322\8327",(10,TyVarFree NoLoc Lifted)),("t\8323\8328",(11,TyVarFree NoLoc Lifted)),("t\8323\8329",(12,TyVarFree NoLoc Unlifted)),("t\8324\8320",(12,TyVarFree NoLoc Unlifted)),("t\8325\8321",(13,TyVarFree NoLoc Lifted)),("t\8325\8321\8325\8322",(13,TyVarFree NoLoc Lifted)),("t\8321\8329\8325\8323",(7,TyVarFree NoLoc Lifted)),("b\8322\8327\8325\8324",(10,TyVarFree NoLoc Lifted)),("t\8323\8328\8325\8325",(11,TyVarFree NoLoc Lifted)),("a\8322\8326\8325\8326",(10,TyVarFree NoLoc Lifted)),("t\8322\8325\8325\8327",(9,TyVarFree NoLoc Lifted)),("t\8322\8324\8325\8328",(9,TyVarFree NoLoc Lifted)),("t\8321\8328\8325\8329",(7,TyVarFree NoLoc Lifted))]
## solution
([],[("a\8323",Right "(i32, i32)"),("b\8324",Right "i64"),("a\8325",Right "(i32, i32)"),("b\8326",Right "i64"),("x\8327",Right "((i32, i32), i64)"),("t\8321\8328",Right "[](i32, i32)"),("t\8321\8329",Right "[]i64"),("a\8322\8320",Right "i32"),("b\8322\8321",Right "i32"),("t\8322\8324",Right "[]i32"),("t\8322\8325",Right "[]i32"),("a\8322\8326",Right "[]i32"),("b\8322\8327",Right "[]i32"),("t\8323\8328",Right "[]i32"),("t\8323\8329",Right "bool"),("t\8324\8320",Right "bool"),("t\8325\8321",Right "[]bool"),("t\8325\8321\8325\8322",Right "bool"),("t\8321\8329\8325\8323",Right "i64"),("b\8322\8327\8325\8324",Right "i32"),("t\8323\8328\8325\8325",Right "i32"),("a\8322\8326\8325\8326",Right "i32"),("t\8322\8325\8325\8327",Right "i32"),("t\8322\8324\8325\8328",Right "i32"),("t\8321\8328\8325\8329",Right "(i32, i32)")])

# TySolve.solve
## constraints
"a\8321\8320\8324" ~ "[]a\8321\8320\8324\8321\8323\8321"
"b\8321\8320\8325" ~ "[]b\8321\8320\8325\8321\8323\8322"
"t\8321\8320\8323" ~ "[]t\8321\8320\8323\8321\8323\8323"
"t\8324" ~ "[]t\8324\8321\8323\8324"
"t\8325" ~ "[]t\8325\8321\8323\8325"
"t\8326" ~ "[]t\8326\8321\8323\8326"
"t\8327" ~ "[]t\8327\8321\8323\8327"
"t\8328" ~ "[]t\8328\8321\8323\8328"
"t\8329\8329" ~ "[]t\8329\8329\8321\8323\8329"
"t\8321\8320\8320" ~ "[]t\8321\8320\8320\8321\8324\8320"
"t\8321\8320\8321" ~ "[]t\8321\8320\8321\8321\8324\8321"
"t\8321\8320\8322" ~ "[]t\8321\8320\8322\8321\8324\8322"
"t\8329\8328" ~ "[]t\8329\8328\8321\8324\8323"
"t\8326\8328" ~ "[]t\8326\8328\8321\8324\8324"
"t\8326\8327" ~ "[]t\8326\8327\8321\8324\8325"
"t\8328\8326" ~ "[]t\8328\8326\8321\8324\8326"
"t\8329\8327" ~ "[]t\8329\8327\8321\8324\8327"
"t\8327\8328" ~ "[]t\8327\8328\8321\8324\8328"
"t\8327\8327" ~ "[]t\8327\8327\8321\8324\8329"
"a\8321\8328" ~ "[]a\8321\8328\8321\8325\8320"
"b\8322\8321" ~ "[]b\8322\8321\8321\8325\8321"
"a\8322\8320" ~ "[]a\8322\8320\8321\8325\8322"
"b\8322\8323" ~ "[]b\8322\8323\8321\8325\8323"
"a\8322\8322" ~ "[]a\8322\8322\8321\8325\8324"
"(t\8324, t\8325, t\8326, t\8327, t\8328)" ~ "([]i32, [](i32, i32), []i64, []i64, []bool)"
"t\8325" ~ "[]t\8321\8320"
"i64" ~ "t\8329"
"num\8321\8323" ~ "t\8329"
"t\8324" ~ "[]i32"
"(edge: (i32, i32)) -> (i32, i32)" ~ "a\8322\8324 -> x\8322\8325"
"t\8325" ~ "[]a\8322\8324"
"t\8326" ~ "[]a\8323\8322"
"[]x\8322\8325" ~ "a\8322\8322"
"(bs: []b\8323\8323) -> *[](a\8323\8322, b\8323\8323)" ~ "a\8322\8322 -> b\8322\8323"
"t\8324\8321" ~ "t\8324\8324"
"kt\8324\8323" ~ "t\8324\8326"
"t\8324\8321" ~ "t\8324\8328"
"kt\8324\8327" ~ "t\8325\8320"
"kt\8324\8325" ~ "t\8324\8322"
"kt\8324\8329" ~ "t\8324\8322"
"(e: t\8324\8321) -> bool" ~ "a\8324\8320 -> bool"
"b\8322\8323" ~ "a\8322\8320"
"(as: []a\8324\8320) -> ?[d\8322\8320].*[]a\8324\8320" ~ "a\8322\8320 -> b\8322\8321"
"b\8322\8321" ~ "a\8321\8328"
"(xs: [](a\8326\8321, b\8326\8322)) -> ([]a\8326\8321, []b\8326\8322)" ~ "a\8321\8328 -> b\8321\8329"
"(t\8326\8327, t\8326\8328)" ~ "b\8321\8329"
"t\8326\8328" ~ "[](i32, i32)"
"t\8326\8327" ~ "[]i64"
"i64" ~ "i64"
"i64" ~ "i64"
"(t\8327\8327, t\8327\8328)" ~ "([]i64, []i64)"
"t\8327" ~ "[]t\8327\8329"
"t\8327\8327" ~ "[]i64"
"t\8327\8328" ~ "[]t\8327\8329"
"t\8328\8326" ~ "[]t\8327\8329"
"t\8324" ~ "[]i32"
"t\8326\8328" ~ "[](i32, i32)"
"t\8326\8327" ~ "[]i64"
"t\8328\8326" ~ "[]i64"
"t\8328" ~ "[]bool"
"(t\8329\8327, t\8329\8328)" ~ "([]bool, []i32)"
"([]i32, [](i32, i32), []i64, []i64, []bool)" ~ "(t\8329\8328, t\8326\8328, t\8326\8327, t\8328\8326, t\8329\8327)"
"(t\8329\8329, t\8321\8320\8320, t\8321\8320\8321, t\8321\8320\8322, t\8321\8320\8323)" ~ "(t\8324, t\8325, t\8326, t\8327, t\8328)"
"a\8321\8320\8327" ~ "ft\8321\8320\8329"
"[]i64" ~ "[]a\8321\8321\8320"
"t\8321\8320\8323" ~ "[]b\8321\8321\8321"
"a\8321\8320\8327 -> b\8321\8320\8328" ~ "a\8321\8320\8326 -> bool"
"[](a\8321\8321\8320, b\8321\8321\8321)" ~ "[]a\8321\8320\8326"
"a\8321\8322\8322" ~ "ft\8321\8322\8324"
"a\8321\8322\8322 -> b\8321\8322\8323" ~ "a\8321\8322\8320 -> x\8321\8322\8321"
"[]a\8321\8320\8326" ~ "a\8321\8320\8324"
"(as: []a\8321\8322\8320) -> *[]x\8321\8322\8321" ~ "a\8321\8320\8324 -> b\8321\8320\8325"
## typarams
mempty
## tyvars
[("t\8324",(7,TyVarFree NoLoc Lifted)),("t\8325",(7,TyVarFree NoLoc Lifted)),("t\8326",(7,TyVarFree NoLoc Lifted)),("t\8327",(7,TyVarFree NoLoc Lifted)),("t\8328",(7,TyVarFree NoLoc Lifted)),("t\8329",(7,TyVarPrim NoLoc [Bool,Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8321\8320",(7,TyVarFree NoLoc Unlifted)),("num\8321\8323",(7,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("a\8321\8328",(7,TyVarFree NoLoc Lifted)),("b\8321\8329",(7,TyVarFree NoLoc Lifted)),("a\8322\8320",(7,TyVarFree NoLoc Lifted)),("b\8322\8321",(7,TyVarFree NoLoc Lifted)),("a\8322\8322",(7,TyVarFree NoLoc Lifted)),("b\8322\8323",(7,TyVarFree NoLoc Lifted)),("a\8322\8324",(7,TyVarFree NoLoc Unlifted)),("x\8322\8325",(7,TyVarFree NoLoc Unlifted)),("a\8323\8322",(7,TyVarFree NoLoc Unlifted)),("b\8323\8323",(7,TyVarFree NoLoc Unlifted)),("a\8324\8320",(7,TyVarFree NoLoc Unlifted)),("t\8324\8321",(8,TyVarFree NoLoc Lifted)),("t\8324\8322",(9,TyVarFree NoLoc Unlifted)),("kt\8324\8323",(9,TyVarFree NoLoc Lifted)),("t\8324\8324",(9,TyVarRecord NoLoc (fromList [(Name "1",Scalar (TypeVar NoUniqueness (QualName {qualQuals = [], qualLeaf = VName (Name "kt\8324\8323") 12240}) []))]))),("kt\8324\8325",(9,TyVarFree NoLoc Lifted)),("t\8324\8326",(9,TyVarRecord NoLoc (fromList [(Name "0",Scalar (TypeVar NoUniqueness (QualName {qualQuals = [], qualLeaf = VName (Name "kt\8324\8325") 12242}) []))]))),("kt\8324\8327",(9,TyVarFree NoLoc Lifted)),("t\8324\8328",(9,TyVarRecord NoLoc (fromList [(Name "1",Scalar (TypeVar NoUniqueness (QualName {qualQuals = [], qualLeaf = VName (Name "kt\8324\8327") 12244}) []))]))),("kt\8324\8329",(9,TyVarFree NoLoc Lifted)),("t\8325\8320",(9,TyVarRecord NoLoc (fromList [(Name "1",Scalar (TypeVar NoUniqueness (QualName {qualQuals = [], qualLeaf = VName (Name "kt\8324\8329") 12246}) []))]))),("a\8326\8321",(7,TyVarFree NoLoc Unlifted)),("b\8326\8322",(7,TyVarFree NoLoc Unlifted)),("t\8326\8327",(8,TyVarFree NoLoc Lifted)),("t\8326\8328",(8,TyVarFree NoLoc Lifted)),("t\8327\8327",(10,TyVarFree NoLoc Lifted)),("t\8327\8328",(10,TyVarFree NoLoc Lifted)),("t\8327\8329",(11,TyVarFree NoLoc Unlifted)),("t\8328\8326",(12,TyVarFree NoLoc Lifted)),("t\8329\8327",(14,TyVarFree NoLoc Lifted)),("t\8329\8328",(14,TyVarFree NoLoc Lifted)),("t\8329\8329",(8,TyVarFree NoLoc Lifted)),("t\8321\8320\8320",(8,TyVarFree NoLoc Lifted)),("t\8321\8320\8321",(8,TyVarFree NoLoc Lifted)),("t\8321\8320\8322",(8,TyVarFree NoLoc Lifted)),("t\8321\8320\8323",(8,TyVarFree NoLoc Lifted)),("a\8321\8320\8324",(9,TyVarFree NoLoc Lifted)),("b\8321\8320\8325",(9,TyVarFree NoLoc Lifted)),("a\8321\8320\8326",(9,TyVarFree NoLoc Unlifted)),("a\8321\8320\8327",(9,TyVarFree NoLoc Lifted)),("b\8321\8320\8328",(9,TyVarFree NoLoc Lifted)),("ft\8321\8320\8329",(9,TyVarRecord NoLoc (fromList [(Name "1",Scalar (TypeVar NoUniqueness (QualName {qualQuals = [], qualLeaf = VName (Name "b\8321\8320\8328") 12333}) []))]))),("a\8321\8321\8320",(9,TyVarFree NoLoc Unlifted)),("b\8321\8321\8321",(9,TyVarFree NoLoc Unlifted)),("a\8321\8322\8320",(9,TyVarFree NoLoc Unlifted)),("x\8321\8322\8321",(9,TyVarFree NoLoc Unlifted)),("a\8321\8322\8322",(9,TyVarFree NoLoc Lifted)),("b\8321\8322\8323",(9,TyVarFree NoLoc Lifted)),("ft\8321\8322\8324",(9,TyVarRecord NoLoc (fromList [(Name "0",Scalar (TypeVar NoUniqueness (QualName {qualQuals = [], qualLeaf = VName (Name "b\8321\8322\8323") 12356}) []))]))),("a\8321\8320\8324\8321\8323\8321",(9,TyVarFree NoLoc Lifted)),("b\8321\8320\8325\8321\8323\8322",(9,TyVarFree NoLoc Lifted)),("t\8321\8320\8323\8321\8323\8323",(8,TyVarFree NoLoc Lifted)),("t\8324\8321\8323\8324",(7,TyVarFree NoLoc Lifted)),("t\8325\8321\8323\8325",(7,TyVarFree NoLoc Lifted)),("t\8326\8321\8323\8326",(7,TyVarFree NoLoc Lifted)),("t\8327\8321\8323\8327",(7,TyVarFree NoLoc Lifted)),("t\8328\8321\8323\8328",(7,TyVarFree NoLoc Lifted)),("t\8329\8329\8321\8323\8329",(8,TyVarFree NoLoc Lifted)),("t\8321\8320\8320\8321\8324\8320",(8,TyVarFree NoLoc Lifted)),("t\8321\8320\8321\8321\8324\8321",(8,TyVarFree NoLoc Lifted)),("t\8321\8320\8322\8321\8324\8322",(8,TyVarFree NoLoc Lifted)),("t\8329\8328\8321\8324\8323",(14,TyVarFree NoLoc Lifted)),("t\8326\8328\8321\8324\8324",(8,TyVarFree NoLoc Lifted)),("t\8326\8327\8321\8324\8325",(8,TyVarFree NoLoc Lifted)),("t\8328\8326\8321\8324\8326",(12,TyVarFree NoLoc Lifted)),("t\8329\8327\8321\8324\8327",(14,TyVarFree NoLoc Lifted)),("t\8327\8328\8321\8324\8328",(10,TyVarFree NoLoc Lifted)),("t\8327\8327\8321\8324\8329",(10,TyVarFree NoLoc Lifted)),("a\8321\8328\8321\8325\8320",(7,TyVarFree NoLoc Lifted)),("b\8322\8321\8321\8325\8321",(7,TyVarFree NoLoc Lifted)),("a\8322\8320\8321\8325\8322",(7,TyVarFree NoLoc Lifted)),("b\8322\8323\8321\8325\8323",(7,TyVarFree NoLoc Lifted)),("a\8322\8322\8321\8325\8324",(7,TyVarFree NoLoc Lifted))]
## solution
([],[("t\8324",Right "[]i32"),("t\8325",Right "[](i32, i32)"),("t\8326",Right "[]i64"),("t\8327",Right "[]i64"),("t\8328",Right "[]bool"),("t\8329",Right "i64"),("t\8321\8320",Right "(i32, i32)"),("num\8321\8323",Right "i64"),("a\8321\8328",Right "[](i64, (i32, i32))"),("b\8321\8329",Right "([]i64, [](i32, i32))"),("a\8322\8320",Right "[](i64, (i32, i32))"),("b\8322\8321",Right "[](i64, (i32, i32))"),("a\8322\8322",Right "[](i32, i32)"),("b\8322\8323",Right "[](i64, (i32, i32))"),("a\8322\8324",Right "(i32, i32)"),("x\8322\8325",Right "(i32, i32)"),("a\8323\8322",Right "i64"),("b\8323\8323",Right "(i32, i32)"),("a\8324\8320",Right "(i64, (i32, i32))"),("t\8324\8321",Right "(i64, (i32, i32))"),("t\8324\8322",Right "i32"),("kt\8324\8323",Right "(i32, i32)"),("t\8324\8324",Right "(i64, (i32, i32))"),("kt\8324\8325",Right "i32"),("t\8324\8326",Right "(i32, i32)"),("kt\8324\8327",Right "(i32, i32)"),("t\8324\8328",Right "(i64, (i32, i32))"),("kt\8324\8329",Right "i32"),("t\8325\8320",Right "(i32, i32)"),("a\8326\8321",Right "i64"),("b\8326\8322",Right "(i32, i32)"),("t\8326\8327",Right "[]i64"),("t\8326\8328",Right "[](i32, i32)"),("t\8327\8327",Right "[]i64"),("t\8327\8328",Right "[]i64"),("t\8327\8329",Right "i64"),("t\8328\8326",Right "[]i64"),("t\8329\8327",Right "[]bool"),("t\8329\8328",Right "[]i32"),("t\8329\8329",Right "[]i32"),("t\8321\8320\8320",Right "[](i32, i32)"),("t\8321\8320\8321",Right "[]i64"),("t\8321\8320\8322",Right "[]i64"),("t\8321\8320\8323",Right "[]bool"),("a\8321\8320\8324",Right "[](i64, bool)"),("b\8321\8320\8325",Right "[]i64"),("a\8321\8320\8326",Right "(i64, bool)"),("a\8321\8320\8327",Right "(i64, bool)"),("b\8321\8320\8328",Right "bool"),("ft\8321\8320\8329",Right "(i64, bool)"),("a\8321\8321\8320",Right "i64"),("b\8321\8321\8321",Right "bool"),("a\8321\8322\8320",Right "(i64, bool)"),("x\8321\8322\8321",Right "i64"),("a\8321\8322\8322",Right "(i64, bool)"),("b\8321\8322\8323",Right "i64"),("ft\8321\8322\8324",Right "(i64, bool)"),("a\8321\8320\8324\8321\8323\8321",Right "(i64, bool)"),("b\8321\8320\8325\8321\8323\8322",Right "i64"),("t\8321\8320\8323\8321\8323\8323",Right "bool"),("t\8324\8321\8323\8324",Right "i32"),("t\8325\8321\8323\8325",Right "(i32, i32)"),("t\8326\8321\8323\8326",Right "i64"),("t\8327\8321\8323\8327",Right "i64"),("t\8328\8321\8323\8328",Right "bool"),("t\8329\8329\8321\8323\8329",Right "i32"),("t\8321\8320\8320\8321\8324\8320",Right "(i32, i32)"),("t\8321\8320\8321\8321\8324\8321",Right "i64"),("t\8321\8320\8322\8321\8324\8322",Right "i64"),("t\8329\8328\8321\8324\8323",Right "i32"),("t\8326\8328\8321\8324\8324",Right "(i32, i32)"),("t\8326\8327\8321\8324\8325",Right "i64"),("t\8328\8326\8321\8324\8326",Right "i64"),("t\8329\8327\8321\8324\8327",Right "bool"),("t\8327\8328\8321\8324\8328",Right "i64"),("t\8327\8327\8321\8324\8329",Right "i64"),("a\8321\8328\8321\8325\8320",Right "(i64, (i32, i32))"),("b\8322\8321\8321\8325\8321",Right "(i64, (i32, i32))"),("a\8322\8320\8321\8325\8322",Right "(i64, (i32, i32))"),("b\8322\8323\8321\8325\8323",Right "(i64, (i32, i32))"),("a\8322\8322\8321\8325\8324",Right "(i32, i32)")])

# TySolve.solve
## constraints
"t\8329\8323" ~ "[]t\8329\8323\8321\8321\8324"
"t\8328\8327" ~ "[]t\8328\8327\8321\8321\8325"
"t\8328\8321" ~ "[]t\8328\8321\8321\8321\8326"
"t\8325\8321" ~ "[]t\8325\8321\8321\8321\8327"
"t\8328\8320" ~ "[]t\8328\8320\8321\8321\8328"
"t\8321\8320\8321" ~ "[]t\8321\8320\8321\8321\8321\8329"
"a\8325\8322" ~ "[]a\8325\8322\8321\8322\8320"
"b\8325\8325" ~ "[]b\8325\8325\8321\8322\8321"
"a\8325\8324" ~ "[]a\8325\8324\8321\8322\8322"
"t\8324\8328" ~ "[]t\8324\8328\8321\8322\8323"
"t\8324\8325" ~ "[]t\8324\8325\8321\8322\8324"
"a\8323\8320" ~ "[]a\8323\8320\8321\8322\8325"
"t\8323\8322" ~ "[]t\8323\8322\8321\8322\8326"
"a\8325" ~ "[]a\8325\8321\8322\8327"
"num\8320" ~ "i64"
"[][]i32" ~ "[][]t\8327"
"[]t\8327" ~ "a\8325"
"[]i32 -> i32" ~ "a\8325 -> b\8326"
"t\8321\8326" ~ "t\8321\8324"
"num\8321\8325" ~ "t\8321\8324"
"b\8326" ~ "a\8323"
"t\8321\8326 -> t\8321\8324" ~ "a\8323 -> b\8324"
"b\8324" ~ "a\8321"
"i32 -> i64" ~ "a\8321 -> b\8322"
"t\8322\8329" ~ "b\8322"
"t\8323\8324" ~ "num\8323\8323"
"index\8323\8325" ~ "index_elem\8323\8326"
"t\8323\8322" ~ "[]index_elem\8323\8326"
"t\8323\8328" ~ "num\8323\8327"
"index\8323\8329" ~ "index_elem\8324\8320"
"t\8323\8322" ~ "[]index_elem\8324\8320"
"(e: t\8323\8322) -> (index\8323\8325, index\8323\8329)" ~ "a\8323\8320 -> x\8323\8321"
"[][]i32" ~ "[]a\8323\8320"
"t\8324\8325" ~ "[]x\8323\8321"
"i64" ~ "i64"
"t\8324\8328" ~ "[]i64"
"i64" ~ "i64"
"t\8325\8321" ~ "[]i64"
"[]f64" ~ "[]a\8325\8326"
"t\8324\8325" ~ "[]b\8325\8327"
"t\8324\8328" ~ "[]c\8325\8328"
"(a: (f64, (i32, i32), i64)) -> (b: (f64, (i32, i32), i64)) -> bool" ~ "t\8326\8325 -> t\8326\8325 -> bool"
"[](a\8325\8326, b\8325\8327, c\8325\8328)" ~ "a\8325\8324"
"(s: []t\8326\8325) -> []t\8326\8325" ~ "a\8325\8324 -> b\8325\8325"
"b\8325\8325" ~ "a\8325\8322"
"(xs: [](a\8327\8322, b\8327\8323, c\8327\8324)) -> ([]a\8327\8322, []b\8327\8323, []c\8327\8324)" ~ "a\8325\8322 -> b\8325\8323"
"(t\8327\8329, t\8328\8320, t\8328\8321)" ~ "b\8325\8323"
"t\8322\8329" ~ "i64"
"i64" ~ "t\8328\8322"
"t\8328\8327" ~ "[]t\8328\8322"
"i64" ~ "i64"
"bool" ~ "t\8328\8328"
"t\8329\8323" ~ "[]t\8328\8328"
"t\8329\8326" ~ "num\8329\8325"
"i64" ~ "i64"
"num\8329\8325" ~ "t\8329\8324"
"t\8321\8320\8321" ~ "[]t\8329\8324"
"t\8321\8320\8321" ~ "[]i32"
"t\8328\8320" ~ "[](i32, i32)"
"t\8325\8321" ~ "[]i64"
"t\8328\8321" ~ "[]i64"
"t\8328\8327" ~ "[]i64"
"t\8329\8323" ~ "[]bool"
## typarams
mempty
## tyvars
[("num\8320",(1,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("a\8321",(3,TyVarFree NoLoc Lifted)),("b\8322",(3,TyVarFree NoLoc Lifted)),("a\8323",(3,TyVarFree NoLoc Lifted)),("b\8324",(3,TyVarFree NoLoc Lifted)),("a\8325",(3,TyVarFree NoLoc Lifted)),("b\8326",(3,TyVarFree NoLoc Lifted)),("t\8327",(3,TyVarFree NoLoc Unlifted)),("t\8321\8324",(3,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("num\8321\8325",(3,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8321\8326",(3,TyVarFree NoLoc Lifted)),("t\8322\8329",(4,TyVarFree NoLoc Lifted)),("a\8323\8320",(5,TyVarFree NoLoc Unlifted)),("x\8323\8321",(5,TyVarFree NoLoc Unlifted)),("t\8323\8322",(6,TyVarFree NoLoc Lifted)),("num\8323\8323",(7,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8323\8324",(7,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64])),("index\8323\8325",(7,TyVarFree NoLoc Unlifted)),("index_elem\8323\8326",(7,TyVarFree NoLoc Unlifted)),("num\8323\8327",(7,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8323\8328",(7,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64])),("index\8323\8329",(7,TyVarFree NoLoc Unlifted)),("index_elem\8324\8320",(7,TyVarFree NoLoc Unlifted)),("t\8324\8325",(6,TyVarFree NoLoc Lifted)),("t\8324\8328",(8,TyVarFree NoLoc Lifted)),("t\8325\8321",(10,TyVarFree NoLoc Lifted)),("a\8325\8322",(11,TyVarFree NoLoc Lifted)),("b\8325\8323",(11,TyVarFree NoLoc Lifted)),("a\8325\8324",(11,TyVarFree NoLoc Lifted)),("b\8325\8325",(11,TyVarFree NoLoc Lifted)),("a\8325\8326",(11,TyVarFree NoLoc Unlifted)),("b\8325\8327",(11,TyVarFree NoLoc Unlifted)),("c\8325\8328",(11,TyVarFree NoLoc Unlifted)),("t\8326\8325",(11,TyVarFree NoLoc Unlifted)),("a\8327\8322",(11,TyVarFree NoLoc Unlifted)),("b\8327\8323",(11,TyVarFree NoLoc Unlifted)),("c\8327\8324",(11,TyVarFree NoLoc Unlifted)),("t\8327\8329",(12,TyVarFree NoLoc Lifted)),("t\8328\8320",(12,TyVarFree NoLoc Lifted)),("t\8328\8321",(12,TyVarFree NoLoc Lifted)),("t\8328\8322",(13,TyVarFree NoLoc Unlifted)),("t\8328\8327",(14,TyVarFree NoLoc Lifted)),("t\8328\8328",(15,TyVarFree NoLoc Unlifted)),("t\8329\8323",(16,TyVarFree NoLoc Lifted)),("t\8329\8324",(17,TyVarFree NoLoc Unlifted)),("num\8329\8325",(17,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8329\8326",(17,TyVarPrim NoLoc [Signed Int8,Signed Int16,Signed Int32,Signed Int64,Unsigned Int8,Unsigned Int16,Unsigned Int32,Unsigned Int64,FloatType Float16,FloatType Float32,FloatType Float64])),("t\8321\8320\8321",(18,TyVarFree NoLoc Lifted)),("t\8329\8323\8321\8321\8324",(16,TyVarFree NoLoc Lifted)),("t\8328\8327\8321\8321\8325",(14,TyVarFree NoLoc Lifted)),("t\8328\8321\8321\8321\8326",(12,TyVarFree NoLoc Lifted)),("t\8325\8321\8321\8321\8327",(10,TyVarFree NoLoc Lifted)),("t\8328\8320\8321\8321\8328",(12,TyVarFree NoLoc Lifted)),("t\8321\8320\8321\8321\8321\8329",(18,TyVarFree NoLoc Lifted)),("a\8325\8322\8321\8322\8320",(11,TyVarFree NoLoc Lifted)),("b\8325\8325\8321\8322\8321",(11,TyVarFree NoLoc Lifted)),("a\8325\8324\8321\8322\8322",(11,TyVarFree NoLoc Lifted)),("t\8324\8328\8321\8322\8323",(8,TyVarFree NoLoc Lifted)),("t\8324\8325\8321\8322\8324",(6,TyVarFree NoLoc Lifted)),("a\8323\8320\8321\8322\8325",(5,TyVarFree NoLoc Unlifted)),("t\8323\8322\8321\8322\8326",(6,TyVarFree NoLoc Lifted)),("a\8325\8321\8322\8327",(3,TyVarFree NoLoc Lifted))]
## solution
([],[("num\8320",Right "i64"),("a\8321",Right "i32"),("b\8322",Right "i64"),("a\8323",Right "i32"),("b\8324",Right "i32"),("a\8325",Right "[]i32"),("b\8326",Right "i32"),("t\8327",Right "i32"),("t\8321\8324",Right "i32"),("num\8321\8325",Right "i32"),("t\8321\8326",Right "i32"),("t\8322\8329",Right "i64"),("a\8323\8320",Right "[]i32"),("x\8323\8321",Right "(i32, i32)"),("t\8323\8322",Right "[]i32"),("num\8323\8323",Left "[i8, i16, i32, i64]"),("t\8323\8324",Left "[i8, i16, i32, i64]"),("index\8323\8325",Right "i32"),("index_elem\8323\8326",Right "i32"),("num\8323\8327",Left "[i8, i16, i32, i64]"),("t\8323\8328",Left "[i8, i16, i32, i64]"),("index\8323\8329",Right "i32"),("index_elem\8324\8320",Right "i32"),("t\8324\8325",Right "[](i32, i32)"),("t\8324\8328",Right "[]i64"),("t\8325\8321",Right "[]i64"),("a\8325\8322",Right "[](f64, (i32, i32), i64)"),("b\8325\8323",Right "([]f64, [](i32, i32), []i64)"),("a\8325\8324",Right "[](f64, (i32, i32), i64)"),("b\8325\8325",Right "[](f64, (i32, i32), i64)"),("a\8325\8326",Right "f64"),("b\8325\8327",Right "(i32, i32)"),("c\8325\8328",Right "i64"),("t\8326\8325",Right "(f64, (i32, i32), i64)"),("a\8327\8322",Right "f64"),("b\8327\8323",Right "(i32, i32)"),("c\8327\8324",Right "i64"),("t\8327\8329",Right "[]f64"),("t\8328\8320",Right "[](i32, i32)"),("t\8328\8321",Right "[]i64"),("t\8328\8322",Right "i64"),("t\8328\8327",Right "[]i64"),("t\8328\8328",Right "bool"),("t\8329\8323",Right "[]bool"),("t\8329\8324",Right "i32"),("num\8329\8325",Right "i32"),("t\8329\8326",Right "i32"),("t\8321\8320\8321",Right "[]i32"),("t\8329\8323\8321\8321\8324",Right "bool"),("t\8328\8327\8321\8321\8325",Right "i64"),("t\8328\8321\8321\8321\8326",Right "i64"),("t\8325\8321\8321\8321\8327",Right "i64"),("t\8328\8320\8321\8321\8328",Right "(i32, i32)"),("t\8321\8320\8321\8321\8321\8329",Right "i32"),("a\8325\8322\8321\8322\8320",Right "(f64, (i32, i32), i64)"),("b\8325\8325\8321\8322\8321",Right "(f64, (i32, i32), i64)"),("a\8325\8324\8321\8322\8322",Right "(f64, (i32, i32), i64)"),("t\8324\8328\8321\8322\8323",Right "i64"),("t\8324\8325\8321\8322\8324",Right "(i32, i32)"),("a\8323\8320\8321\8322\8325",Right "i32"),("t\8323\8322\8321\8322\8326",Right "i32"),("a\8325\8321\8322\8327",Right "i32")])

